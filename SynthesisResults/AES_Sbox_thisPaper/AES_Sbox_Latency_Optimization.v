// Auto-generated by CircuitOptimizer::exportVerilog
// This netlist includes all gates (tXX) recorded so far.

module AES_SBOX_TGATES(
    input  wire X0, X1, X2, X3, X4, X5, X6, X7,
    output wire Y0, Y1, Y2, Y3, Y4, Y5, Y6, Y7
);

  // Internal wires (auto-generated)
  wire t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76, t77, t78, t79, t80, t81, t82, t83, t84, t85, t86, t87, t88, t89, t90, t91, t92, t93, t94, t95, t96, t97, t98, t99, t100, t101, t102, t103, t104, t105, t106, t107, t108, t109, t110, t111, t112, t113, t114, t115, t116, t117, t118, t119, t120, t121, t122, t123, t124, t125, t126, t127, t128, t129, t130, t131, t132, t133, t134, t135, t136, t137, t138, t139, t140, t141, t142, t143, t144, t145, t146, t147, t148, t149, t150, t151, t152, t153, t154, t155, t156, t157, t158, t159, t160, t161, t162, t163, t164, t165, t166, t167, t168, t169, t170, t171, t172, t173, t174, t175, t176, t177, t178, t179, t180, t181, t182, t183, t184, t185, t186, t187, t188, t189, t190, t191, t192, t193, t194, t195, t196, t197, t198, t199, t200, t201, t202, t203, t204, t205, t206, t207, t208, t209, t210, t211, t212, t213, t214, t215, t216, t217, t218, t219, t220, t221, t222, t223, t224, t225, t226, t227, t228, t229, t230, t231, t232, t233, t234, t235, t236, t237, t238, t239, t240, t241, t242, t243, t244, t245, t246, t247, t248, t249, t250, t251, t252, t253, t254, t255, t256, t257, t258, t259, t260, t261, t262, t263, t264, t265, t266, t267, t268, t269, t270, t271, t272, t273, t274, t275, t276, t277, t278, t279, t280, t281, t282, t283, t284, t285, t286, t287, t288, t289, t290, t291, t292, t293, t294, t295, t296, t297, t298, t299, t300, t301, t302, t303, t304, t305, t306, t307, t308, t309, t310, t311, t312, t313, t314, t315, t316, t317, t318, t319, t320, t321, t322, t323, t324, t325, t326, t327, t328, t329, t330, t331, t332, t333, t334, t335, t336, t337, t338, t339, t340, t341, t342, t343, t344, t345, t346, t347, t348, t349, t350, t351, t352, t353, t354, t355, t356, t357, t358, t359, t360, t361, t362, t363, t364, t365, t366, t367, t368, t369, t370, t371, t372, t373, t374, t375, t376, t377, t378, t379, t380, t381, t382, t383, t384, t385, t386, t387, t388, t389, t390, t391, t392, t393, t394, t395, t396, t397, t398, t399, t400, t401, t402, t403, t404, t405, t406, t407, t408, t409, t410, t411, t412, t413, t414, t415, t416, t417, t418, t419, t420, t421, t422, t423, t424, t425, t426, t427, t428, t429, t430, t431, t432, t433, t434, t435, t436, t437, t438, t439, t440, t441, t442, t443, t444, t445, t446, t447, t448, t449, t450, t451, t452, t453, t454, t455, t456, t457, t458, t459, t460, t461, t462, t463, t464, t465, t466, t467, t468, t469, t470, t471, t472, t473, t474, t475, t476, t477, t478, t479, t480, t481, t482, t483, t484, t485, t486, t487, t488, t489, t490, t491, t492, t493, t494, t495, t496, t497, t498, t499, t500, t501, t502, t503, t504, t505, t506, t507, t508, t509, t510, t511, t512, t513, t514, t515, t516, t517, t518, t519, t520, t521, t522, t523, t524, t525, t526, t527, t528, t529, t530, t531, t532, t533, t534, t535, t536, t537, t538, t539, t540, t541, t542, t543, t544, t545, t546, t547, t548, t549, t550, t551, t552, t553, t554, t555, t556, t557, t558, t559, t560, t561, t562, t563, t564, t565, t566, t567, t568, t569, t570, t571, t572, t573, t574, t575, t576, t577, t578, t579, t580, t581, t582, t583, t584, t585, t586, t587, t588, t589, t590, t591, t592, t593, t594, t595, t596, t597, t598, t599, t600, t601, t602, t603, t604, t605, t606, t607, t608, t609, t610, t611, t612, t613, t614, t615, t616, t617, t618, t619, t620, t621, t622, t623, t624, t625, t626, t627, t628, t629, t630, t631, t632, t633, t634, t635, t636, t637, t638, t639, t640, t641, t642, t643, t644, t645, t646, t647, t648, t649, t650, t651, t652, t653, t654, t655, t656, t657, t658, t659, t660, t661, t662, t663, t664, t665, t666, t667, t668, t669, t670, t671, t672, t673, t674, t675, t676, t677, t678, t679, t680, t681, t682, t683, t684, t685, t686, t687, t688, t689, t690, t691, t692, t693, t694, t695, t696, t697, t698, t699, t700, t701, t702, t703, t704, t705, t706, t707, t708, t709, t710, t711, t712, t713, t714, t715, t716, t717, t718, t719, t720, t721, t722, t723, t724, t725, t726, t727, t728, t729, t730, t731, t732, t733, t734, t735, t736, t737, t738, t739, t740, t741, t742, t743, t744, t745, t746, t747, t748, t749, t750, t751, t752, t753, t754, t755, t756, t757, t758, t759, t760, t761, t762, t763, t764, t765, t766, t767, t768, t769, t770, t771, t772, t773, t774, t775, t776, t777, t778, t779, t780, t781, t782, t783, t784, t785, t786, t787, t788, t789, t790, t791, t792, t793, t794, t795, t796, t797, t798, t799, t800, t801, t802, t803, t804, t805, t806, t807, t808, t809, t810, t811, t812, t813, t814, t815, t816, t817, t818, t819, t820, t821, t822, t823, t824, t825, t826, t827, t828, t829, t830, t831, t832, t833, t834, t835, t836, t837, t838, t839, t840, t841, t842, t843, t844, t845, t846, t847, t848, t849, t850, t851, t852, t853, t854, t855, t856, t857, t858, t859, t860, t861, t862, t863, t864, t865, t866, t867, t868, t869, t870, t871, t872, t873, t874, t875, t876, t877, t878, t879, t880, t881, t882, t883, t884, t885, t886, t887, t888, t889, t890, t891, t892, t893, t894, t895, t896, t897, t898, t899, t900, t901, t902, t903, t904, t905, t906, t907, t908, t909, t910, t911, t912, t913, t914, t915, t916, t917, t918, t919, t920, t921, t922, t923, t924, t925, t926, t927, t928, t929, t930, t931;

  // ========== Gates ==========
  // depth 0  NOT(x3) -> (x3+1)
  assign t0 = ~X3;

  // depth 0  NOT(x5) -> (x5+1)
  assign t1 = ~X5;

  // depth 1  AND(x0, x1) -> (x0x1)
  assign t2 = (X0 & X1);

  // depth 1  AND(x2, x4) -> (x2x4)
  assign t3 = (X2 & X4);

  // depth 1  AND(t0, t1) -> ((x3+1)(x5+1))
  assign t4 = (t0 & t1);

  // depth 2  AND(t2, t3) -> ((x0x1)(x2x4))
  assign t5 = (t2 & t3);

  // depth 3  AND(t5, t4) -> (((x0x1)(x2x4))((x3+1)(x5+1)))
  assign t6 = (t5 & t4);

  // depth 0  NOT(x6) -> (x6+1)
  assign t7 = ~X6;

  // depth 0  NOT(x7) -> (x7+1)
  assign t8 = ~X7;

  // depth 1  AND(x2, x3) -> (x2x3)
  assign t9 = (X2 & X3);

  // depth 1  AND(t7, t8) -> ((x6+1)(x7+1))
  assign t10 = (t7 & t8);

  // depth 2  AND(t2, t9) -> ((x0x1)(x2x3))
  assign t11 = (t2 & t9);

  // depth 3  AND(t11, t10) -> (((x0x1)(x2x3))((x6+1)(x7+1)))
  assign t12 = (t11 & t10);

  // depth 0  NOT(x1) -> (x1+1)
  assign t13 = ~X1;

  // depth 1  AND(x0, x2) -> (x0x2)
  assign t14 = (X0 & X2);

  // depth 1  AND(x4, x7) -> (x4x7)
  assign t15 = (X4 & X7);

  // depth 1  AND(t13, t1) -> ((x1+1)(x5+1))
  assign t16 = (t13 & t1);

  // depth 2  AND(t14, t15) -> ((x0x2)(x4x7))
  assign t17 = (t14 & t15);

  // depth 3  AND(t17, t16) -> (((x0x2)(x4x7))((x1+1)(x5+1)))
  assign t18 = (t17 & t16);

  // depth 0  NOT(x2) -> (x2+1)
  assign t19 = ~X2;

  // depth 1  AND(x4, x6) -> (x4x6)
  assign t20 = (X4 & X6);

  // depth 1  AND(t19, t8) -> ((x2+1)(x7+1))
  assign t21 = (t19 & t8);

  // depth 2  AND(t2, t20) -> ((x0x1)(x4x6))
  assign t22 = (t2 & t20);

  // depth 3  AND(t22, t21) -> (((x0x1)(x4x6))((x2+1)(x7+1)))
  assign t23 = (t22 & t21);

  // depth 0  NOT(x4) -> (x4+1)
  assign t24 = ~X4;

  // depth 1  AND(x3, x5) -> (x3x5)
  assign t25 = (X3 & X5);

  // depth 1  AND(t24, t7) -> ((x4+1)(x6+1))
  assign t26 = (t24 & t7);

  // depth 2  AND(t2, t25) -> ((x0x1)(x3x5))
  assign t27 = (t2 & t25);

  // depth 3  AND(t27, t26) -> (((x0x1)(x3x5))((x4+1)(x6+1)))
  assign t28 = (t27 & t26);

  // depth 0  NOT(x0) -> (x0+1)
  assign t29 = ~X0;

  // depth 1  AND(x1, x3) -> (x1x3)
  assign t30 = (X1 & X3);

  // depth 1  AND(x6, x7) -> (x6x7)
  assign t31 = (X6 & X7);

  // depth 1  AND(t29, t24) -> ((x0+1)(x4+1))
  assign t32 = (t29 & t24);

  // depth 2  AND(t30, t31) -> ((x1x3)(x6x7))
  assign t33 = (t30 & t31);

  // depth 3  AND(t33, t32) -> (((x1x3)(x6x7))((x0+1)(x4+1)))
  assign t34 = (t33 & t32);

  // depth 1  AND(x0, x3) -> (x0x3)
  assign t35 = (X0 & X3);

  // depth 1  AND(t19, t7) -> ((x2+1)(x6+1))
  assign t36 = (t19 & t7);

  // depth 2  AND(t35, t15) -> ((x0x3)(x4x7))
  assign t37 = (t35 & t15);

  // depth 3  AND(t37, t36) -> (((x0x3)(x4x7))((x2+1)(x6+1)))
  assign t38 = (t37 & t36);

  // depth 1  AND(x5, x6) -> (x5x6)
  assign t39 = (X5 & X6);

  // depth 1  AND(t0, t8) -> ((x3+1)(x7+1))
  assign t40 = (t0 & t8);

  // depth 2  AND(t14, t39) -> ((x0x2)(x5x6))
  assign t41 = (t14 & t39);

  // depth 3  AND(t41, t40) -> (((x0x2)(x5x6))((x3+1)(x7+1)))
  assign t42 = (t41 & t40);

  // depth 1  AND(x5, x7) -> (x5x7)
  assign t43 = (X5 & X7);

  // depth 2  AND(t35, t43) -> ((x0x3)(x5x7))
  assign t44 = (t35 & t43);

  // depth 3  AND(t44, t26) -> (((x0x3)(x5x7))((x4+1)(x6+1)))
  assign t45 = (t44 & t26);

  // depth 1  AND(x1, x2) -> (x1x2)
  assign t46 = (X1 & X2);

  // depth 2  AND(t46, t25) -> ((x1x2)(x3x5))
  assign t47 = (t46 & t25);

  // depth 3  AND(t47, t10) -> (((x1x2)(x3x5))((x6+1)(x7+1)))
  assign t48 = (t47 & t10);

  // depth 1  AND(x1, x4) -> (x1x4)
  assign t49 = (X1 & X4);

  // depth 2  AND(t49, t39) -> ((x1x4)(x5x6))
  assign t50 = (t49 & t39);

  // depth 3  AND(t50, t40) -> (((x1x4)(x5x6))((x3+1)(x7+1)))
  assign t51 = (t50 & t40);

  // depth 2  AND(t3, t39) -> ((x2x4)(x5x6))
  assign t52 = (t3 & t39);

  // depth 3  AND(t52, t40) -> (((x2x4)(x5x6))((x3+1)(x7+1)))
  assign t53 = (t52 & t40);

  // depth 1  AND(x2, x5) -> (x2x5)
  assign t54 = (X2 & X5);

  // depth 1  AND(x7, t0) -> (x7(x3+1))
  assign t55 = (X7 & t0);

  // depth 2  AND(t2, t54) -> ((x0x1)(x2x5))
  assign t56 = (t2 & t54);

  // depth 3  AND(t56, t55) -> (((x0x1)(x2x5))(x7(x3+1)))
  assign t57 = (t56 & t55);

  // depth 1  AND(x3, x4) -> (x3x4)
  assign t58 = (X3 & X4);

  // depth 1  AND(x6, t19) -> (x6(x2+1))
  assign t59 = (X6 & t19);

  // depth 2  AND(t2, t58) -> ((x0x1)(x3x4))
  assign t60 = (t2 & t58);

  // depth 3  AND(t60, t59) -> (((x0x1)(x3x4))(x6(x2+1)))
  assign t61 = (t60 & t59);

  // depth 1  AND(x7, t13) -> (x7(x1+1))
  assign t62 = (X7 & t13);

  // depth 2  AND(t14, t20) -> ((x0x2)(x4x6))
  assign t63 = (t14 & t20);

  // depth 3  AND(t63, t62) -> (((x0x2)(x4x6))(x7(x1+1)))
  assign t64 = (t63 & t62);

  // depth 1  AND(x4, x5) -> (x4x5)
  assign t65 = (X4 & X5);

  // depth 2  AND(t2, t65) -> ((x0x1)(x4x5))
  assign t66 = (t2 & t65);

  // depth 3  AND(t66, t59) -> (((x0x1)(x4x5))(x6(x2+1)))
  assign t67 = (t66 & t59);

  // depth 2  AND(t2, t39) -> ((x0x1)(x5x6))
  assign t68 = (t2 & t39);

  // depth 3  AND(t68, t55) -> (((x0x1)(x5x6))(x7(x3+1)))
  assign t69 = (t68 & t55);

  // depth 2  AND(t43, t19) -> ((x5x7)(x2+1))
  assign t70 = (t43 & t19);

  // depth 3  AND(t60, t70) -> (((x0x1)(x3x4))((x5x7)(x2+1)))
  assign t71 = (t60 & t70);

  // depth 1  AND(x2, x6) -> (x2x6)
  assign t72 = (X2 & X6);

  // depth 1  AND(t29, t13) -> ((x0+1)(x1+1))
  assign t73 = (t29 & t13);

  // depth 2  AND(t72, t73) -> ((x2x6)((x0+1)(x1+1)))
  assign t74 = (t72 & t73);

  // depth 1  AND(x0, x5) -> (x0x5)
  assign t75 = (X0 & X5);

  // depth 1  AND(t13, t7) -> ((x1+1)(x6+1))
  assign t76 = (t13 & t7);

  // depth 2  AND(t75, t76) -> ((x0x5)((x1+1)(x6+1)))
  assign t77 = (t75 & t76);

  // depth 1  AND(x3, x6) -> (x3x6)
  assign t78 = (X3 & X6);

  // depth 1  AND(t29, t19) -> ((x0+1)(x2+1))
  assign t79 = (t29 & t19);

  // depth 2  AND(t78, t79) -> ((x3x6)((x0+1)(x2+1)))
  assign t80 = (t78 & t79);

  // depth 2  AND(t20, t79) -> ((x4x6)((x0+1)(x2+1)))
  assign t81 = (t20 & t79);

  // depth 1  AND(t29, t0) -> ((x0+1)(x3+1))
  assign t82 = (t29 & t0);

  // depth 2  AND(t65, t82) -> ((x4x5)((x0+1)(x3+1)))
  assign t83 = (t65 & t82);

  // depth 1  AND(x0, x7) -> (x0x7)
  assign t84 = (X0 & X7);

  // depth 1  AND(t24, t1) -> ((x4+1)(x5+1))
  assign t85 = (t24 & t1);

  // depth 2  AND(t84, t85) -> ((x0x7)((x4+1)(x5+1)))
  assign t86 = (t84 & t85);

  // depth 1  AND(t19, t0) -> ((x2+1)(x3+1))
  assign t87 = (t19 & t0);

  // depth 2  AND(t49, t87) -> ((x1x4)((x2+1)(x3+1)))
  assign t88 = (t49 & t87);

  // depth 1  AND(t13, t19) -> ((x1+1)(x2+1))
  assign t89 = (t13 & t19);

  // depth 2  AND(t15, t89) -> ((x4x7)((x1+1)(x2+1)))
  assign t90 = (t15 & t89);

  // depth 2  AND(t31, t89) -> ((x6x7)((x1+1)(x2+1)))
  assign t91 = (t31 & t89);

  // depth 1  AND(x3, x7) -> (x3x7)
  assign t92 = (X3 & X7);

  // depth 1  AND(t13, t24) -> ((x1+1)(x4+1))
  assign t93 = (t13 & t24);

  // depth 2  AND(t92, t93) -> ((x3x7)((x1+1)(x4+1)))
  assign t94 = (t92 & t93);

  // depth 1  AND(t19, t24) -> ((x2+1)(x4+1))
  assign t95 = (t19 & t24);

  // depth 2  AND(t43, t95) -> ((x5x7)((x2+1)(x4+1)))
  assign t96 = (t43 & t95);

  // depth 2  AND(t78, t85) -> ((x3x6)((x4+1)(x5+1)))
  assign t97 = (t78 & t85);

  // depth 1  AND(t0, t24) -> ((x3+1)(x4+1))
  assign t98 = (t0 & t24);

  // depth 2  AND(t31, t98) -> ((x6x7)((x3+1)(x4+1)))
  assign t99 = (t31 & t98);

  // depth 1  AND(x5, t29) -> (x5(x0+1))
  assign t100 = (X5 & t29);

  // depth 2  AND(t9, t100) -> ((x2x3)(x5(x0+1)))
  assign t101 = (t9 & t100);

  // depth 1  AND(x0, x6) -> (x0x6)
  assign t102 = (X0 & X6);

  // depth 1  AND(x7, t1) -> (x7(x5+1))
  assign t103 = (X7 & t1);

  // depth 2  AND(t102, t103) -> ((x0x6)(x7(x5+1)))
  assign t104 = (t102 & t103);

  // depth 1  AND(x5, t19) -> (x5(x2+1))
  assign t105 = (X5 & t19);

  // depth 2  AND(t49, t105) -> ((x1x4)(x5(x2+1)))
  assign t106 = (t49 & t105);

  // depth 2  AND(t25, t62) -> ((x3x5)(x7(x1+1)))
  assign t107 = (t25 & t62);

  // depth 1  AND(x6, t8) -> (x6(x7+1))
  assign t108 = (X6 & t8);

  // depth 2  AND(t54, t108) -> ((x2x5)(x6(x7+1)))
  assign t109 = (t54 & t108);

  // depth 2  AND(t58, t43) -> ((x3x4)(x5x7))
  assign t110 = (t58 & t43);

  // depth 3  AND(t110, t7) -> (((x3x4)(x5x7))(x6+1))
  assign t111 = (t110 & t7);

  // depth 1  AND(x1, x7) -> (x1x7)
  assign t112 = (X1 & X7);

  // depth 1  AND(x2, x7) -> (x2x7)
  assign t113 = (X2 & X7);

  // depth 2  AND(t2, x3) -> ((x0x1)x3)
  assign t114 = (t2 & X3);

  // depth 2  AND(t2, x7) -> ((x0x1)x7)
  assign t115 = (t2 & X7);

  // depth 2  AND(t14, x7) -> ((x0x2)x7)
  assign t116 = (t14 & X7);

  // depth 2  AND(t35, x7) -> ((x0x3)x7)
  assign t117 = (t35 & X7);

  // depth 1  AND(x1, x5) -> (x1x5)
  assign t118 = (X1 & X5);

  // depth 2  AND(t118, x6) -> ((x1x5)x6)
  assign t119 = (t118 & X6);

  // depth 2  AND(t9, x4) -> ((x2x3)x4)
  assign t120 = (t9 & X4);

  // depth 2  AND(t9, x7) -> ((x2x3)x7)
  assign t121 = (t9 & X7);

  // depth 2  AND(t35, t39) -> ((x0x3)(x5x6))
  assign t122 = (t35 & t39);

  // depth 2  AND(t30, t65) -> ((x1x3)(x4x5))
  assign t123 = (t30 & t65);

  // depth 2  AND(t49, t31) -> ((x1x4)(x6x7))
  assign t124 = (t49 & t31);

  // depth 2  AND(t3, t31) -> ((x2x4)(x6x7))
  assign t125 = (t3 & t31);

  // depth 1  AND(x0, x4) -> (x0x4)
  assign t126 = (X0 & X4);

  // depth 2  AND(t126, t39) -> ((x0x4)(x5x6))
  assign t127 = (t126 & t39);

  // depth 3  AND(t127, x7) -> (((x0x4)(x5x6))x7)
  assign t128 = (t127 & X7);

  // depth 2  AND(t46, t58) -> ((x1x2)(x3x4))
  assign t129 = (t46 & t58);

  // depth 3  AND(t129, x6) -> (((x1x2)(x3x4))x6)
  assign t130 = (t129 & X6);

  // depth 2  AND(t9, t39) -> ((x2x3)(x5x6))
  assign t131 = (t9 & t39);

  // depth 3  AND(t131, x7) -> (((x2x3)(x5x6))x7)
  assign t132 = (t131 & X7);

  // depth 2  AND(t14, t58) -> ((x0x2)(x3x4))
  assign t133 = (t14 & t58);

  // depth 3  AND(t133, t39) -> (((x0x2)(x3x4))(x5x6))
  assign t134 = (t133 & t39);

  // depth 3  AND(t129, t43) -> (((x1x2)(x3x4))(x5x7))
  assign t135 = (t129 & t43);

  // depth 2  AND(t46, t65) -> ((x1x2)(x4x5))
  assign t136 = (t46 & t65);

  // depth 3  AND(t136, t31) -> (((x1x2)(x4x5))(x6x7))
  assign t137 = (t136 & t31);

  // depth 1  XOR2(x0, x2) -> (x0 + x2)
  assign t138 = (X0 ^ X2);

  // depth 1  XOR2(x6, x7) -> (x6 + x7)
  assign t139 = (X6 ^ X7);

  // depth 2  XOR2(t138, t139) -> ((x0 + x2) + (x6 + x7))
  assign t140 = (t138 ^ t139);

  // depth 2  XOR2(t2, t35) -> ((x0x1) + (x0x3))
  assign t141 = (t2 ^ t35);

  // depth 2  XOR2(t75, t46) -> ((x0x5) + (x1x2))
  assign t142 = (t75 ^ t46);

  // depth 2  XOR2(t49, t112) -> ((x1x4) + (x1x7))
  assign t143 = (t49 ^ t112);

  // depth 2  XOR2(t72, t113) -> ((x2x6) + (x2x7))
  assign t144 = (t72 ^ t113);

  // depth 2  XOR2(t58, t78) -> ((x3x4) + (x3x6))
  assign t145 = (t58 ^ t78);

  // depth 3  XOR2(t141, t142) -> (((x0x1) + (x0x3)) + ((x0x5) + (x1x2)))
  assign t146 = (t141 ^ t142);

  // depth 3  XOR2(t143, t144) -> (((x1x4) + (x1x7)) + ((x2x6) + (x2x7)))
  assign t147 = (t143 ^ t144);

  // depth 3  XOR2(t145, t20) -> (((x3x4) + (x3x6)) + (x4x6))
  assign t148 = (t145 ^ t20);

  // depth 4  XOR2(t146, t147) -> ((((x0x1) + (x0x3)) + ((x0x5) + (x1x2))) + (((x1x4) + (x1x7)) + ((x2x6) + (x2x7))))
  assign t149 = (t146 ^ t147);

  // depth 5  XOR2(t149, t148) -> (((((x0x1) + (x0x3)) + ((x0x5) + (x1x2))) + (((x1x4) + (x1x7)) + ((x2x6) + (x2x7)))) + (((x3x4) + (x3x6)) + (x4x6)))
  assign t150 = (t149 ^ t148);

  // depth 3  XOR2(t74, t77) -> (((x2x6)((x0+1)(x1+1))) + ((x0x5)((x1+1)(x6+1))))
  assign t151 = (t74 ^ t77);

  // depth 3  XOR2(t80, t81) -> (((x3x6)((x0+1)(x2+1))) + ((x4x6)((x0+1)(x2+1))))
  assign t152 = (t80 ^ t81);

  // depth 3  XOR2(t83, t86) -> (((x4x5)((x0+1)(x3+1))) + ((x0x7)((x4+1)(x5+1))))
  assign t153 = (t83 ^ t86);

  // depth 3  XOR2(t88, t90) -> (((x1x4)((x2+1)(x3+1))) + ((x4x7)((x1+1)(x2+1))))
  assign t154 = (t88 ^ t90);

  // depth 3  XOR2(t91, t94) -> (((x6x7)((x1+1)(x2+1))) + ((x3x7)((x1+1)(x4+1))))
  assign t155 = (t91 ^ t94);

  // depth 3  XOR2(t96, t97) -> (((x5x7)((x2+1)(x4+1))) + ((x3x6)((x4+1)(x5+1))))
  assign t156 = (t96 ^ t97);

  // depth 3  XOR2(t99, t101) -> (((x6x7)((x3+1)(x4+1))) + ((x2x3)(x5(x0+1))))
  assign t157 = (t99 ^ t101);

  // depth 3  XOR2(t104, t106) -> (((x0x6)(x7(x5+1))) + ((x1x4)(x5(x2+1))))
  assign t158 = (t104 ^ t106);

  // depth 3  XOR2(t107, t109) -> (((x3x5)(x7(x1+1))) + ((x2x5)(x6(x7+1))))
  assign t159 = (t107 ^ t109);

  // depth 3  XOR2(t114, t115) -> (((x0x1)x3) + ((x0x1)x7))
  assign t160 = (t114 ^ t115);

  // depth 3  XOR2(t116, t117) -> (((x0x2)x7) + ((x0x3)x7))
  assign t161 = (t116 ^ t117);

  // depth 3  XOR2(t119, t120) -> (((x1x5)x6) + ((x2x3)x4))
  assign t162 = (t119 ^ t120);

  // depth 3  XOR2(t121, t56) -> (((x2x3)x7) + ((x0x1)(x2x5)))
  assign t163 = (t121 ^ t56);

  // depth 3  XOR2(t122, t123) -> (((x0x3)(x5x6)) + ((x1x3)(x4x5)))
  assign t164 = (t122 ^ t123);

  // depth 3  XOR2(t124, t125) -> (((x1x4)(x6x7)) + ((x2x4)(x6x7)))
  assign t165 = (t124 ^ t125);

  // depth 4  XOR2(t151, t152) -> ((((x2x6)((x0+1)(x1+1))) + ((x0x5)((x1+1)(x6+1)))) + (((x3x6)((x0+1)(x2+1))) + ((x4x6)((x0+1)(x2+1)))))
  assign t166 = (t151 ^ t152);

  // depth 4  XOR2(t153, t154) -> ((((x4x5)((x0+1)(x3+1))) + ((x0x7)((x4+1)(x5+1)))) + (((x1x4)((x2+1)(x3+1))) + ((x4x7)((x1+1)(x2+1)))))
  assign t167 = (t153 ^ t154);

  // depth 4  XOR2(t155, t156) -> ((((x6x7)((x1+1)(x2+1))) + ((x3x7)((x1+1)(x4+1)))) + (((x5x7)((x2+1)(x4+1))) + ((x3x6)((x4+1)(x5+1)))))
  assign t168 = (t155 ^ t156);

  // depth 4  XOR2(t157, t158) -> ((((x6x7)((x3+1)(x4+1))) + ((x2x3)(x5(x0+1)))) + (((x0x6)(x7(x5+1))) + ((x1x4)(x5(x2+1)))))
  assign t169 = (t157 ^ t158);

  // depth 4  XOR2(t159, t160) -> ((((x3x5)(x7(x1+1))) + ((x2x5)(x6(x7+1)))) + (((x0x1)x3) + ((x0x1)x7)))
  assign t170 = (t159 ^ t160);

  // depth 4  XOR2(t161, t162) -> ((((x0x2)x7) + ((x0x3)x7)) + (((x1x5)x6) + ((x2x3)x4)))
  assign t171 = (t161 ^ t162);

  // depth 4  XOR2(t163, t164) -> ((((x2x3)x7) + ((x0x1)(x2x5))) + (((x0x3)(x5x6)) + ((x1x3)(x4x5))))
  assign t172 = (t163 ^ t164);

  // depth 5  XOR2(t166, t167) -> (((((x2x6)((x0+1)(x1+1))) + ((x0x5)((x1+1)(x6+1)))) + (((x3x6)((x0+1)(x2+1))) + ((x4x6)((x0+1)(x2+1))))) + ((((x4x5)((x0+1)(x3+1))) + ((x0x7)((x4+1)(x5+1)))) + (((x1x4)((x2+1)(x3+1))) + ((x4x7)((x1+1)(x2+1))))))
  assign t173 = (t166 ^ t167);

  // depth 5  XOR2(t168, t169) -> (((((x6x7)((x1+1)(x2+1))) + ((x3x7)((x1+1)(x4+1)))) + (((x5x7)((x2+1)(x4+1))) + ((x3x6)((x4+1)(x5+1))))) + ((((x6x7)((x3+1)(x4+1))) + ((x2x3)(x5(x0+1)))) + (((x0x6)(x7(x5+1))) + ((x1x4)(x5(x2+1))))))
  assign t174 = (t168 ^ t169);

  // depth 5  XOR2(t170, t171) -> (((((x3x5)(x7(x1+1))) + ((x2x5)(x6(x7+1)))) + (((x0x1)x3) + ((x0x1)x7))) + ((((x0x2)x7) + ((x0x3)x7)) + (((x1x5)x6) + ((x2x3)x4))))
  assign t175 = (t170 ^ t171);

  // depth 5  XOR2(t172, t165) -> (((((x2x3)x7) + ((x0x1)(x2x5))) + (((x0x3)(x5x6)) + ((x1x3)(x4x5)))) + (((x1x4)(x6x7)) + ((x2x4)(x6x7))))
  assign t176 = (t172 ^ t165);

  // depth 6  XOR2(t173, t174) -> ((((((x2x6)((x0+1)(x1+1))) + ((x0x5)((x1+1)(x6+1)))) + (((x3x6)((x0+1)(x2+1))) + ((x4x6)((x0+1)(x2+1))))) + ((((x4x5)((x0+1)(x3+1))) + ((x0x7)((x4+1)(x5+1)))) + (((x1x4)((x2+1)(x3+1))) + ((x4x7)((x1+1)(x2+1)))))) + (((((x6x7)((x1+1)(x2+1))) + ((x3x7)((x1+1)(x4+1)))) + (((x5x7)((x2+1)(x4+1))) + ((x3x6)((x4+1)(x5+1))))) + ((((x6x7)((x3+1)(x4+1))) + ((x2x3)(x5(x0+1)))) + (((x0x6)(x7(x5+1))) + ((x1x4)(x5(x2+1)))))))
  assign t177 = (t173 ^ t174);

  // depth 6  XOR2(t175, t176) -> ((((((x3x5)(x7(x1+1))) + ((x2x5)(x6(x7+1)))) + (((x0x1)x3) + ((x0x1)x7))) + ((((x0x2)x7) + ((x0x3)x7)) + (((x1x5)x6) + ((x2x3)x4)))) + (((((x2x3)x7) + ((x0x1)(x2x5))) + (((x0x3)(x5x6)) + ((x1x3)(x4x5)))) + (((x1x4)(x6x7)) + ((x2x4)(x6x7)))))
  assign t178 = (t175 ^ t176);

  // depth 7  XOR2(t177, t178) -> (((((((x2x6)((x0+1)(x1+1))) + ((x0x5)((x1+1)(x6+1)))) + (((x3x6)((x0+1)(x2+1))) + ((x4x6)((x0+1)(x2+1))))) + ((((x4x5)((x0+1)(x3+1))) + ((x0x7)((x4+1)(x5+1)))) + (((x1x4)((x2+1)(x3+1))) + ((x4x7)((x1+1)(x2+1)))))) + (((((x6x7)((x1+1)(x2+1))) + ((x3x7)((x1+1)(x4+1)))) + (((x5x7)((x2+1)(x4+1))) + ((x3x6)((x4+1)(x5+1))))) + ((((x6x7)((x3+1)(x4+1))) + ((x2x3)(x5(x0+1)))) + (((x0x6)(x7(x5+1))) + ((x1x4)(x5(x2+1))))))) + ((((((x3x5)(x7(x1+1))) + ((x2x5)(x6(x7+1)))) + (((x0x1)x3) + ((x0x1)x7))) + ((((x0x2)x7) + ((x0x3)x7)) + (((x1x5)x6) + ((x2x3)x4)))) + (((((x2x3)x7) + ((x0x1)(x2x5))) + (((x0x3)(x5x6)) + ((x1x3)(x4x5)))) + (((x1x4)(x6x7)) + ((x2x4)(x6x7))))))
  assign t179 = (t177 ^ t178);

  // depth 4  XOR2(t6, t12) -> ((((x0x1)(x2x4))((x3+1)(x5+1))) + (((x0x1)(x2x3))((x6+1)(x7+1))))
  assign t180 = (t6 ^ t12);

  // depth 4  XOR2(t18, t23) -> ((((x0x2)(x4x7))((x1+1)(x5+1))) + (((x0x1)(x4x6))((x2+1)(x7+1))))
  assign t181 = (t18 ^ t23);

  // depth 4  XOR2(t28, t34) -> ((((x0x1)(x3x5))((x4+1)(x6+1))) + (((x1x3)(x6x7))((x0+1)(x4+1))))
  assign t182 = (t28 ^ t34);

  // depth 4  XOR2(t38, t42) -> ((((x0x3)(x4x7))((x2+1)(x6+1))) + (((x0x2)(x5x6))((x3+1)(x7+1))))
  assign t183 = (t38 ^ t42);

  // depth 4  XOR2(t45, t48) -> ((((x0x3)(x5x7))((x4+1)(x6+1))) + (((x1x2)(x3x5))((x6+1)(x7+1))))
  assign t184 = (t45 ^ t48);

  // depth 4  XOR2(t51, t53) -> ((((x1x4)(x5x6))((x3+1)(x7+1))) + (((x2x4)(x5x6))((x3+1)(x7+1))))
  assign t185 = (t51 ^ t53);

  // depth 4  XOR2(t57, t61) -> ((((x0x1)(x2x5))(x7(x3+1))) + (((x0x1)(x3x4))(x6(x2+1))))
  assign t186 = (t57 ^ t61);

  // depth 4  XOR2(t64, t67) -> ((((x0x2)(x4x6))(x7(x1+1))) + (((x0x1)(x4x5))(x6(x2+1))))
  assign t187 = (t64 ^ t67);

  // depth 4  XOR2(t69, t71) -> ((((x0x1)(x5x6))(x7(x3+1))) + (((x0x1)(x3x4))((x5x7)(x2+1))))
  assign t188 = (t69 ^ t71);

  // depth 4  XOR2(t111, t128) -> ((((x3x4)(x5x7))(x6+1)) + (((x0x4)(x5x6))x7))
  assign t189 = (t111 ^ t128);

  // depth 4  XOR2(t130, t132) -> ((((x1x2)(x3x4))x6) + (((x2x3)(x5x6))x7))
  assign t190 = (t130 ^ t132);

  // depth 4  XOR2(t134, t135) -> ((((x0x2)(x3x4))(x5x6)) + (((x1x2)(x3x4))(x5x7)))
  assign t191 = (t134 ^ t135);

  // depth 5  XOR2(t180, t181) -> (((((x0x1)(x2x4))((x3+1)(x5+1))) + (((x0x1)(x2x3))((x6+1)(x7+1)))) + ((((x0x2)(x4x7))((x1+1)(x5+1))) + (((x0x1)(x4x6))((x2+1)(x7+1)))))
  assign t192 = (t180 ^ t181);

  // depth 5  XOR2(t182, t183) -> (((((x0x1)(x3x5))((x4+1)(x6+1))) + (((x1x3)(x6x7))((x0+1)(x4+1)))) + ((((x0x3)(x4x7))((x2+1)(x6+1))) + (((x0x2)(x5x6))((x3+1)(x7+1)))))
  assign t193 = (t182 ^ t183);

  // depth 5  XOR2(t184, t185) -> (((((x0x3)(x5x7))((x4+1)(x6+1))) + (((x1x2)(x3x5))((x6+1)(x7+1)))) + ((((x1x4)(x5x6))((x3+1)(x7+1))) + (((x2x4)(x5x6))((x3+1)(x7+1)))))
  assign t194 = (t184 ^ t185);

  // depth 5  XOR2(t186, t187) -> (((((x0x1)(x2x5))(x7(x3+1))) + (((x0x1)(x3x4))(x6(x2+1)))) + ((((x0x2)(x4x6))(x7(x1+1))) + (((x0x1)(x4x5))(x6(x2+1)))))
  assign t195 = (t186 ^ t187);

  // depth 5  XOR2(t188, t189) -> (((((x0x1)(x5x6))(x7(x3+1))) + (((x0x1)(x3x4))((x5x7)(x2+1)))) + ((((x3x4)(x5x7))(x6+1)) + (((x0x4)(x5x6))x7)))
  assign t196 = (t188 ^ t189);

  // depth 5  XOR2(t190, t191) -> (((((x1x2)(x3x4))x6) + (((x2x3)(x5x6))x7)) + ((((x0x2)(x3x4))(x5x6)) + (((x1x2)(x3x4))(x5x7))))
  assign t197 = (t190 ^ t191);

  // depth 6  XOR2(t192, t193) -> ((((((x0x1)(x2x4))((x3+1)(x5+1))) + (((x0x1)(x2x3))((x6+1)(x7+1)))) + ((((x0x2)(x4x7))((x1+1)(x5+1))) + (((x0x1)(x4x6))((x2+1)(x7+1))))) + (((((x0x1)(x3x5))((x4+1)(x6+1))) + (((x1x3)(x6x7))((x0+1)(x4+1)))) + ((((x0x3)(x4x7))((x2+1)(x6+1))) + (((x0x2)(x5x6))((x3+1)(x7+1))))))
  assign t198 = (t192 ^ t193);

  // depth 6  XOR2(t194, t195) -> ((((((x0x3)(x5x7))((x4+1)(x6+1))) + (((x1x2)(x3x5))((x6+1)(x7+1)))) + ((((x1x4)(x5x6))((x3+1)(x7+1))) + (((x2x4)(x5x6))((x3+1)(x7+1))))) + (((((x0x1)(x2x5))(x7(x3+1))) + (((x0x1)(x3x4))(x6(x2+1)))) + ((((x0x2)(x4x6))(x7(x1+1))) + (((x0x1)(x4x5))(x6(x2+1))))))
  assign t199 = (t194 ^ t195);

  // depth 6  XOR2(t196, t197) -> ((((((x0x1)(x5x6))(x7(x3+1))) + (((x0x1)(x3x4))((x5x7)(x2+1)))) + ((((x3x4)(x5x7))(x6+1)) + (((x0x4)(x5x6))x7))) + (((((x1x2)(x3x4))x6) + (((x2x3)(x5x6))x7)) + ((((x0x2)(x3x4))(x5x6)) + (((x1x2)(x3x4))(x5x7)))))
  assign t200 = (t196 ^ t197);

  // depth 7  XOR2(t198, t199) -> (((((((x0x1)(x2x4))((x3+1)(x5+1))) + (((x0x1)(x2x3))((x6+1)(x7+1)))) + ((((x0x2)(x4x7))((x1+1)(x5+1))) + (((x0x1)(x4x6))((x2+1)(x7+1))))) + (((((x0x1)(x3x5))((x4+1)(x6+1))) + (((x1x3)(x6x7))((x0+1)(x4+1)))) + ((((x0x3)(x4x7))((x2+1)(x6+1))) + (((x0x2)(x5x6))((x3+1)(x7+1)))))) + ((((((x0x3)(x5x7))((x4+1)(x6+1))) + (((x1x2)(x3x5))((x6+1)(x7+1)))) + ((((x1x4)(x5x6))((x3+1)(x7+1))) + (((x2x4)(x5x6))((x3+1)(x7+1))))) + (((((x0x1)(x2x5))(x7(x3+1))) + (((x0x1)(x3x4))(x6(x2+1)))) + ((((x0x2)(x4x6))(x7(x1+1))) + (((x0x1)(x4x5))(x6(x2+1)))))))
  assign t201 = (t198 ^ t199);

  // depth 7  XOR2(t200, t137) -> (((((((x0x1)(x5x6))(x7(x3+1))) + (((x0x1)(x3x4))((x5x7)(x2+1)))) + ((((x3x4)(x5x7))(x6+1)) + (((x0x4)(x5x6))x7))) + (((((x1x2)(x3x4))x6) + (((x2x3)(x5x6))x7)) + ((((x0x2)(x3x4))(x5x6)) + (((x1x2)(x3x4))(x5x7))))) + (((x1x2)(x4x5))(x6x7)))
  assign t202 = (t200 ^ t137);

  // depth 8  XOR2(t201, t202) -> ((((((((x0x1)(x2x4))((x3+1)(x5+1))) + (((x0x1)(x2x3))((x6+1)(x7+1)))) + ((((x0x2)(x4x7))((x1+1)(x5+1))) + (((x0x1)(x4x6))((x2+1)(x7+1))))) + (((((x0x1)(x3x5))((x4+1)(x6+1))) + (((x1x3)(x6x7))((x0+1)(x4+1)))) + ((((x0x3)(x4x7))((x2+1)(x6+1))) + (((x0x2)(x5x6))((x3+1)(x7+1)))))) + ((((((x0x3)(x5x7))((x4+1)(x6+1))) + (((x1x2)(x3x5))((x6+1)(x7+1)))) + ((((x1x4)(x5x6))((x3+1)(x7+1))) + (((x2x4)(x5x6))((x3+1)(x7+1))))) + (((((x0x1)(x2x5))(x7(x3+1))) + (((x0x1)(x3x4))(x6(x2+1)))) + ((((x0x2)(x4x6))(x7(x1+1))) + (((x0x1)(x4x5))(x6(x2+1))))))) + (((((((x0x1)(x5x6))(x7(x3+1))) + (((x0x1)(x3x4))((x5x7)(x2+1)))) + ((((x3x4)(x5x7))(x6+1)) + (((x0x4)(x5x6))x7))) + (((((x1x2)(x3x4))x6) + (((x2x3)(x5x6))x7)) + ((((x0x2)(x3x4))(x5x6)) + (((x1x2)(x3x4))(x5x7))))) + (((x1x2)(x4x5))(x6x7))))
  assign t203 = (t201 ^ t202);

  // depth 3  AND(t11, t85) -> (((x0x1)(x2x3))((x4+1)(x5+1)))
  assign t204 = (t11 & t85);

  // depth 2  AND(t2, t72) -> ((x0x1)(x2x6))
  assign t205 = (t2 & t72);

  // depth 3  AND(t205, t85) -> (((x0x1)(x2x6))((x4+1)(x5+1)))
  assign t206 = (t205 & t85);

  // depth 2  AND(t2, t113) -> ((x0x1)(x2x7))
  assign t207 = (t2 & t113);

  // depth 3  AND(t207, t85) -> (((x0x1)(x2x7))((x4+1)(x5+1)))
  assign t208 = (t207 & t85);

  // depth 2  AND(t2, t15) -> ((x0x1)(x4x7))
  assign t209 = (t2 & t15);

  // depth 3  AND(t209, t4) -> (((x0x1)(x4x7))((x3+1)(x5+1)))
  assign t210 = (t209 & t4);

  // depth 3  AND(t44, t36) -> (((x0x3)(x5x7))((x2+1)(x6+1)))
  assign t211 = (t44 & t36);

  // depth 2  AND(t126, t43) -> ((x0x4)(x5x7))
  assign t212 = (t126 & t43);

  // depth 3  AND(t212, t36) -> (((x0x4)(x5x7))((x2+1)(x6+1)))
  assign t213 = (t212 & t36);

  // depth 3  AND(t47, t26) -> (((x1x2)(x3x5))((x4+1)(x6+1)))
  assign t214 = (t47 & t26);

  // depth 1  AND(t1, t8) -> ((x5+1)(x7+1))
  assign t215 = (t1 & t8);

  // depth 2  AND(t46, t20) -> ((x1x2)(x4x6))
  assign t216 = (t46 & t20);

  // depth 3  AND(t216, t215) -> (((x1x2)(x4x6))((x5+1)(x7+1)))
  assign t217 = (t216 & t215);

  // depth 1  AND(x6, t1) -> (x6(x5+1))
  assign t218 = (X6 & t1);

  // depth 3  AND(t60, t218) -> (((x0x1)(x3x4))(x6(x5+1)))
  assign t219 = (t60 & t218);

  // depth 1  AND(x5, t7) -> (x5(x6+1))
  assign t220 = (X5 & t7);

  // depth 3  AND(t133, t220) -> (((x0x2)(x3x4))(x5(x6+1)))
  assign t221 = (t133 & t220);

  // depth 1  AND(x7, t7) -> (x7(x6+1))
  assign t222 = (X7 & t7);

  // depth 3  AND(t133, t222) -> (((x0x2)(x3x4))(x7(x6+1)))
  assign t223 = (t133 & t222);

  // depth 2  AND(t35, t20) -> ((x0x3)(x4x6))
  assign t224 = (t35 & t20);

  // depth 3  AND(t224, t103) -> (((x0x3)(x4x6))(x7(x5+1)))
  assign t225 = (t224 & t103);

  // depth 2  AND(t30, t20) -> ((x1x3)(x4x6))
  assign t226 = (t30 & t20);

  // depth 3  AND(t226, t103) -> (((x1x3)(x4x6))(x7(x5+1)))
  assign t227 = (t226 & t103);

  // depth 1  AND(x7, t24) -> (x7(x4+1))
  assign t228 = (X7 & t24);

  // depth 3  AND(t11, t228) -> (((x0x1)(x2x3))(x7(x4+1)))
  assign t229 = (t11 & t228);

  // depth 3  AND(t205, t55) -> (((x0x1)(x2x6))(x7(x3+1)))
  assign t230 = (t205 & t55);

  // depth 3  AND(t41, t62) -> (((x0x2)(x5x6))(x7(x1+1)))
  assign t231 = (t41 & t62);

  // depth 3  AND(t129, t103) -> (((x1x2)(x3x4))(x7(x5+1)))
  assign t232 = (t129 & t103);

  // depth 2  AND(t14, t93) -> ((x0x2)((x1+1)(x4+1)))
  assign t233 = (t14 & t93);

  // depth 2  AND(t39, t73) -> ((x5x6)((x0+1)(x1+1)))
  assign t234 = (t39 & t73);

  // depth 2  AND(t43, t73) -> ((x5x7)((x0+1)(x1+1)))
  assign t235 = (t43 & t73);

  // depth 2  AND(t31, t73) -> ((x6x7)((x0+1)(x1+1)))
  assign t236 = (t31 & t73);

  // depth 1  AND(t29, t7) -> ((x0+1)(x6+1))
  assign t237 = (t29 & t7);

  // depth 2  AND(t58, t237) -> ((x3x4)((x0+1)(x6+1)))
  assign t238 = (t58 & t237);

  // depth 2  AND(t65, t237) -> ((x4x5)((x0+1)(x6+1)))
  assign t239 = (t65 & t237);

  // depth 2  AND(t92, t89) -> ((x3x7)((x1+1)(x2+1)))
  assign t240 = (t92 & t89);

  // depth 1  AND(t13, t8) -> ((x1+1)(x7+1))
  assign t241 = (t13 & t8);

  // depth 2  AND(t72, t241) -> ((x2x6)((x1+1)(x7+1)))
  assign t242 = (t72 & t241);

  // depth 1  AND(t13, t0) -> ((x1+1)(x3+1))
  assign t243 = (t13 & t0);

  // depth 2  AND(t15, t243) -> ((x4x7)((x1+1)(x3+1)))
  assign t244 = (t15 & t243);

  // depth 2  AND(t65, t87) -> ((x4x5)((x2+1)(x3+1)))
  assign t245 = (t65 & t87);

  // depth 1  AND(t1, t7) -> ((x5+1)(x6+1))
  assign t246 = (t1 & t7);

  // depth 2  AND(t15, t246) -> ((x4x7)((x5+1)(x6+1)))
  assign t247 = (t15 & t246);

  // depth 2  AND(t14, t220) -> ((x0x2)(x5(x6+1)))
  assign t248 = (t14 & t220);

  // depth 1  AND(x4, t0) -> (x4(x3+1))
  assign t249 = (X4 & t0);

  // depth 2  AND(t46, t249) -> ((x1x2)(x4(x3+1)))
  assign t250 = (t46 & t249);

  // depth 2  AND(t78, t62) -> ((x3x6)(x7(x1+1)))
  assign t251 = (t78 & t62);

  // depth 2  AND(t14, t78) -> ((x0x2)(x3x6))
  assign t252 = (t14 & t78);

  // depth 3  AND(t252, t8) -> (((x0x2)(x3x6))(x7+1))
  assign t253 = (t252 & t8);

  // depth 2  AND(t46, t43) -> ((x1x2)(x5x7))
  assign t254 = (t46 & t43);

  // depth 3  AND(t254, t0) -> (((x1x2)(x5x7))(x3+1))
  assign t255 = (t254 & t0);

  // depth 2  AND(t9, t20) -> ((x2x3)(x4x6))
  assign t256 = (t9 & t20);

  // depth 3  AND(t256, t8) -> (((x2x3)(x4x6))(x7+1))
  assign t257 = (t256 & t8);

  // depth 3  AND(t52, t8) -> (((x2x4)(x5x6))(x7+1))
  assign t258 = (t52 & t8);

  // depth 2  AND(t25, t31) -> ((x3x5)(x6x7))
  assign t259 = (t25 & t31);

  // depth 3  AND(t259, t24) -> (((x3x5)(x6x7))(x4+1))
  assign t260 = (t259 & t24);

  // depth 2  AND(t126, x7) -> ((x0x4)x7)
  assign t261 = (t126 & X7);

  // depth 2  AND(t2, t78) -> ((x0x1)(x3x6))
  assign t262 = (t2 & t78);

  // depth 2  AND(t46, t78) -> ((x1x2)(x3x6))
  assign t263 = (t46 & t78);

  // depth 3  AND(t136, x7) -> (((x1x2)(x4x5))x7)
  assign t264 = (t136 & X7);

  // depth 2  AND(t46, t39) -> ((x1x2)(x5x6))
  assign t265 = (t46 & t39);

  // depth 3  AND(t265, x7) -> (((x1x2)(x5x6))x7)
  assign t266 = (t265 & X7);

  // depth 2  AND(t9, t65) -> ((x2x3)(x4x5))
  assign t267 = (t9 & t65);

  // depth 3  AND(t267, x7) -> (((x2x3)(x4x5))x7)
  assign t268 = (t267 & X7);

  // depth 3  AND(t11, t39) -> (((x0x1)(x2x3))(x5x6))
  assign t269 = (t11 & t39);

  // depth 3  AND(t27, t31) -> (((x0x1)(x3x5))(x6x7))
  assign t270 = (t27 & t31);

  // depth 3  AND(t66, t31) -> (((x0x1)(x4x5))(x6x7))
  assign t271 = (t66 & t31);

  // depth 1  XOR2(x0, x1) -> (x0 + x1)
  assign t272 = (X0 ^ X1);

  // depth 1  XOR2(x3, x7) -> (x3 + x7)
  assign t273 = (X3 ^ X7);

  // depth 2  XOR2(t272, t273) -> ((x0 + x1) + (x3 + x7))
  assign t274 = (t272 ^ t273);

  // depth 2  XOR2(t2, t126) -> ((x0x1) + (x0x4))
  assign t275 = (t2 ^ t126);

  // depth 2  XOR2(t102, t84) -> ((x0x6) + (x0x7))
  assign t276 = (t102 ^ t84);

  // depth 2  XOR2(t46, t49) -> ((x1x2) + (x1x4))
  assign t277 = (t46 ^ t49);

  // depth 2  XOR2(t9, t72) -> ((x2x3) + (x2x6))
  assign t278 = (t9 ^ t72);

  // depth 2  XOR2(t58, t92) -> ((x3x4) + (x3x7))
  assign t279 = (t58 ^ t92);

  // depth 2  XOR2(t65, t15) -> ((x4x5) + (x4x7))
  assign t280 = (t65 ^ t15);

  // depth 2  XOR2(t43, t31) -> ((x5x7) + (x6x7))
  assign t281 = (t43 ^ t31);

  // depth 3  XOR2(t275, t276) -> (((x0x1) + (x0x4)) + ((x0x6) + (x0x7)))
  assign t282 = (t275 ^ t276);

  // depth 3  XOR2(t277, t278) -> (((x1x2) + (x1x4)) + ((x2x3) + (x2x6)))
  assign t283 = (t277 ^ t278);

  // depth 3  XOR2(t279, t280) -> (((x3x4) + (x3x7)) + ((x4x5) + (x4x7)))
  assign t284 = (t279 ^ t280);

  // depth 4  XOR2(t282, t283) -> ((((x0x1) + (x0x4)) + ((x0x6) + (x0x7))) + (((x1x2) + (x1x4)) + ((x2x3) + (x2x6))))
  assign t285 = (t282 ^ t283);

  // depth 4  XOR2(t284, t281) -> ((((x3x4) + (x3x7)) + ((x4x5) + (x4x7))) + ((x5x7) + (x6x7)))
  assign t286 = (t284 ^ t281);

  // depth 5  XOR2(t285, t286) -> (((((x0x1) + (x0x4)) + ((x0x6) + (x0x7))) + (((x1x2) + (x1x4)) + ((x2x3) + (x2x6)))) + ((((x3x4) + (x3x7)) + ((x4x5) + (x4x7))) + ((x5x7) + (x6x7))))
  assign t287 = (t285 ^ t286);

  // depth 3  XOR2(t101, t107) -> (((x2x3)(x5(x0+1))) + ((x3x5)(x7(x1+1))))
  assign t288 = (t101 ^ t107);

  // depth 3  XOR2(t109, t233) -> (((x2x5)(x6(x7+1))) + ((x0x2)((x1+1)(x4+1))))
  assign t289 = (t109 ^ t233);

  // depth 3  XOR2(t234, t235) -> (((x5x6)((x0+1)(x1+1))) + ((x5x7)((x0+1)(x1+1))))
  assign t290 = (t234 ^ t235);

  // depth 3  XOR2(t236, t238) -> (((x6x7)((x0+1)(x1+1))) + ((x3x4)((x0+1)(x6+1))))
  assign t291 = (t236 ^ t238);

  // depth 3  XOR2(t239, t240) -> (((x4x5)((x0+1)(x6+1))) + ((x3x7)((x1+1)(x2+1))))
  assign t292 = (t239 ^ t240);

  // depth 3  XOR2(t245, t247) -> (((x4x5)((x2+1)(x3+1))) + ((x4x7)((x5+1)(x6+1))))
  assign t293 = (t245 ^ t247);

  // depth 3  XOR2(t248, t250) -> (((x0x2)(x5(x6+1))) + ((x1x2)(x4(x3+1))))
  assign t294 = (t248 ^ t250);

  // depth 3  XOR2(t251, t261) -> (((x3x6)(x7(x1+1))) + ((x0x4)x7))
  assign t295 = (t251 ^ t261);

  // depth 3  XOR2(t60, t27) -> (((x0x1)(x3x4)) + ((x0x1)(x3x5)))
  assign t296 = (t60 ^ t27);

  // depth 3  XOR2(t262, t122) -> (((x0x1)(x3x6)) + ((x0x3)(x5x6)))
  assign t297 = (t262 ^ t122);

  // depth 3  XOR2(t263, t226) -> (((x1x2)(x3x6)) + ((x1x3)(x4x6)))
  assign t298 = (t263 ^ t226);

  // depth 3  XOR2(t50, t124) -> (((x1x4)(x5x6)) + ((x1x4)(x6x7)))
  assign t299 = (t50 ^ t124);

  // depth 4  XOR2(t288, t289) -> ((((x2x3)(x5(x0+1))) + ((x3x5)(x7(x1+1)))) + (((x2x5)(x6(x7+1))) + ((x0x2)((x1+1)(x4+1)))))
  assign t300 = (t288 ^ t289);

  // depth 4  XOR2(t290, t291) -> ((((x5x6)((x0+1)(x1+1))) + ((x5x7)((x0+1)(x1+1)))) + (((x6x7)((x0+1)(x1+1))) + ((x3x4)((x0+1)(x6+1)))))
  assign t301 = (t290 ^ t291);

  // depth 4  XOR2(t292, t155) -> ((((x4x5)((x0+1)(x6+1))) + ((x3x7)((x1+1)(x2+1)))) + (((x6x7)((x1+1)(x2+1))) + ((x3x7)((x1+1)(x4+1)))))
  assign t302 = (t292 ^ t155);

  // depth 4  XOR2(t293, t294) -> ((((x4x5)((x2+1)(x3+1))) + ((x4x7)((x5+1)(x6+1)))) + (((x0x2)(x5(x6+1))) + ((x1x2)(x4(x3+1)))))
  assign t303 = (t293 ^ t294);

  // depth 4  XOR2(t295, t296) -> ((((x3x6)(x7(x1+1))) + ((x0x4)x7)) + (((x0x1)(x3x4)) + ((x0x1)(x3x5))))
  assign t304 = (t295 ^ t296);

  // depth 4  XOR2(t297, t298) -> ((((x0x1)(x3x6)) + ((x0x3)(x5x6))) + (((x1x2)(x3x6)) + ((x1x3)(x4x6))))
  assign t305 = (t297 ^ t298);

  // depth 4  XOR2(t299, t131) -> ((((x1x4)(x5x6)) + ((x1x4)(x6x7))) + ((x2x3)(x5x6)))
  assign t306 = (t299 ^ t131);

  // depth 5  XOR2(t300, t301) -> (((((x2x3)(x5(x0+1))) + ((x3x5)(x7(x1+1)))) + (((x2x5)(x6(x7+1))) + ((x0x2)((x1+1)(x4+1))))) + ((((x5x6)((x0+1)(x1+1))) + ((x5x7)((x0+1)(x1+1)))) + (((x6x7)((x0+1)(x1+1))) + ((x3x4)((x0+1)(x6+1))))))
  assign t307 = (t300 ^ t301);

  // depth 5  XOR2(t302, t303) -> (((((x4x5)((x0+1)(x6+1))) + ((x3x7)((x1+1)(x2+1)))) + (((x6x7)((x1+1)(x2+1))) + ((x3x7)((x1+1)(x4+1))))) + ((((x4x5)((x2+1)(x3+1))) + ((x4x7)((x5+1)(x6+1)))) + (((x0x2)(x5(x6+1))) + ((x1x2)(x4(x3+1))))))
  assign t308 = (t302 ^ t303);

  // depth 5  XOR2(t304, t305) -> (((((x3x6)(x7(x1+1))) + ((x0x4)x7)) + (((x0x1)(x3x4)) + ((x0x1)(x3x5)))) + ((((x0x1)(x3x6)) + ((x0x3)(x5x6))) + (((x1x2)(x3x6)) + ((x1x3)(x4x6)))))
  assign t309 = (t304 ^ t305);

  // depth 6  XOR2(t307, t308) -> ((((((x2x3)(x5(x0+1))) + ((x3x5)(x7(x1+1)))) + (((x2x5)(x6(x7+1))) + ((x0x2)((x1+1)(x4+1))))) + ((((x5x6)((x0+1)(x1+1))) + ((x5x7)((x0+1)(x1+1)))) + (((x6x7)((x0+1)(x1+1))) + ((x3x4)((x0+1)(x6+1)))))) + (((((x4x5)((x0+1)(x6+1))) + ((x3x7)((x1+1)(x2+1)))) + (((x6x7)((x1+1)(x2+1))) + ((x3x7)((x1+1)(x4+1))))) + ((((x4x5)((x2+1)(x3+1))) + ((x4x7)((x5+1)(x6+1)))) + (((x0x2)(x5(x6+1))) + ((x1x2)(x4(x3+1)))))))
  assign t310 = (t307 ^ t308);

  // depth 6  XOR2(t309, t306) -> ((((((x3x6)(x7(x1+1))) + ((x0x4)x7)) + (((x0x1)(x3x4)) + ((x0x1)(x3x5)))) + ((((x0x1)(x3x6)) + ((x0x3)(x5x6))) + (((x1x2)(x3x6)) + ((x1x3)(x4x6))))) + ((((x1x4)(x5x6)) + ((x1x4)(x6x7))) + ((x2x3)(x5x6))))
  assign t311 = (t309 ^ t306);

  // depth 7  XOR2(t310, t311) -> (((((((x2x3)(x5(x0+1))) + ((x3x5)(x7(x1+1)))) + (((x2x5)(x6(x7+1))) + ((x0x2)((x1+1)(x4+1))))) + ((((x5x6)((x0+1)(x1+1))) + ((x5x7)((x0+1)(x1+1)))) + (((x6x7)((x0+1)(x1+1))) + ((x3x4)((x0+1)(x6+1)))))) + (((((x4x5)((x0+1)(x6+1))) + ((x3x7)((x1+1)(x2+1)))) + (((x6x7)((x1+1)(x2+1))) + ((x3x7)((x1+1)(x4+1))))) + ((((x4x5)((x2+1)(x3+1))) + ((x4x7)((x5+1)(x6+1)))) + (((x0x2)(x5(x6+1))) + ((x1x2)(x4(x3+1))))))) + ((((((x3x6)(x7(x1+1))) + ((x0x4)x7)) + (((x0x1)(x3x4)) + ((x0x1)(x3x5)))) + ((((x0x1)(x3x6)) + ((x0x3)(x5x6))) + (((x1x2)(x3x6)) + ((x1x3)(x4x6))))) + ((((x1x4)(x5x6)) + ((x1x4)(x6x7))) + ((x2x3)(x5x6)))))
  assign t312 = (t310 ^ t311);

  // depth 4  XOR2(t204, t206) -> ((((x0x1)(x2x3))((x4+1)(x5+1))) + (((x0x1)(x2x6))((x4+1)(x5+1))))
  assign t313 = (t204 ^ t206);

  // depth 4  XOR2(t208, t210) -> ((((x0x1)(x2x7))((x4+1)(x5+1))) + (((x0x1)(x4x7))((x3+1)(x5+1))))
  assign t314 = (t208 ^ t210);

  // depth 4  XOR2(t211, t213) -> ((((x0x3)(x5x7))((x2+1)(x6+1))) + (((x0x4)(x5x7))((x2+1)(x6+1))))
  assign t315 = (t211 ^ t213);

  // depth 4  XOR2(t214, t217) -> ((((x1x2)(x3x5))((x4+1)(x6+1))) + (((x1x2)(x4x6))((x5+1)(x7+1))))
  assign t316 = (t214 ^ t217);

  // depth 4  XOR2(t219, t221) -> ((((x0x1)(x3x4))(x6(x5+1))) + (((x0x2)(x3x4))(x5(x6+1))))
  assign t317 = (t219 ^ t221);

  // depth 4  XOR2(t223, t225) -> ((((x0x2)(x3x4))(x7(x6+1))) + (((x0x3)(x4x6))(x7(x5+1))))
  assign t318 = (t223 ^ t225);

  // depth 4  XOR2(t227, t229) -> ((((x1x3)(x4x6))(x7(x5+1))) + (((x0x1)(x2x3))(x7(x4+1))))
  assign t319 = (t227 ^ t229);

  // depth 4  XOR2(t230, t231) -> ((((x0x1)(x2x6))(x7(x3+1))) + (((x0x2)(x5x6))(x7(x1+1))))
  assign t320 = (t230 ^ t231);

  // depth 4  XOR2(t232, t253) -> ((((x1x2)(x3x4))(x7(x5+1))) + (((x0x2)(x3x6))(x7+1)))
  assign t321 = (t232 ^ t253);

  // depth 4  XOR2(t255, t257) -> ((((x1x2)(x5x7))(x3+1)) + (((x2x3)(x4x6))(x7+1)))
  assign t322 = (t255 ^ t257);

  // depth 4  XOR2(t258, t260) -> ((((x2x4)(x5x6))(x7+1)) + (((x3x5)(x6x7))(x4+1)))
  assign t323 = (t258 ^ t260);

  // depth 4  XOR2(t264, t266) -> ((((x1x2)(x4x5))x7) + (((x1x2)(x5x6))x7))
  assign t324 = (t264 ^ t266);

  // depth 4  XOR2(t268, t269) -> ((((x2x3)(x4x5))x7) + (((x0x1)(x2x3))(x5x6)))
  assign t325 = (t268 ^ t269);

  // depth 4  XOR2(t270, t271) -> ((((x0x1)(x3x5))(x6x7)) + (((x0x1)(x4x5))(x6x7)))
  assign t326 = (t270 ^ t271);

  // depth 5  XOR2(t313, t314) -> (((((x0x1)(x2x3))((x4+1)(x5+1))) + (((x0x1)(x2x6))((x4+1)(x5+1)))) + ((((x0x1)(x2x7))((x4+1)(x5+1))) + (((x0x1)(x4x7))((x3+1)(x5+1)))))
  assign t327 = (t313 ^ t314);

  // depth 5  XOR2(t315, t316) -> (((((x0x3)(x5x7))((x2+1)(x6+1))) + (((x0x4)(x5x7))((x2+1)(x6+1)))) + ((((x1x2)(x3x5))((x4+1)(x6+1))) + (((x1x2)(x4x6))((x5+1)(x7+1)))))
  assign t328 = (t315 ^ t316);

  // depth 5  XOR2(t317, t318) -> (((((x0x1)(x3x4))(x6(x5+1))) + (((x0x2)(x3x4))(x5(x6+1)))) + ((((x0x2)(x3x4))(x7(x6+1))) + (((x0x3)(x4x6))(x7(x5+1)))))
  assign t329 = (t317 ^ t318);

  // depth 5  XOR2(t319, t320) -> (((((x1x3)(x4x6))(x7(x5+1))) + (((x0x1)(x2x3))(x7(x4+1)))) + ((((x0x1)(x2x6))(x7(x3+1))) + (((x0x2)(x5x6))(x7(x1+1)))))
  assign t330 = (t319 ^ t320);

  // depth 5  XOR2(t321, t322) -> (((((x1x2)(x3x4))(x7(x5+1))) + (((x0x2)(x3x6))(x7+1))) + ((((x1x2)(x5x7))(x3+1)) + (((x2x3)(x4x6))(x7+1))))
  assign t331 = (t321 ^ t322);

  // depth 5  XOR2(t323, t324) -> (((((x2x4)(x5x6))(x7+1)) + (((x3x5)(x6x7))(x4+1))) + ((((x1x2)(x4x5))x7) + (((x1x2)(x5x6))x7)))
  assign t332 = (t323 ^ t324);

  // depth 5  XOR2(t325, t326) -> (((((x2x3)(x4x5))x7) + (((x0x1)(x2x3))(x5x6))) + ((((x0x1)(x3x5))(x6x7)) + (((x0x1)(x4x5))(x6x7))))
  assign t333 = (t325 ^ t326);

  // depth 6  XOR2(t327, t328) -> ((((((x0x1)(x2x3))((x4+1)(x5+1))) + (((x0x1)(x2x6))((x4+1)(x5+1)))) + ((((x0x1)(x2x7))((x4+1)(x5+1))) + (((x0x1)(x4x7))((x3+1)(x5+1))))) + (((((x0x3)(x5x7))((x2+1)(x6+1))) + (((x0x4)(x5x7))((x2+1)(x6+1)))) + ((((x1x2)(x3x5))((x4+1)(x6+1))) + (((x1x2)(x4x6))((x5+1)(x7+1))))))
  assign t334 = (t327 ^ t328);

  // depth 6  XOR2(t329, t330) -> ((((((x0x1)(x3x4))(x6(x5+1))) + (((x0x2)(x3x4))(x5(x6+1)))) + ((((x0x2)(x3x4))(x7(x6+1))) + (((x0x3)(x4x6))(x7(x5+1))))) + (((((x1x3)(x4x6))(x7(x5+1))) + (((x0x1)(x2x3))(x7(x4+1)))) + ((((x0x1)(x2x6))(x7(x3+1))) + (((x0x2)(x5x6))(x7(x1+1))))))
  assign t335 = (t329 ^ t330);

  // depth 6  XOR2(t331, t332) -> ((((((x1x2)(x3x4))(x7(x5+1))) + (((x0x2)(x3x6))(x7+1))) + ((((x1x2)(x5x7))(x3+1)) + (((x2x3)(x4x6))(x7+1)))) + (((((x2x4)(x5x6))(x7+1)) + (((x3x5)(x6x7))(x4+1))) + ((((x1x2)(x4x5))x7) + (((x1x2)(x5x6))x7))))
  assign t336 = (t331 ^ t332);

  // depth 7  XOR2(t334, t335) -> (((((((x0x1)(x2x3))((x4+1)(x5+1))) + (((x0x1)(x2x6))((x4+1)(x5+1)))) + ((((x0x1)(x2x7))((x4+1)(x5+1))) + (((x0x1)(x4x7))((x3+1)(x5+1))))) + (((((x0x3)(x5x7))((x2+1)(x6+1))) + (((x0x4)(x5x7))((x2+1)(x6+1)))) + ((((x1x2)(x3x5))((x4+1)(x6+1))) + (((x1x2)(x4x6))((x5+1)(x7+1)))))) + ((((((x0x1)(x3x4))(x6(x5+1))) + (((x0x2)(x3x4))(x5(x6+1)))) + ((((x0x2)(x3x4))(x7(x6+1))) + (((x0x3)(x4x6))(x7(x5+1))))) + (((((x1x3)(x4x6))(x7(x5+1))) + (((x0x1)(x2x3))(x7(x4+1)))) + ((((x0x1)(x2x6))(x7(x3+1))) + (((x0x2)(x5x6))(x7(x1+1)))))))
  assign t337 = (t334 ^ t335);

  // depth 7  XOR2(t336, t333) -> (((((((x1x2)(x3x4))(x7(x5+1))) + (((x0x2)(x3x6))(x7+1))) + ((((x1x2)(x5x7))(x3+1)) + (((x2x3)(x4x6))(x7+1)))) + (((((x2x4)(x5x6))(x7+1)) + (((x3x5)(x6x7))(x4+1))) + ((((x1x2)(x4x5))x7) + (((x1x2)(x5x6))x7)))) + (((((x2x3)(x4x5))x7) + (((x0x1)(x2x3))(x5x6))) + ((((x0x1)(x3x5))(x6x7)) + (((x0x1)(x4x5))(x6x7)))))
  assign t338 = (t336 ^ t333);

  // depth 8  XOR2(t337, t338) -> ((((((((x0x1)(x2x3))((x4+1)(x5+1))) + (((x0x1)(x2x6))((x4+1)(x5+1)))) + ((((x0x1)(x2x7))((x4+1)(x5+1))) + (((x0x1)(x4x7))((x3+1)(x5+1))))) + (((((x0x3)(x5x7))((x2+1)(x6+1))) + (((x0x4)(x5x7))((x2+1)(x6+1)))) + ((((x1x2)(x3x5))((x4+1)(x6+1))) + (((x1x2)(x4x6))((x5+1)(x7+1)))))) + ((((((x0x1)(x3x4))(x6(x5+1))) + (((x0x2)(x3x4))(x5(x6+1)))) + ((((x0x2)(x3x4))(x7(x6+1))) + (((x0x3)(x4x6))(x7(x5+1))))) + (((((x1x3)(x4x6))(x7(x5+1))) + (((x0x1)(x2x3))(x7(x4+1)))) + ((((x0x1)(x2x6))(x7(x3+1))) + (((x0x2)(x5x6))(x7(x1+1))))))) + (((((((x1x2)(x3x4))(x7(x5+1))) + (((x0x2)(x3x6))(x7+1))) + ((((x1x2)(x5x7))(x3+1)) + (((x2x3)(x4x6))(x7+1)))) + (((((x2x4)(x5x6))(x7+1)) + (((x3x5)(x6x7))(x4+1))) + ((((x1x2)(x4x5))x7) + (((x1x2)(x5x6))x7)))) + (((((x2x3)(x4x5))x7) + (((x0x1)(x2x3))(x5x6))) + ((((x0x1)(x3x5))(x6x7)) + (((x0x1)(x4x5))(x6x7))))))
  assign t339 = (t337 ^ t338);

  // depth 3  AND(t256, t73) -> (((x2x3)(x4x6))((x0+1)(x1+1)))
  assign t340 = (t256 & t73);

  // depth 2  AND(t35, t65) -> ((x0x3)(x4x5))
  assign t341 = (t35 & t65);

  // depth 3  AND(t341, t241) -> (((x0x3)(x4x5))((x1+1)(x7+1)))
  assign t342 = (t341 & t241);

  // depth 3  AND(t124, t82) -> (((x1x4)(x6x7))((x0+1)(x3+1)))
  assign t343 = (t124 & t82);

  // depth 2  AND(t118, t31) -> ((x1x5)(x6x7))
  assign t344 = (t118 & t31);

  // depth 3  AND(t344, t82) -> (((x1x5)(x6x7))((x0+1)(x3+1)))
  assign t345 = (t344 & t82);

  // depth 3  AND(t133, t215) -> (((x0x2)(x3x4))((x5+1)(x7+1)))
  assign t346 = (t133 & t215);

  // depth 2  AND(t35, t31) -> ((x0x3)(x6x7))
  assign t347 = (t35 & t31);

  // depth 3  AND(t347, t85) -> (((x0x3)(x6x7))((x4+1)(x5+1)))
  assign t348 = (t347 & t85);

  // depth 2  AND(t9, t43) -> ((x2x3)(x5x7))
  assign t349 = (t9 & t43);

  // depth 3  AND(t349, t93) -> (((x2x3)(x5x7))((x1+1)(x4+1)))
  assign t350 = (t349 & t93);

  // depth 3  AND(t5, t103) -> (((x0x1)(x2x4))(x7(x5+1)))
  assign t351 = (t5 & t103);

  // depth 3  AND(t56, t222) -> (((x0x1)(x2x5))(x7(x6+1)))
  assign t352 = (t56 & t222);

  // depth 1  AND(x6, t29) -> (x6(x0+1))
  assign t353 = (X6 & t29);

  // depth 3  AND(t123, t353) -> (((x1x3)(x4x5))(x6(x0+1)))
  assign t354 = (t123 & t353);

  // depth 1  AND(x7, t29) -> (x7(x0+1))
  assign t355 = (X7 & t29);

  // depth 3  AND(t131, t355) -> (((x2x3)(x5x6))(x7(x0+1)))
  assign t356 = (t131 & t355);

  // depth 1  AND(x6, t24) -> (x6(x4+1))
  assign t357 = (X6 & t24);

  // depth 3  AND(t47, t357) -> (((x1x2)(x3x5))(x6(x4+1)))
  assign t358 = (t47 & t357);

  // depth 3  AND(t263, t228) -> (((x1x2)(x3x6))(x7(x4+1)))
  assign t359 = (t263 & t228);

  // depth 3  AND(t50, t55) -> (((x1x4)(x5x6))(x7(x3+1)))
  assign t360 = (t50 & t55);

  // depth 3  AND(t11, t220) -> (((x0x1)(x2x3))(x5(x6+1)))
  assign t361 = (t11 & t220);

  // depth 3  AND(t205, t228) -> (((x0x1)(x2x6))(x7(x4+1)))
  assign t362 = (t205 & t228);

  // depth 3  AND(t66, t55) -> (((x0x1)(x4x5))(x7(x3+1)))
  assign t363 = (t66 & t55);

  // depth 2  AND(t126, t243) -> ((x0x4)((x1+1)(x3+1)))
  assign t364 = (t126 & t243);

  // depth 2  AND(t84, t243) -> ((x0x7)((x1+1)(x3+1)))
  assign t365 = (t84 & t243);

  // depth 2  AND(t113, t82) -> ((x2x7)((x0+1)(x3+1)))
  assign t366 = (t113 & t82);

  // depth 1  AND(t29, t1) -> ((x0+1)(x5+1))
  assign t367 = (t29 & t1);

  // depth 2  AND(t3, t367) -> ((x2x4)((x0+1)(x5+1)))
  assign t368 = (t3 & t367);

  // depth 2  AND(t78, t32) -> ((x3x6)((x0+1)(x4+1)))
  assign t369 = (t78 & t32);

  // depth 1  AND(x1, x6) -> (x1x6)
  assign t370 = (X1 & X6);

  // depth 2  AND(t370, t21) -> ((x1x6)((x2+1)(x7+1)))
  assign t371 = (t370 & t21);

  // depth 1  AND(t24, t8) -> ((x4+1)(x7+1))
  assign t372 = (t24 & t8);

  // depth 2  AND(t30, t372) -> ((x1x3)((x4+1)(x7+1)))
  assign t373 = (t30 & t372);

  // depth 2  AND(t65, t241) -> ((x4x5)((x1+1)(x7+1)))
  assign t374 = (t65 & t241);

  // depth 2  AND(t92, t26) -> ((x3x7)((x4+1)(x6+1)))
  assign t375 = (t92 & t26);

  // depth 1  AND(x5, t0) -> (x5(x3+1))
  assign t376 = (X5 & t0);

  // depth 2  AND(t2, t376) -> ((x0x1)(x5(x3+1)))
  assign t377 = (t2 & t376);

  // depth 2  AND(t25, t353) -> ((x3x5)(x6(x0+1)))
  assign t378 = (t25 & t353);

  // depth 2  AND(t58, t105) -> ((x3x4)(x5(x2+1)))
  assign t379 = (t58 & t105);

  // depth 2  AND(t65, t59) -> ((x4x5)(x6(x2+1)))
  assign t380 = (t65 & t59);

  // depth 2  AND(t46, t92) -> ((x1x2)(x3x7))
  assign t381 = (t46 & t92);

  // depth 3  AND(t381, t29) -> (((x1x2)(x3x7))(x0+1))
  assign t382 = (t381 & t29);

  // depth 2  AND(t2, x2) -> ((x0x1)x2)
  assign t383 = (t2 & X2);

  // depth 2  AND(t75, x7) -> ((x0x5)x7)
  assign t384 = (t75 & X7);

  // depth 2  AND(t49, x6) -> ((x1x4)x6)
  assign t385 = (t49 & X6);

  // depth 2  AND(t20, x7) -> ((x4x6)x7)
  assign t386 = (t20 & X7);

  // depth 2  AND(t14, t25) -> ((x0x2)(x3x5))
  assign t387 = (t14 & t25);

  // depth 2  AND(t9, t15) -> ((x2x3)(x4x7))
  assign t388 = (t9 & t15);

  // depth 2  AND(t9, t31) -> ((x2x3)(x6x7))
  assign t389 = (t9 & t31);

  // depth 2  AND(t14, t65) -> ((x0x2)(x4x5))
  assign t390 = (t14 & t65);

  // depth 3  AND(t390, x7) -> (((x0x2)(x4x5))x7)
  assign t391 = (t390 & X7);

  // depth 2  AND(t58, t39) -> ((x3x4)(x5x6))
  assign t392 = (t58 & t39);

  // depth 3  AND(t392, x7) -> (((x3x4)(x5x6))x7)
  assign t393 = (t392 & X7);

  // depth 3  AND(t5, t39) -> (((x0x1)(x2x4))(x5x6))
  assign t394 = (t5 & t39);

  // depth 1  XOR2(x4, x7) -> (x4 + x7)
  assign t395 = (X4 ^ X7);

  // depth 2  XOR2(t272, t395) -> ((x0 + x1) + (x4 + x7))
  assign t396 = (t272 ^ t395);

  // depth 3  XOR2(t396, 1) -> (((x0 + x1) + (x4 + x7)) + 1)
  assign t397 = (t396 ^ 1);

  // depth 2  XOR2(t75, t102) -> ((x0x5) + (x0x6))
  assign t398 = (t75 ^ t102);

  // depth 2  XOR2(t118, t370) -> ((x1x5) + (x1x6))
  assign t399 = (t118 ^ t370);

  // depth 2  XOR2(t9, t3) -> ((x2x3) + (x2x4))
  assign t400 = (t9 ^ t3);

  // depth 2  XOR2(t113, t15) -> ((x2x7) + (x4x7))
  assign t401 = (t113 ^ t15);

  // depth 3  XOR2(t398, t399) -> (((x0x5) + (x0x6)) + ((x1x5) + (x1x6)))
  assign t402 = (t398 ^ t399);

  // depth 3  XOR2(t400, t401) -> (((x2x3) + (x2x4)) + ((x2x7) + (x4x7)))
  assign t403 = (t400 ^ t401);

  // depth 4  XOR2(t402, t403) -> ((((x0x5) + (x0x6)) + ((x1x5) + (x1x6))) + (((x2x3) + (x2x4)) + ((x2x7) + (x4x7))))
  assign t404 = (t402 ^ t403);

  // depth 5  XOR2(t404, t281) -> (((((x0x5) + (x0x6)) + ((x1x5) + (x1x6))) + (((x2x3) + (x2x4)) + ((x2x7) + (x4x7)))) + ((x5x7) + (x6x7)))
  assign t405 = (t404 ^ t281);

  // depth 3  XOR2(t364, t365) -> (((x0x4)((x1+1)(x3+1))) + ((x0x7)((x1+1)(x3+1))))
  assign t406 = (t364 ^ t365);

  // depth 3  XOR2(t366, t368) -> (((x2x7)((x0+1)(x3+1))) + ((x2x4)((x0+1)(x5+1))))
  assign t407 = (t366 ^ t368);

  // depth 3  XOR2(t81, t369) -> (((x4x6)((x0+1)(x2+1))) + ((x3x6)((x0+1)(x4+1))))
  assign t408 = (t81 ^ t369);

  // depth 3  XOR2(t374, t375) -> (((x4x5)((x1+1)(x7+1))) + ((x3x7)((x4+1)(x6+1))))
  assign t409 = (t374 ^ t375);

  // depth 3  XOR2(t377, t378) -> (((x0x1)(x5(x3+1))) + ((x3x5)(x6(x0+1))))
  assign t410 = (t377 ^ t378);

  // depth 3  XOR2(t379, t380) -> (((x3x4)(x5(x2+1))) + ((x4x5)(x6(x2+1))))
  assign t411 = (t379 ^ t380);

  // depth 3  XOR2(t383, t384) -> (((x0x1)x2) + ((x0x5)x7))
  assign t412 = (t383 ^ t384);

  // depth 3  XOR2(t385, t386) -> (((x1x4)x6) + ((x4x6)x7))
  assign t413 = (t385 ^ t386);

  // depth 3  XOR2(t262, t68) -> (((x0x1)(x3x6)) + ((x0x1)(x5x6)))
  assign t414 = (t262 ^ t68);

  // depth 3  XOR2(t387, t252) -> (((x0x2)(x3x5)) + ((x0x2)(x3x6)))
  assign t415 = (t387 ^ t252);

  // depth 3  XOR2(t265, t254) -> (((x1x2)(x5x6)) + ((x1x2)(x5x7)))
  assign t416 = (t265 ^ t254);

  // depth 3  XOR2(t388, t389) -> (((x2x3)(x4x7)) + ((x2x3)(x6x7)))
  assign t417 = (t388 ^ t389);

  // depth 4  XOR2(t294, t406) -> ((((x0x2)(x5(x6+1))) + ((x1x2)(x4(x3+1)))) + (((x0x4)((x1+1)(x3+1))) + ((x0x7)((x1+1)(x3+1)))))
  assign t418 = (t294 ^ t406);

  // depth 4  XOR2(t407, t408) -> ((((x2x7)((x0+1)(x3+1))) + ((x2x4)((x0+1)(x5+1)))) + (((x4x6)((x0+1)(x2+1))) + ((x3x6)((x0+1)(x4+1)))))
  assign t419 = (t407 ^ t408);

  // depth 4  XOR2(t155, t409) -> ((((x6x7)((x1+1)(x2+1))) + ((x3x7)((x1+1)(x4+1)))) + (((x4x5)((x1+1)(x7+1))) + ((x3x7)((x4+1)(x6+1)))))
  assign t420 = (t155 ^ t409);

  // depth 4  XOR2(t410, t411) -> ((((x0x1)(x5(x3+1))) + ((x3x5)(x6(x0+1)))) + (((x3x4)(x5(x2+1))) + ((x4x5)(x6(x2+1)))))
  assign t421 = (t410 ^ t411);

  // depth 4  XOR2(t412, t413) -> ((((x0x1)x2) + ((x0x5)x7)) + (((x1x4)x6) + ((x4x6)x7)))
  assign t422 = (t412 ^ t413);

  // depth 4  XOR2(t414, t415) -> ((((x0x1)(x3x6)) + ((x0x1)(x5x6))) + (((x0x2)(x3x5)) + ((x0x2)(x3x6))))
  assign t423 = (t414 ^ t415);

  // depth 4  XOR2(t416, t417) -> ((((x1x2)(x5x6)) + ((x1x2)(x5x7))) + (((x2x3)(x4x7)) + ((x2x3)(x6x7))))
  assign t424 = (t416 ^ t417);

  // depth 5  XOR2(t418, t419) -> (((((x0x2)(x5(x6+1))) + ((x1x2)(x4(x3+1)))) + (((x0x4)((x1+1)(x3+1))) + ((x0x7)((x1+1)(x3+1))))) + ((((x2x7)((x0+1)(x3+1))) + ((x2x4)((x0+1)(x5+1)))) + (((x4x6)((x0+1)(x2+1))) + ((x3x6)((x0+1)(x4+1))))))
  assign t425 = (t418 ^ t419);

  // depth 5  XOR2(t420, t421) -> (((((x6x7)((x1+1)(x2+1))) + ((x3x7)((x1+1)(x4+1)))) + (((x4x5)((x1+1)(x7+1))) + ((x3x7)((x4+1)(x6+1))))) + ((((x0x1)(x5(x3+1))) + ((x3x5)(x6(x0+1)))) + (((x3x4)(x5(x2+1))) + ((x4x5)(x6(x2+1))))))
  assign t426 = (t420 ^ t421);

  // depth 5  XOR2(t422, t423) -> (((((x0x1)x2) + ((x0x5)x7)) + (((x1x4)x6) + ((x4x6)x7))) + ((((x0x1)(x3x6)) + ((x0x1)(x5x6))) + (((x0x2)(x3x5)) + ((x0x2)(x3x6)))))
  assign t427 = (t422 ^ t423);

  // depth 6  XOR2(t425, t426) -> ((((((x0x2)(x5(x6+1))) + ((x1x2)(x4(x3+1)))) + (((x0x4)((x1+1)(x3+1))) + ((x0x7)((x1+1)(x3+1))))) + ((((x2x7)((x0+1)(x3+1))) + ((x2x4)((x0+1)(x5+1)))) + (((x4x6)((x0+1)(x2+1))) + ((x3x6)((x0+1)(x4+1)))))) + (((((x6x7)((x1+1)(x2+1))) + ((x3x7)((x1+1)(x4+1)))) + (((x4x5)((x1+1)(x7+1))) + ((x3x7)((x4+1)(x6+1))))) + ((((x0x1)(x5(x3+1))) + ((x3x5)(x6(x0+1)))) + (((x3x4)(x5(x2+1))) + ((x4x5)(x6(x2+1)))))))
  assign t428 = (t425 ^ t426);

  // depth 6  XOR2(t427, t424) -> ((((((x0x1)x2) + ((x0x5)x7)) + (((x1x4)x6) + ((x4x6)x7))) + ((((x0x1)(x3x6)) + ((x0x1)(x5x6))) + (((x0x2)(x3x5)) + ((x0x2)(x3x6))))) + ((((x1x2)(x5x6)) + ((x1x2)(x5x7))) + (((x2x3)(x4x7)) + ((x2x3)(x6x7)))))
  assign t429 = (t427 ^ t424);

  // depth 7  XOR2(t428, t429) -> (((((((x0x2)(x5(x6+1))) + ((x1x2)(x4(x3+1)))) + (((x0x4)((x1+1)(x3+1))) + ((x0x7)((x1+1)(x3+1))))) + ((((x2x7)((x0+1)(x3+1))) + ((x2x4)((x0+1)(x5+1)))) + (((x4x6)((x0+1)(x2+1))) + ((x3x6)((x0+1)(x4+1)))))) + (((((x6x7)((x1+1)(x2+1))) + ((x3x7)((x1+1)(x4+1)))) + (((x4x5)((x1+1)(x7+1))) + ((x3x7)((x4+1)(x6+1))))) + ((((x0x1)(x5(x3+1))) + ((x3x5)(x6(x0+1)))) + (((x3x4)(x5(x2+1))) + ((x4x5)(x6(x2+1))))))) + ((((((x0x1)x2) + ((x0x5)x7)) + (((x1x4)x6) + ((x4x6)x7))) + ((((x0x1)(x3x6)) + ((x0x1)(x5x6))) + (((x0x2)(x3x5)) + ((x0x2)(x3x6))))) + ((((x1x2)(x5x6)) + ((x1x2)(x5x7))) + (((x2x3)(x4x7)) + ((x2x3)(x6x7))))))
  assign t430 = (t428 ^ t429);

  // depth 4  XOR2(t217, t340) -> ((((x1x2)(x4x6))((x5+1)(x7+1))) + (((x2x3)(x4x6))((x0+1)(x1+1))))
  assign t431 = (t217 ^ t340);

  // depth 4  XOR2(t342, t343) -> ((((x0x3)(x4x5))((x1+1)(x7+1))) + (((x1x4)(x6x7))((x0+1)(x3+1))))
  assign t432 = (t342 ^ t343);

  // depth 4  XOR2(t345, t346) -> ((((x1x5)(x6x7))((x0+1)(x3+1))) + (((x0x2)(x3x4))((x5+1)(x7+1))))
  assign t433 = (t345 ^ t346);

  // depth 4  XOR2(t348, t350) -> ((((x0x3)(x6x7))((x4+1)(x5+1))) + (((x2x3)(x5x7))((x1+1)(x4+1))))
  assign t434 = (t348 ^ t350);

  // depth 4  XOR2(t352, t354) -> ((((x0x1)(x2x5))(x7(x6+1))) + (((x1x3)(x4x5))(x6(x0+1))))
  assign t435 = (t352 ^ t354);

  // depth 4  XOR2(t356, t358) -> ((((x2x3)(x5x6))(x7(x0+1))) + (((x1x2)(x3x5))(x6(x4+1))))
  assign t436 = (t356 ^ t358);

  // depth 4  XOR2(t359, t360) -> ((((x1x2)(x3x6))(x7(x4+1))) + (((x1x4)(x5x6))(x7(x3+1))))
  assign t437 = (t359 ^ t360);

  // depth 4  XOR2(t361, t362) -> ((((x0x1)(x2x3))(x5(x6+1))) + (((x0x1)(x2x6))(x7(x4+1))))
  assign t438 = (t361 ^ t362);

  // depth 4  XOR2(t363, t382) -> ((((x0x1)(x4x5))(x7(x3+1))) + (((x1x2)(x3x7))(x0+1)))
  assign t439 = (t363 ^ t382);

  // depth 4  XOR2(t391, t128) -> ((((x0x2)(x4x5))x7) + (((x0x4)(x5x6))x7))
  assign t440 = (t391 ^ t128);

  // depth 4  XOR2(t393, t394) -> ((((x3x4)(x5x6))x7) + (((x0x1)(x2x4))(x5x6)))
  assign t441 = (t393 ^ t394);

  // depth 5  XOR2(t431, t432) -> (((((x1x2)(x4x6))((x5+1)(x7+1))) + (((x2x3)(x4x6))((x0+1)(x1+1)))) + ((((x0x3)(x4x5))((x1+1)(x7+1))) + (((x1x4)(x6x7))((x0+1)(x3+1)))))
  assign t442 = (t431 ^ t432);

  // depth 5  XOR2(t433, t434) -> (((((x1x5)(x6x7))((x0+1)(x3+1))) + (((x0x2)(x3x4))((x5+1)(x7+1)))) + ((((x0x3)(x6x7))((x4+1)(x5+1))) + (((x2x3)(x5x7))((x1+1)(x4+1)))))
  assign t443 = (t433 ^ t434);

  // depth 5  XOR2(t181, t435) -> (((((x0x2)(x4x7))((x1+1)(x5+1))) + (((x0x1)(x4x6))((x2+1)(x7+1)))) + ((((x0x1)(x2x5))(x7(x6+1))) + (((x1x3)(x4x5))(x6(x0+1)))))
  assign t444 = (t181 ^ t435);

  // depth 5  XOR2(t436, t437) -> (((((x2x3)(x5x6))(x7(x0+1))) + (((x1x2)(x3x5))(x6(x4+1)))) + ((((x1x2)(x3x6))(x7(x4+1))) + (((x1x4)(x5x6))(x7(x3+1)))))
  assign t445 = (t436 ^ t437);

  // depth 5  XOR2(t438, t439) -> (((((x0x1)(x2x3))(x5(x6+1))) + (((x0x1)(x2x6))(x7(x4+1)))) + ((((x0x1)(x4x5))(x7(x3+1))) + (((x1x2)(x3x7))(x0+1))))
  assign t446 = (t438 ^ t439);

  // depth 5  XOR2(t440, t441) -> (((((x0x2)(x4x5))x7) + (((x0x4)(x5x6))x7)) + ((((x3x4)(x5x6))x7) + (((x0x1)(x2x4))(x5x6))))
  assign t447 = (t440 ^ t441);

  // depth 6  XOR2(t442, t443) -> ((((((x1x2)(x4x6))((x5+1)(x7+1))) + (((x2x3)(x4x6))((x0+1)(x1+1)))) + ((((x0x3)(x4x5))((x1+1)(x7+1))) + (((x1x4)(x6x7))((x0+1)(x3+1))))) + (((((x1x5)(x6x7))((x0+1)(x3+1))) + (((x0x2)(x3x4))((x5+1)(x7+1)))) + ((((x0x3)(x6x7))((x4+1)(x5+1))) + (((x2x3)(x5x7))((x1+1)(x4+1))))))
  assign t448 = (t442 ^ t443);

  // depth 6  XOR2(t444, t445) -> ((((((x0x2)(x4x7))((x1+1)(x5+1))) + (((x0x1)(x4x6))((x2+1)(x7+1)))) + ((((x0x1)(x2x5))(x7(x6+1))) + (((x1x3)(x4x5))(x6(x0+1))))) + (((((x2x3)(x5x6))(x7(x0+1))) + (((x1x2)(x3x5))(x6(x4+1)))) + ((((x1x2)(x3x6))(x7(x4+1))) + (((x1x4)(x5x6))(x7(x3+1))))))
  assign t449 = (t444 ^ t445);

  // depth 6  XOR2(t446, t447) -> ((((((x0x1)(x2x3))(x5(x6+1))) + (((x0x1)(x2x6))(x7(x4+1)))) + ((((x0x1)(x4x5))(x7(x3+1))) + (((x1x2)(x3x7))(x0+1)))) + (((((x0x2)(x4x5))x7) + (((x0x4)(x5x6))x7)) + ((((x3x4)(x5x6))x7) + (((x0x1)(x2x4))(x5x6)))))
  assign t450 = (t446 ^ t447);

  // depth 7  XOR2(t448, t449) -> (((((((x1x2)(x4x6))((x5+1)(x7+1))) + (((x2x3)(x4x6))((x0+1)(x1+1)))) + ((((x0x3)(x4x5))((x1+1)(x7+1))) + (((x1x4)(x6x7))((x0+1)(x3+1))))) + (((((x1x5)(x6x7))((x0+1)(x3+1))) + (((x0x2)(x3x4))((x5+1)(x7+1)))) + ((((x0x3)(x6x7))((x4+1)(x5+1))) + (((x2x3)(x5x7))((x1+1)(x4+1)))))) + ((((((x0x2)(x4x7))((x1+1)(x5+1))) + (((x0x1)(x4x6))((x2+1)(x7+1)))) + ((((x0x1)(x2x5))(x7(x6+1))) + (((x1x3)(x4x5))(x6(x0+1))))) + (((((x2x3)(x5x6))(x7(x0+1))) + (((x1x2)(x3x5))(x6(x4+1)))) + ((((x1x2)(x3x6))(x7(x4+1))) + (((x1x4)(x5x6))(x7(x3+1)))))))
  assign t451 = (t448 ^ t449);

  // depth 8  XOR2(t451, t450) -> ((((((((x1x2)(x4x6))((x5+1)(x7+1))) + (((x2x3)(x4x6))((x0+1)(x1+1)))) + ((((x0x3)(x4x5))((x1+1)(x7+1))) + (((x1x4)(x6x7))((x0+1)(x3+1))))) + (((((x1x5)(x6x7))((x0+1)(x3+1))) + (((x0x2)(x3x4))((x5+1)(x7+1)))) + ((((x0x3)(x6x7))((x4+1)(x5+1))) + (((x2x3)(x5x7))((x1+1)(x4+1)))))) + ((((((x0x2)(x4x7))((x1+1)(x5+1))) + (((x0x1)(x4x6))((x2+1)(x7+1)))) + ((((x0x1)(x2x5))(x7(x6+1))) + (((x1x3)(x4x5))(x6(x0+1))))) + (((((x2x3)(x5x6))(x7(x0+1))) + (((x1x2)(x3x5))(x6(x4+1)))) + ((((x1x2)(x3x6))(x7(x4+1))) + (((x1x4)(x5x6))(x7(x3+1))))))) + ((((((x0x1)(x2x3))(x5(x6+1))) + (((x0x1)(x2x6))(x7(x4+1)))) + ((((x0x1)(x4x5))(x7(x3+1))) + (((x1x2)(x3x7))(x0+1)))) + (((((x0x2)(x4x5))x7) + (((x0x4)(x5x6))x7)) + ((((x3x4)(x5x6))x7) + (((x0x1)(x2x4))(x5x6))))))
  assign t452 = (t451 ^ t450);

  // depth 3  AND(t387, t93) -> (((x0x2)(x3x5))((x1+1)(x4+1)))
  assign t453 = (t387 & t93);

  // depth 3  AND(t68, t87) -> (((x0x1)(x5x6))((x2+1)(x3+1)))
  assign t454 = (t68 & t87);

  // depth 2  AND(t75, t31) -> ((x0x5)(x6x7))
  assign t455 = (t75 & t31);

  // depth 3  AND(t455, t89) -> (((x0x5)(x6x7))((x1+1)(x2+1)))
  assign t456 = (t455 & t89);

  // depth 2  AND(t30, t15) -> ((x1x3)(x4x7))
  assign t457 = (t30 & t15);

  // depth 3  AND(t457, t237) -> (((x1x3)(x4x7))((x0+1)(x6+1)))
  assign t458 = (t457 & t237);

  // depth 2  AND(t65, t31) -> ((x4x5)(x6x7))
  assign t459 = (t65 & t31);

  // depth 3  AND(t459, t73) -> (((x4x5)(x6x7))((x0+1)(x1+1)))
  assign t460 = (t459 & t73);

  // depth 1  AND(x6, t13) -> (x6(x1+1))
  assign t461 = (X6 & t13);

  // depth 3  AND(t133, t461) -> (((x0x2)(x3x4))(x6(x1+1)))
  assign t462 = (t133 & t461);

  // depth 3  AND(t133, t103) -> (((x0x2)(x3x4))(x7(x5+1)))
  assign t463 = (t133 & t103);

  // depth 3  AND(t390, t108) -> (((x0x2)(x4x5))(x6(x7+1)))
  assign t464 = (t390 & t108);

  // depth 3  AND(t392, t355) -> (((x3x4)(x5x6))(x7(x0+1)))
  assign t465 = (t392 & t355);

  // depth 1  AND(x5, t8) -> (x5(x7+1))
  assign t466 = (X5 & t8);

  // depth 3  AND(t129, t466) -> (((x1x2)(x3x4))(x5(x7+1)))
  assign t467 = (t129 & t466);

  // depth 3  AND(t123, t222) -> (((x1x3)(x4x5))(x7(x6+1)))
  assign t468 = (t123 & t222);

  // depth 1  AND(x7, t19) -> (x7(x2+1))
  assign t469 = (X7 & t19);

  // depth 3  AND(t27, t469) -> (((x0x1)(x3x5))(x7(x2+1)))
  assign t470 = (t27 & t469);

  // depth 3  AND(t47, t353) -> (((x1x2)(x3x5))(x6(x0+1)))
  assign t471 = (t47 & t353);

  // depth 3  AND(t22, t55) -> (((x0x1)(x4x6))(x7(x3+1)))
  assign t472 = (t22 & t55);

  // depth 2  AND(t2, t95) -> ((x0x1)((x2+1)(x4+1)))
  assign t473 = (t2 & t95);

  // depth 2  AND(t92, t73) -> ((x3x7)((x0+1)(x1+1)))
  assign t474 = (t92 & t73);

  // depth 2  AND(t75, t93) -> ((x0x5)((x1+1)(x4+1)))
  assign t475 = (t75 & t93);

  // depth 2  AND(t14, t85) -> ((x0x2)((x4+1)(x5+1)))
  assign t476 = (t14 & t85);

  // depth 2  AND(t43, t79) -> ((x5x7)((x0+1)(x2+1)))
  assign t477 = (t43 & t79);

  // depth 2  AND(t31, t82) -> ((x6x7)((x0+1)(x3+1)))
  assign t478 = (t31 & t82);

  // depth 2  AND(t46, t4) -> ((x1x2)((x3+1)(x5+1)))
  assign t479 = (t46 & t4);

  // depth 2  AND(t370, t87) -> ((x1x6)((x2+1)(x3+1)))
  assign t480 = (t370 & t87);

  // depth 2  AND(t118, t10) -> ((x1x5)((x6+1)(x7+1)))
  assign t481 = (t118 & t10);

  // depth 2  AND(t126, t461) -> ((x0x4)(x6(x1+1)))
  assign t482 = (t126 & t461);

  // depth 2  AND(t58, t461) -> ((x3x4)(x6(x1+1)))
  assign t483 = (t58 & t461);

  // depth 2  AND(t25, t469) -> ((x3x5)(x7(x2+1)))
  assign t484 = (t25 & t469);

  // depth 2  AND(t3, t466) -> ((x2x4)(x5(x7+1)))
  assign t485 = (t3 & t466);

  // depth 3  AND(t381, t24) -> (((x1x2)(x3x7))(x4+1))
  assign t486 = (t381 & t24);

  // depth 3  AND(t389, t13) -> (((x2x3)(x6x7))(x1+1))
  assign t487 = (t389 & t13);

  // depth 3  AND(t50, t19) -> (((x1x4)(x5x6))(x2+1))
  assign t488 = (t50 & t19);

  // depth 2  AND(t54, t31) -> ((x2x5)(x6x7))
  assign t489 = (t54 & t31);

  // depth 3  AND(t489, t0) -> (((x2x5)(x6x7))(x3+1))
  assign t490 = (t489 & t0);

  // depth 2  AND(t35, x4) -> ((x0x3)x4)
  assign t491 = (t35 & X4);

  // depth 2  AND(t35, x5) -> ((x0x3)x5)
  assign t492 = (t35 & X5);

  // depth 2  AND(t370, x7) -> ((x1x6)x7)
  assign t493 = (t370 & X7);

  // depth 2  AND(t58, x7) -> ((x3x4)x7)
  assign t494 = (t58 & X7);

  // depth 2  AND(t14, t92) -> ((x0x2)(x3x7))
  assign t495 = (t14 & t92);

  // depth 2  AND(t30, t39) -> ((x1x3)(x5x6))
  assign t496 = (t30 & t39);

  // depth 3  AND(t63, x7) -> (((x0x2)(x4x6))x7)
  assign t497 = (t63 & X7);

  // depth 3  AND(t216, x7) -> (((x1x2)(x4x6))x7)
  assign t498 = (t216 & X7);

  // depth 3  AND(t60, t39) -> (((x0x1)(x3x4))(x5x6))
  assign t499 = (t60 & t39);

  // depth 1  XOR2(x3, x4) -> (x3 + x4)
  assign t500 = (X3 ^ X4);

  // depth 1  XOR2(x5, x7) -> (x5 + x7)
  assign t501 = (X5 ^ X7);

  // depth 2  XOR2(t500, t501) -> ((x3 + x4) + (x5 + x7))
  assign t502 = (t500 ^ t501);

  // depth 3  XOR2(t502, 1) -> (((x3 + x4) + (x5 + x7)) + 1)
  assign t503 = (t502 ^ 1);

  // depth 2  XOR2(t30, t112) -> ((x1x3) + (x1x7))
  assign t504 = (t30 ^ t112);

  // depth 2  XOR2(t113, t25) -> ((x2x7) + (x3x5))
  assign t505 = (t113 ^ t25);

  // depth 2  XOR2(t78, t65) -> ((x3x6) + (x4x5))
  assign t506 = (t78 ^ t65);

  // depth 2  XOR2(t20, t15) -> ((x4x6) + (x4x7))
  assign t507 = (t20 ^ t15);

  // depth 2  XOR2(t39, t43) -> ((x5x6) + (x5x7))
  assign t508 = (t39 ^ t43);

  // depth 3  XOR2(t504, t505) -> (((x1x3) + (x1x7)) + ((x2x7) + (x3x5)))
  assign t509 = (t504 ^ t505);

  // depth 3  XOR2(t506, t507) -> (((x3x6) + (x4x5)) + ((x4x6) + (x4x7)))
  assign t510 = (t506 ^ t507);

  // depth 4  XOR2(t509, t510) -> ((((x1x3) + (x1x7)) + ((x2x7) + (x3x5))) + (((x3x6) + (x4x5)) + ((x4x6) + (x4x7))))
  assign t511 = (t509 ^ t510);

  // depth 5  XOR2(t511, t508) -> (((((x1x3) + (x1x7)) + ((x2x7) + (x3x5))) + (((x3x6) + (x4x5)) + ((x4x6) + (x4x7)))) + ((x5x6) + (x5x7)))
  assign t512 = (t511 ^ t508);

  // depth 3  XOR2(t378, t380) -> (((x3x5)(x6(x0+1))) + ((x4x5)(x6(x2+1))))
  assign t513 = (t378 ^ t380);

  // depth 3  XOR2(t473, t474) -> (((x0x1)((x2+1)(x4+1))) + ((x3x7)((x0+1)(x1+1))))
  assign t514 = (t473 ^ t474);

  // depth 3  XOR2(t475, t476) -> (((x0x5)((x1+1)(x4+1))) + ((x0x2)((x4+1)(x5+1))))
  assign t515 = (t475 ^ t476);

  // depth 3  XOR2(t477, t478) -> (((x5x7)((x0+1)(x2+1))) + ((x6x7)((x0+1)(x3+1))))
  assign t516 = (t477 ^ t478);

  // depth 3  XOR2(t479, t480) -> (((x1x2)((x3+1)(x5+1))) + ((x1x6)((x2+1)(x3+1))))
  assign t517 = (t479 ^ t480);

  // depth 3  XOR2(t90, t481) -> (((x4x7)((x1+1)(x2+1))) + ((x1x5)((x6+1)(x7+1))))
  assign t518 = (t90 ^ t481);

  // depth 3  XOR2(t482, t483) -> (((x0x4)(x6(x1+1))) + ((x3x4)(x6(x1+1))))
  assign t519 = (t482 ^ t483);

  // depth 3  XOR2(t484, t485) -> (((x3x5)(x7(x2+1))) + ((x2x4)(x5(x7+1))))
  assign t520 = (t484 ^ t485);

  // depth 3  XOR2(t491, t492) -> (((x0x3)x4) + ((x0x3)x5))
  assign t521 = (t491 ^ t492);

  // depth 3  XOR2(t493, t494) -> (((x1x6)x7) + ((x3x4)x7))
  assign t522 = (t493 ^ t494);

  // depth 3  XOR2(t205, t252) -> (((x0x1)(x2x6)) + ((x0x2)(x3x6)))
  assign t523 = (t205 ^ t252);

  // depth 3  XOR2(t495, t127) -> (((x0x2)(x3x7)) + ((x0x4)(x5x6)))
  assign t524 = (t495 ^ t127);

  // depth 3  XOR2(t212, t254) -> (((x0x4)(x5x7)) + ((x1x2)(x5x7)))
  assign t525 = (t212 ^ t254);

  // depth 4  XOR2(t513, t514) -> ((((x3x5)(x6(x0+1))) + ((x4x5)(x6(x2+1)))) + (((x0x1)((x2+1)(x4+1))) + ((x3x7)((x0+1)(x1+1)))))
  assign t526 = (t513 ^ t514);

  // depth 4  XOR2(t515, t516) -> ((((x0x5)((x1+1)(x4+1))) + ((x0x2)((x4+1)(x5+1)))) + (((x5x7)((x0+1)(x2+1))) + ((x6x7)((x0+1)(x3+1)))))
  assign t527 = (t515 ^ t516);

  // depth 4  XOR2(t517, t518) -> ((((x1x2)((x3+1)(x5+1))) + ((x1x6)((x2+1)(x3+1)))) + (((x4x7)((x1+1)(x2+1))) + ((x1x5)((x6+1)(x7+1)))))
  assign t528 = (t517 ^ t518);

  // depth 4  XOR2(t519, t520) -> ((((x0x4)(x6(x1+1))) + ((x3x4)(x6(x1+1)))) + (((x3x5)(x7(x2+1))) + ((x2x4)(x5(x7+1)))))
  assign t529 = (t519 ^ t520);

  // depth 4  XOR2(t521, t522) -> ((((x0x3)x4) + ((x0x3)x5)) + (((x1x6)x7) + ((x3x4)x7)))
  assign t530 = (t521 ^ t522);

  // depth 4  XOR2(t523, t524) -> ((((x0x1)(x2x6)) + ((x0x2)(x3x6))) + (((x0x2)(x3x7)) + ((x0x4)(x5x6))))
  assign t531 = (t523 ^ t524);

  // depth 4  XOR2(t525, t496) -> ((((x0x4)(x5x7)) + ((x1x2)(x5x7))) + ((x1x3)(x5x6)))
  assign t532 = (t525 ^ t496);

  // depth 5  XOR2(t526, t527) -> (((((x3x5)(x6(x0+1))) + ((x4x5)(x6(x2+1)))) + (((x0x1)((x2+1)(x4+1))) + ((x3x7)((x0+1)(x1+1))))) + ((((x0x5)((x1+1)(x4+1))) + ((x0x2)((x4+1)(x5+1)))) + (((x5x7)((x0+1)(x2+1))) + ((x6x7)((x0+1)(x3+1))))))
  assign t533 = (t526 ^ t527);

  // depth 5  XOR2(t528, t529) -> (((((x1x2)((x3+1)(x5+1))) + ((x1x6)((x2+1)(x3+1)))) + (((x4x7)((x1+1)(x2+1))) + ((x1x5)((x6+1)(x7+1))))) + ((((x0x4)(x6(x1+1))) + ((x3x4)(x6(x1+1)))) + (((x3x5)(x7(x2+1))) + ((x2x4)(x5(x7+1))))))
  assign t534 = (t528 ^ t529);

  // depth 5  XOR2(t530, t531) -> (((((x0x3)x4) + ((x0x3)x5)) + (((x1x6)x7) + ((x3x4)x7))) + ((((x0x1)(x2x6)) + ((x0x2)(x3x6))) + (((x0x2)(x3x7)) + ((x0x4)(x5x6)))))
  assign t535 = (t530 ^ t531);

  // depth 6  XOR2(t533, t534) -> ((((((x3x5)(x6(x0+1))) + ((x4x5)(x6(x2+1)))) + (((x0x1)((x2+1)(x4+1))) + ((x3x7)((x0+1)(x1+1))))) + ((((x0x5)((x1+1)(x4+1))) + ((x0x2)((x4+1)(x5+1)))) + (((x5x7)((x0+1)(x2+1))) + ((x6x7)((x0+1)(x3+1)))))) + (((((x1x2)((x3+1)(x5+1))) + ((x1x6)((x2+1)(x3+1)))) + (((x4x7)((x1+1)(x2+1))) + ((x1x5)((x6+1)(x7+1))))) + ((((x0x4)(x6(x1+1))) + ((x3x4)(x6(x1+1)))) + (((x3x5)(x7(x2+1))) + ((x2x4)(x5(x7+1)))))))
  assign t536 = (t533 ^ t534);

  // depth 6  XOR2(t535, t532) -> ((((((x0x3)x4) + ((x0x3)x5)) + (((x1x6)x7) + ((x3x4)x7))) + ((((x0x1)(x2x6)) + ((x0x2)(x3x6))) + (((x0x2)(x3x7)) + ((x0x4)(x5x6))))) + ((((x0x4)(x5x7)) + ((x1x2)(x5x7))) + ((x1x3)(x5x6))))
  assign t537 = (t535 ^ t532);

  // depth 7  XOR2(t536, t537) -> (((((((x3x5)(x6(x0+1))) + ((x4x5)(x6(x2+1)))) + (((x0x1)((x2+1)(x4+1))) + ((x3x7)((x0+1)(x1+1))))) + ((((x0x5)((x1+1)(x4+1))) + ((x0x2)((x4+1)(x5+1)))) + (((x5x7)((x0+1)(x2+1))) + ((x6x7)((x0+1)(x3+1)))))) + (((((x1x2)((x3+1)(x5+1))) + ((x1x6)((x2+1)(x3+1)))) + (((x4x7)((x1+1)(x2+1))) + ((x1x5)((x6+1)(x7+1))))) + ((((x0x4)(x6(x1+1))) + ((x3x4)(x6(x1+1)))) + (((x3x5)(x7(x2+1))) + ((x2x4)(x5(x7+1))))))) + ((((((x0x3)x4) + ((x0x3)x5)) + (((x1x6)x7) + ((x3x4)x7))) + ((((x0x1)(x2x6)) + ((x0x2)(x3x6))) + (((x0x2)(x3x7)) + ((x0x4)(x5x6))))) + ((((x0x4)(x5x7)) + ((x1x2)(x5x7))) + ((x1x3)(x5x6)))))
  assign t538 = (t536 ^ t537);

  // depth 4  XOR2(t211, t453) -> ((((x0x3)(x5x7))((x2+1)(x6+1))) + (((x0x2)(x3x5))((x1+1)(x4+1))))
  assign t539 = (t211 ^ t453);

  // depth 4  XOR2(t454, t456) -> ((((x0x1)(x5x6))((x2+1)(x3+1))) + (((x0x5)(x6x7))((x1+1)(x2+1))))
  assign t540 = (t454 ^ t456);

  // depth 4  XOR2(t458, t460) -> ((((x1x3)(x4x7))((x0+1)(x6+1))) + (((x4x5)(x6x7))((x0+1)(x1+1))))
  assign t541 = (t458 ^ t460);

  // depth 4  XOR2(t351, t462) -> ((((x0x1)(x2x4))(x7(x5+1))) + (((x0x2)(x3x4))(x6(x1+1))))
  assign t542 = (t351 ^ t462);

  // depth 4  XOR2(t230, t463) -> ((((x0x1)(x2x6))(x7(x3+1))) + (((x0x2)(x3x4))(x7(x5+1))))
  assign t543 = (t230 ^ t463);

  // depth 4  XOR2(t464, t465) -> ((((x0x2)(x4x5))(x6(x7+1))) + (((x3x4)(x5x6))(x7(x0+1))))
  assign t544 = (t464 ^ t465);

  // depth 4  XOR2(t467, t468) -> ((((x1x2)(x3x4))(x5(x7+1))) + (((x1x3)(x4x5))(x7(x6+1))))
  assign t545 = (t467 ^ t468);

  // depth 4  XOR2(t470, t471) -> ((((x0x1)(x3x5))(x7(x2+1))) + (((x1x2)(x3x5))(x6(x0+1))))
  assign t546 = (t470 ^ t471);

  // depth 4  XOR2(t472, t486) -> ((((x0x1)(x4x6))(x7(x3+1))) + (((x1x2)(x3x7))(x4+1)))
  assign t547 = (t472 ^ t486);

  // depth 4  XOR2(t487, t488) -> ((((x2x3)(x6x7))(x1+1)) + (((x1x4)(x5x6))(x2+1)))
  assign t548 = (t487 ^ t488);

  // depth 4  XOR2(t490, t497) -> ((((x2x5)(x6x7))(x3+1)) + (((x0x2)(x4x6))x7))
  assign t549 = (t490 ^ t497);

  // depth 4  XOR2(t498, t268) -> ((((x1x2)(x4x6))x7) + (((x2x3)(x4x5))x7))
  assign t550 = (t498 ^ t268);

  // depth 5  XOR2(t539, t540) -> (((((x0x3)(x5x7))((x2+1)(x6+1))) + (((x0x2)(x3x5))((x1+1)(x4+1)))) + ((((x0x1)(x5x6))((x2+1)(x3+1))) + (((x0x5)(x6x7))((x1+1)(x2+1)))))
  assign t551 = (t539 ^ t540);

  // depth 5  XOR2(t541, t542) -> (((((x1x3)(x4x7))((x0+1)(x6+1))) + (((x4x5)(x6x7))((x0+1)(x1+1)))) + ((((x0x1)(x2x4))(x7(x5+1))) + (((x0x2)(x3x4))(x6(x1+1)))))
  assign t552 = (t541 ^ t542);

  // depth 5  XOR2(t543, t544) -> (((((x0x1)(x2x6))(x7(x3+1))) + (((x0x2)(x3x4))(x7(x5+1)))) + ((((x0x2)(x4x5))(x6(x7+1))) + (((x3x4)(x5x6))(x7(x0+1)))))
  assign t553 = (t543 ^ t544);

  // depth 5  XOR2(t545, t546) -> (((((x1x2)(x3x4))(x5(x7+1))) + (((x1x3)(x4x5))(x7(x6+1)))) + ((((x0x1)(x3x5))(x7(x2+1))) + (((x1x2)(x3x5))(x6(x0+1)))))
  assign t554 = (t545 ^ t546);

  // depth 5  XOR2(t547, t548) -> (((((x0x1)(x4x6))(x7(x3+1))) + (((x1x2)(x3x7))(x4+1))) + ((((x2x3)(x6x7))(x1+1)) + (((x1x4)(x5x6))(x2+1))))
  assign t555 = (t547 ^ t548);

  // depth 5  XOR2(t549, t550) -> (((((x2x5)(x6x7))(x3+1)) + (((x0x2)(x4x6))x7)) + ((((x1x2)(x4x6))x7) + (((x2x3)(x4x5))x7)))
  assign t556 = (t549 ^ t550);

  // depth 6  XOR2(t551, t552) -> ((((((x0x3)(x5x7))((x2+1)(x6+1))) + (((x0x2)(x3x5))((x1+1)(x4+1)))) + ((((x0x1)(x5x6))((x2+1)(x3+1))) + (((x0x5)(x6x7))((x1+1)(x2+1))))) + (((((x1x3)(x4x7))((x0+1)(x6+1))) + (((x4x5)(x6x7))((x0+1)(x1+1)))) + ((((x0x1)(x2x4))(x7(x5+1))) + (((x0x2)(x3x4))(x6(x1+1))))))
  assign t557 = (t551 ^ t552);

  // depth 6  XOR2(t553, t554) -> ((((((x0x1)(x2x6))(x7(x3+1))) + (((x0x2)(x3x4))(x7(x5+1)))) + ((((x0x2)(x4x5))(x6(x7+1))) + (((x3x4)(x5x6))(x7(x0+1))))) + (((((x1x2)(x3x4))(x5(x7+1))) + (((x1x3)(x4x5))(x7(x6+1)))) + ((((x0x1)(x3x5))(x7(x2+1))) + (((x1x2)(x3x5))(x6(x0+1))))))
  assign t558 = (t553 ^ t554);

  // depth 6  XOR2(t555, t556) -> ((((((x0x1)(x4x6))(x7(x3+1))) + (((x1x2)(x3x7))(x4+1))) + ((((x2x3)(x6x7))(x1+1)) + (((x1x4)(x5x6))(x2+1)))) + (((((x2x5)(x6x7))(x3+1)) + (((x0x2)(x4x6))x7)) + ((((x1x2)(x4x6))x7) + (((x2x3)(x4x5))x7))))
  assign t559 = (t555 ^ t556);

  // depth 7  XOR2(t557, t558) -> (((((((x0x3)(x5x7))((x2+1)(x6+1))) + (((x0x2)(x3x5))((x1+1)(x4+1)))) + ((((x0x1)(x5x6))((x2+1)(x3+1))) + (((x0x5)(x6x7))((x1+1)(x2+1))))) + (((((x1x3)(x4x7))((x0+1)(x6+1))) + (((x4x5)(x6x7))((x0+1)(x1+1)))) + ((((x0x1)(x2x4))(x7(x5+1))) + (((x0x2)(x3x4))(x6(x1+1)))))) + ((((((x0x1)(x2x6))(x7(x3+1))) + (((x0x2)(x3x4))(x7(x5+1)))) + ((((x0x2)(x4x5))(x6(x7+1))) + (((x3x4)(x5x6))(x7(x0+1))))) + (((((x1x2)(x3x4))(x5(x7+1))) + (((x1x3)(x4x5))(x7(x6+1)))) + ((((x0x1)(x3x5))(x7(x2+1))) + (((x1x2)(x3x5))(x6(x0+1)))))))
  assign t560 = (t557 ^ t558);

  // depth 7  XOR2(t559, t499) -> (((((((x0x1)(x4x6))(x7(x3+1))) + (((x1x2)(x3x7))(x4+1))) + ((((x2x3)(x6x7))(x1+1)) + (((x1x4)(x5x6))(x2+1)))) + (((((x2x5)(x6x7))(x3+1)) + (((x0x2)(x4x6))x7)) + ((((x1x2)(x4x6))x7) + (((x2x3)(x4x5))x7)))) + (((x0x1)(x3x4))(x5x6)))
  assign t561 = (t559 ^ t499);

  // depth 8  XOR2(t560, t561) -> ((((((((x0x3)(x5x7))((x2+1)(x6+1))) + (((x0x2)(x3x5))((x1+1)(x4+1)))) + ((((x0x1)(x5x6))((x2+1)(x3+1))) + (((x0x5)(x6x7))((x1+1)(x2+1))))) + (((((x1x3)(x4x7))((x0+1)(x6+1))) + (((x4x5)(x6x7))((x0+1)(x1+1)))) + ((((x0x1)(x2x4))(x7(x5+1))) + (((x0x2)(x3x4))(x6(x1+1)))))) + ((((((x0x1)(x2x6))(x7(x3+1))) + (((x0x2)(x3x4))(x7(x5+1)))) + ((((x0x2)(x4x5))(x6(x7+1))) + (((x3x4)(x5x6))(x7(x0+1))))) + (((((x1x2)(x3x4))(x5(x7+1))) + (((x1x3)(x4x5))(x7(x6+1)))) + ((((x0x1)(x3x5))(x7(x2+1))) + (((x1x2)(x3x5))(x6(x0+1))))))) + (((((((x0x1)(x4x6))(x7(x3+1))) + (((x1x2)(x3x7))(x4+1))) + ((((x2x3)(x6x7))(x1+1)) + (((x1x4)(x5x6))(x2+1)))) + (((((x2x5)(x6x7))(x3+1)) + (((x0x2)(x4x6))x7)) + ((((x1x2)(x4x6))x7) + (((x2x3)(x4x5))x7)))) + (((x0x1)(x3x4))(x5x6))))
  assign t562 = (t560 ^ t561);

  // depth 3  AND(t5, t40) -> (((x0x1)(x2x4))((x3+1)(x7+1)))
  assign t563 = (t5 & t40);

  // depth 3  AND(t41, t93) -> (((x0x2)(x5x6))((x1+1)(x4+1)))
  assign t564 = (t41 & t93);

  // depth 3  AND(t133, t246) -> (((x0x2)(x3x4))((x5+1)(x6+1)))
  assign t565 = (t133 & t246);

  // depth 1  AND(t0, t7) -> ((x3+1)(x6+1))
  assign t566 = (t0 & t7);

  // depth 3  AND(t136, t566) -> (((x1x2)(x4x5))((x3+1)(x6+1)))
  assign t567 = (t136 & t566);

  // depth 3  AND(t33, t95) -> (((x1x3)(x6x7))((x2+1)(x4+1)))
  assign t568 = (t33 & t95);

  // depth 3  AND(t110, t36) -> (((x3x4)(x5x7))((x2+1)(x6+1)))
  assign t569 = (t110 & t36);

  // depth 3  AND(t390, t55) -> (((x0x2)(x4x5))(x7(x3+1)))
  assign t570 = (t390 & t55);

  // depth 3  AND(t127, t55) -> (((x0x4)(x5x6))(x7(x3+1)))
  assign t571 = (t127 & t55);

  // depth 3  AND(t47, t108) -> (((x1x2)(x3x5))(x6(x7+1)))
  assign t572 = (t47 & t108);

  // depth 3  AND(t136, t222) -> (((x1x2)(x4x5))(x7(x6+1)))
  assign t573 = (t136 & t222);

  // depth 3  AND(t387, t357) -> (((x0x2)(x3x5))(x6(x4+1)))
  assign t574 = (t387 & t357);

  // depth 2  AND(t2, t98) -> ((x0x1)((x3+1)(x4+1)))
  assign t575 = (t2 & t98);

  // depth 2  AND(t2, t246) -> ((x0x1)((x5+1)(x6+1)))
  assign t576 = (t2 & t246);

  // depth 2  AND(t35, t85) -> ((x0x3)((x4+1)(x5+1)))
  assign t577 = (t35 & t85);

  // depth 2  AND(t3, t241) -> ((x2x4)((x1+1)(x7+1)))
  assign t578 = (t3 & t241);

  // depth 2  AND(t58, t241) -> ((x3x4)((x1+1)(x7+1)))
  assign t579 = (t58 & t241);

  // depth 2  AND(t9, t26) -> ((x2x3)((x4+1)(x6+1)))
  assign t580 = (t9 & t26);

  // depth 2  AND(t25, t26) -> ((x3x5)((x4+1)(x6+1)))
  assign t581 = (t25 & t26);

  // depth 2  AND(t14, t108) -> ((x0x2)(x6(x7+1)))
  assign t582 = (t14 & t108);

  // depth 2  AND(t118, t222) -> ((x1x5)(x7(x6+1)))
  assign t583 = (t118 & t222);

  // depth 2  AND(t3, t218) -> ((x2x4)(x6(x5+1)))
  assign t584 = (t3 & t218);

  // depth 2  AND(t2, t31) -> ((x0x1)(x6x7))
  assign t585 = (t2 & t31);

  // depth 3  AND(t585, t19) -> (((x0x1)(x6x7))(x2+1))
  assign t586 = (t585 & t19);

  // depth 3  AND(t209, t0) -> (((x0x1)(x4x7))(x3+1))
  assign t587 = (t209 & t0);

  // depth 2  AND(t126, t31) -> ((x0x4)(x6x7))
  assign t588 = (t126 & t31);

  // depth 3  AND(t588, t13) -> (((x0x4)(x6x7))(x1+1))
  assign t589 = (t588 & t13);

  // depth 3  AND(t17, t7) -> (((x0x2)(x4x7))(x6+1))
  assign t590 = (t17 & t7);

  // depth 2  AND(t14, t43) -> ((x0x2)(x5x7))
  assign t591 = (t14 & t43);

  // depth 3  AND(t591, t7) -> (((x0x2)(x5x7))(x6+1))
  assign t592 = (t591 & t7);

  // depth 3  AND(t124, t1) -> (((x1x4)(x6x7))(x5+1))
  assign t593 = (t124 & t1);

  // depth 3  AND(t389, t1) -> (((x2x3)(x6x7))(x5+1))
  assign t594 = (t389 & t1);

  // depth 2  AND(t14, x3) -> ((x0x2)x3)
  assign t595 = (t14 & X3);

  // depth 2  AND(t46, x5) -> ((x1x2)x5)
  assign t596 = (t46 & X5);

  // depth 2  AND(t49, x5) -> ((x1x4)x5)
  assign t597 = (t49 & X5);

  // depth 2  AND(t9, x5) -> ((x2x3)x5)
  assign t598 = (t9 & X5);

  // depth 2  AND(t65, x7) -> ((x4x5)x7)
  assign t599 = (t65 & X7);

  // depth 2  AND(t46, t31) -> ((x1x2)(x6x7))
  assign t600 = (t46 & t31);

  // depth 3  AND(t11, x5) -> (((x0x1)(x2x3))x5)
  assign t601 = (t11 & X5);

  // depth 3  AND(t11, x6) -> (((x0x1)(x2x3))x6)
  assign t602 = (t11 & X6);

  // depth 3  AND(t5, x6) -> (((x0x1)(x2x4))x6)
  assign t603 = (t5 & X6);

  // depth 3  AND(t60, x5) -> (((x0x1)(x3x4))x5)
  assign t604 = (t60 & X5);

  // depth 3  AND(t27, x7) -> (((x0x1)(x3x5))x7)
  assign t605 = (t27 & X7);

  // depth 3  AND(t123, x7) -> (((x1x3)(x4x5))x7)
  assign t606 = (t123 & X7);

  // depth 1  XOR2(x2, x4) -> (x2 + x4)
  assign t607 = (X2 ^ X4);

  // depth 1  XOR2(x5, x6) -> (x5 + x6)
  assign t608 = (X5 ^ X6);

  // depth 2  XOR2(t607, t608) -> ((x2 + x4) + (x5 + x6))
  assign t609 = (t607 ^ t608);

  // depth 3  XOR2(t609, x7) -> (((x2 + x4) + (x5 + x6)) + x7)
  assign t610 = (t609 ^ X7);

  // depth 2  XOR2(t2, t14) -> ((x0x1) + (x0x2))
  assign t611 = (t2 ^ t14);

  // depth 2  XOR2(t35, t126) -> ((x0x3) + (x0x4))
  assign t612 = (t35 ^ t126);

  // depth 2  XOR2(t30, t370) -> ((x1x3) + (x1x6))
  assign t613 = (t30 ^ t370);

  // depth 2  XOR2(t112, t3) -> ((x1x7) + (x2x4))
  assign t614 = (t112 ^ t3);

  // depth 2  XOR2(t54, t72) -> ((x2x5) + (x2x6))
  assign t615 = (t54 ^ t72);

  // depth 3  XOR2(t611, t612) -> (((x0x1) + (x0x2)) + ((x0x3) + (x0x4)))
  assign t616 = (t611 ^ t612);

  // depth 3  XOR2(t613, t614) -> (((x1x3) + (x1x6)) + ((x1x7) + (x2x4)))
  assign t617 = (t613 ^ t614);

  // depth 3  XOR2(t615, t505) -> (((x2x5) + (x2x6)) + ((x2x7) + (x3x5)))
  assign t618 = (t615 ^ t505);

  // depth 3  XOR2(t506, t31) -> (((x3x6) + (x4x5)) + (x6x7))
  assign t619 = (t506 ^ t31);

  // depth 4  XOR2(t616, t617) -> ((((x0x1) + (x0x2)) + ((x0x3) + (x0x4))) + (((x1x3) + (x1x6)) + ((x1x7) + (x2x4))))
  assign t620 = (t616 ^ t617);

  // depth 4  XOR2(t618, t619) -> ((((x2x5) + (x2x6)) + ((x2x7) + (x3x5))) + (((x3x6) + (x4x5)) + (x6x7)))
  assign t621 = (t618 ^ t619);

  // depth 5  XOR2(t620, t621) -> (((((x0x1) + (x0x2)) + ((x0x3) + (x0x4))) + (((x1x3) + (x1x6)) + ((x1x7) + (x2x4)))) + ((((x2x5) + (x2x6)) + ((x2x7) + (x3x5))) + (((x3x6) + (x4x5)) + (x6x7))))
  assign t622 = (t620 ^ t621);

  // depth 3  XOR2(t576, t368) -> (((x0x1)((x5+1)(x6+1))) + ((x2x4)((x0+1)(x5+1))))
  assign t623 = (t576 ^ t368);

  // depth 3  XOR2(t577, t240) -> (((x0x3)((x4+1)(x5+1))) + ((x3x7)((x1+1)(x2+1))))
  assign t624 = (t577 ^ t240);

  // depth 3  XOR2(t578, t579) -> (((x2x4)((x1+1)(x7+1))) + ((x3x4)((x1+1)(x7+1))))
  assign t625 = (t578 ^ t579);

  // depth 3  XOR2(t580, t581) -> (((x2x3)((x4+1)(x6+1))) + ((x3x5)((x4+1)(x6+1))))
  assign t626 = (t580 ^ t581);

  // depth 3  XOR2(t582, t583) -> (((x0x2)(x6(x7+1))) + ((x1x5)(x7(x6+1))))
  assign t627 = (t582 ^ t583);

  // depth 3  XOR2(t584, t383) -> (((x2x4)(x6(x5+1))) + ((x0x1)x2))
  assign t628 = (t584 ^ t383);

  // depth 3  XOR2(t595, t596) -> (((x0x2)x3) + ((x1x2)x5))
  assign t629 = (t595 ^ t596);

  // depth 3  XOR2(t597, t598) -> (((x1x4)x5) + ((x2x3)x5))
  assign t630 = (t597 ^ t598);

  // depth 3  XOR2(t599, t224) -> (((x4x5)x7) + ((x0x3)(x4x6)))
  assign t631 = (t599 ^ t224);

  // depth 3  XOR2(t37, t600) -> (((x0x3)(x4x7)) + ((x1x2)(x6x7)))
  assign t632 = (t37 ^ t600);

  // depth 3  XOR2(t496, t388) -> (((x1x3)(x5x6)) + ((x2x3)(x4x7)))
  assign t633 = (t496 ^ t388);

  // depth 4  XOR2(t406, t623) -> ((((x0x4)((x1+1)(x3+1))) + ((x0x7)((x1+1)(x3+1)))) + (((x0x1)((x5+1)(x6+1))) + ((x2x4)((x0+1)(x5+1)))))
  assign t634 = (t406 ^ t623);

  // depth 4  XOR2(t624, t625) -> ((((x0x3)((x4+1)(x5+1))) + ((x3x7)((x1+1)(x2+1)))) + (((x2x4)((x1+1)(x7+1))) + ((x3x4)((x1+1)(x7+1)))))
  assign t635 = (t624 ^ t625);

  // depth 4  XOR2(t626, t627) -> ((((x2x3)((x4+1)(x6+1))) + ((x3x5)((x4+1)(x6+1)))) + (((x0x2)(x6(x7+1))) + ((x1x5)(x7(x6+1)))))
  assign t636 = (t626 ^ t627);

  // depth 4  XOR2(t628, t629) -> ((((x2x4)(x6(x5+1))) + ((x0x1)x2)) + (((x0x2)x3) + ((x1x2)x5)))
  assign t637 = (t628 ^ t629);

  // depth 4  XOR2(t630, t631) -> ((((x1x4)x5) + ((x2x3)x5)) + (((x4x5)x7) + ((x0x3)(x4x6))))
  assign t638 = (t630 ^ t631);

  // depth 4  XOR2(t632, t633) -> ((((x0x3)(x4x7)) + ((x1x2)(x6x7))) + (((x1x3)(x5x6)) + ((x2x3)(x4x7))))
  assign t639 = (t632 ^ t633);

  // depth 5  XOR2(t634, t635) -> (((((x0x4)((x1+1)(x3+1))) + ((x0x7)((x1+1)(x3+1)))) + (((x0x1)((x5+1)(x6+1))) + ((x2x4)((x0+1)(x5+1))))) + ((((x0x3)((x4+1)(x5+1))) + ((x3x7)((x1+1)(x2+1)))) + (((x2x4)((x1+1)(x7+1))) + ((x3x4)((x1+1)(x7+1))))))
  assign t640 = (t634 ^ t635);

  // depth 5  XOR2(t636, t637) -> (((((x2x3)((x4+1)(x6+1))) + ((x3x5)((x4+1)(x6+1)))) + (((x0x2)(x6(x7+1))) + ((x1x5)(x7(x6+1))))) + ((((x2x4)(x6(x5+1))) + ((x0x1)x2)) + (((x0x2)x3) + ((x1x2)x5))))
  assign t641 = (t636 ^ t637);

  // depth 5  XOR2(t638, t639) -> (((((x1x4)x5) + ((x2x3)x5)) + (((x4x5)x7) + ((x0x3)(x4x6)))) + ((((x0x3)(x4x7)) + ((x1x2)(x6x7))) + (((x1x3)(x5x6)) + ((x2x3)(x4x7)))))
  assign t642 = (t638 ^ t639);

  // depth 6  XOR2(t640, t641) -> ((((((x0x4)((x1+1)(x3+1))) + ((x0x7)((x1+1)(x3+1)))) + (((x0x1)((x5+1)(x6+1))) + ((x2x4)((x0+1)(x5+1))))) + ((((x0x3)((x4+1)(x5+1))) + ((x3x7)((x1+1)(x2+1)))) + (((x2x4)((x1+1)(x7+1))) + ((x3x4)((x1+1)(x7+1)))))) + (((((x2x3)((x4+1)(x6+1))) + ((x3x5)((x4+1)(x6+1)))) + (((x0x2)(x6(x7+1))) + ((x1x5)(x7(x6+1))))) + ((((x2x4)(x6(x5+1))) + ((x0x1)x2)) + (((x0x2)x3) + ((x1x2)x5)))))
  assign t643 = (t640 ^ t641);

  // depth 6  XOR2(t642, t125) -> ((((((x1x4)x5) + ((x2x3)x5)) + (((x4x5)x7) + ((x0x3)(x4x6)))) + ((((x0x3)(x4x7)) + ((x1x2)(x6x7))) + (((x1x3)(x5x6)) + ((x2x3)(x4x7))))) + ((x2x4)(x6x7)))
  assign t644 = (t642 ^ t125);

  // depth 7  XOR2(t643, t644) -> (((((((x0x4)((x1+1)(x3+1))) + ((x0x7)((x1+1)(x3+1)))) + (((x0x1)((x5+1)(x6+1))) + ((x2x4)((x0+1)(x5+1))))) + ((((x0x3)((x4+1)(x5+1))) + ((x3x7)((x1+1)(x2+1)))) + (((x2x4)((x1+1)(x7+1))) + ((x3x4)((x1+1)(x7+1)))))) + (((((x2x3)((x4+1)(x6+1))) + ((x3x5)((x4+1)(x6+1)))) + (((x0x2)(x6(x7+1))) + ((x1x5)(x7(x6+1))))) + ((((x2x4)(x6(x5+1))) + ((x0x1)x2)) + (((x0x2)x3) + ((x1x2)x5))))) + ((((((x1x4)x5) + ((x2x3)x5)) + (((x4x5)x7) + ((x0x3)(x4x6)))) + ((((x0x3)(x4x7)) + ((x1x2)(x6x7))) + (((x1x3)(x5x6)) + ((x2x3)(x4x7))))) + ((x2x4)(x6x7))))
  assign t645 = (t643 ^ t644);

  // depth 4  XOR2(t563, t564) -> ((((x0x1)(x2x4))((x3+1)(x7+1))) + (((x0x2)(x5x6))((x1+1)(x4+1))))
  assign t646 = (t563 ^ t564);

  // depth 4  XOR2(t565, t567) -> ((((x0x2)(x3x4))((x5+1)(x6+1))) + (((x1x2)(x4x5))((x3+1)(x6+1))))
  assign t647 = (t565 ^ t567);

  // depth 4  XOR2(t568, t569) -> ((((x1x3)(x6x7))((x2+1)(x4+1))) + (((x3x4)(x5x7))((x2+1)(x6+1))))
  assign t648 = (t568 ^ t569);

  // depth 4  XOR2(t69, t229) -> ((((x0x1)(x5x6))(x7(x3+1))) + (((x0x1)(x2x3))(x7(x4+1))))
  assign t649 = (t69 ^ t229);

  // depth 4  XOR2(t354, t570) -> ((((x1x3)(x4x5))(x6(x0+1))) + (((x0x2)(x4x5))(x7(x3+1))))
  assign t650 = (t354 ^ t570);

  // depth 4  XOR2(t573, t574) -> ((((x1x2)(x4x5))(x7(x6+1))) + (((x0x2)(x3x5))(x6(x4+1))))
  assign t651 = (t573 ^ t574);

  // depth 4  XOR2(t586, t587) -> ((((x0x1)(x6x7))(x2+1)) + (((x0x1)(x4x7))(x3+1)))
  assign t652 = (t586 ^ t587);

  // depth 4  XOR2(t589, t590) -> ((((x0x4)(x6x7))(x1+1)) + (((x0x2)(x4x7))(x6+1)))
  assign t653 = (t589 ^ t590);

  // depth 4  XOR2(t592, t593) -> ((((x0x2)(x5x7))(x6+1)) + (((x1x4)(x6x7))(x5+1)))
  assign t654 = (t592 ^ t593);

  // depth 4  XOR2(t594, t601) -> ((((x2x3)(x6x7))(x5+1)) + (((x0x1)(x2x3))x5))
  assign t655 = (t594 ^ t601);

  // depth 4  XOR2(t602, t603) -> ((((x0x1)(x2x3))x6) + (((x0x1)(x2x4))x6))
  assign t656 = (t602 ^ t603);

  // depth 4  XOR2(t604, t605) -> ((((x0x1)(x3x4))x5) + (((x0x1)(x3x5))x7))
  assign t657 = (t604 ^ t605);

  // depth 4  XOR2(t130, t606) -> ((((x1x2)(x3x4))x6) + (((x1x3)(x4x5))x7))
  assign t658 = (t130 ^ t606);

  // depth 5  XOR2(t646, t647) -> (((((x0x1)(x2x4))((x3+1)(x7+1))) + (((x0x2)(x5x6))((x1+1)(x4+1)))) + ((((x0x2)(x3x4))((x5+1)(x6+1))) + (((x1x2)(x4x5))((x3+1)(x6+1)))))
  assign t659 = (t646 ^ t647);

  // depth 5  XOR2(t648, t649) -> (((((x1x3)(x6x7))((x2+1)(x4+1))) + (((x3x4)(x5x7))((x2+1)(x6+1)))) + ((((x0x1)(x5x6))(x7(x3+1))) + (((x0x1)(x2x3))(x7(x4+1)))))
  assign t660 = (t648 ^ t649);

  // depth 5  XOR2(t650, t184) -> (((((x1x3)(x4x5))(x6(x0+1))) + (((x0x2)(x4x5))(x7(x3+1)))) + ((((x0x3)(x5x7))((x4+1)(x6+1))) + (((x1x2)(x3x5))((x6+1)(x7+1)))))
  assign t661 = (t650 ^ t184);

  // depth 5  XOR2(t651, t652) -> (((((x1x2)(x4x5))(x7(x6+1))) + (((x0x2)(x3x5))(x6(x4+1)))) + ((((x0x1)(x6x7))(x2+1)) + (((x0x1)(x4x7))(x3+1))))
  assign t662 = (t651 ^ t652);

  // depth 5  XOR2(t653, t654) -> (((((x0x4)(x6x7))(x1+1)) + (((x0x2)(x4x7))(x6+1))) + ((((x0x2)(x5x7))(x6+1)) + (((x1x4)(x6x7))(x5+1))))
  assign t663 = (t653 ^ t654);

  // depth 5  XOR2(t655, t656) -> (((((x2x3)(x6x7))(x5+1)) + (((x0x1)(x2x3))x5)) + ((((x0x1)(x2x3))x6) + (((x0x1)(x2x4))x6)))
  assign t664 = (t655 ^ t656);

  // depth 5  XOR2(t657, t658) -> (((((x0x1)(x3x4))x5) + (((x0x1)(x3x5))x7)) + ((((x1x2)(x3x4))x6) + (((x1x3)(x4x5))x7)))
  assign t665 = (t657 ^ t658);

  // depth 6  XOR2(t659, t660) -> ((((((x0x1)(x2x4))((x3+1)(x7+1))) + (((x0x2)(x5x6))((x1+1)(x4+1)))) + ((((x0x2)(x3x4))((x5+1)(x6+1))) + (((x1x2)(x4x5))((x3+1)(x6+1))))) + (((((x1x3)(x6x7))((x2+1)(x4+1))) + (((x3x4)(x5x7))((x2+1)(x6+1)))) + ((((x0x1)(x5x6))(x7(x3+1))) + (((x0x1)(x2x3))(x7(x4+1))))))
  assign t666 = (t659 ^ t660);

  // depth 6  XOR2(t661, t662) -> ((((((x1x3)(x4x5))(x6(x0+1))) + (((x0x2)(x4x5))(x7(x3+1)))) + ((((x0x3)(x5x7))((x4+1)(x6+1))) + (((x1x2)(x3x5))((x6+1)(x7+1))))) + (((((x1x2)(x4x5))(x7(x6+1))) + (((x0x2)(x3x5))(x6(x4+1)))) + ((((x0x1)(x6x7))(x2+1)) + (((x0x1)(x4x7))(x3+1)))))
  assign t667 = (t661 ^ t662);

  // depth 6  XOR2(t663, t664) -> ((((((x0x4)(x6x7))(x1+1)) + (((x0x2)(x4x7))(x6+1))) + ((((x0x2)(x5x7))(x6+1)) + (((x1x4)(x6x7))(x5+1)))) + (((((x2x3)(x6x7))(x5+1)) + (((x0x1)(x2x3))x5)) + ((((x0x1)(x2x3))x6) + (((x0x1)(x2x4))x6))))
  assign t668 = (t663 ^ t664);

  // depth 7  XOR2(t666, t667) -> (((((((x0x1)(x2x4))((x3+1)(x7+1))) + (((x0x2)(x5x6))((x1+1)(x4+1)))) + ((((x0x2)(x3x4))((x5+1)(x6+1))) + (((x1x2)(x4x5))((x3+1)(x6+1))))) + (((((x1x3)(x6x7))((x2+1)(x4+1))) + (((x3x4)(x5x7))((x2+1)(x6+1)))) + ((((x0x1)(x5x6))(x7(x3+1))) + (((x0x1)(x2x3))(x7(x4+1)))))) + ((((((x1x3)(x4x5))(x6(x0+1))) + (((x0x2)(x4x5))(x7(x3+1)))) + ((((x0x3)(x5x7))((x4+1)(x6+1))) + (((x1x2)(x3x5))((x6+1)(x7+1))))) + (((((x1x2)(x4x5))(x7(x6+1))) + (((x0x2)(x3x5))(x6(x4+1)))) + ((((x0x1)(x6x7))(x2+1)) + (((x0x1)(x4x7))(x3+1))))))
  assign t669 = (t666 ^ t667);

  // depth 7  XOR2(t668, t665) -> (((((((x0x4)(x6x7))(x1+1)) + (((x0x2)(x4x7))(x6+1))) + ((((x0x2)(x5x7))(x6+1)) + (((x1x4)(x6x7))(x5+1)))) + (((((x2x3)(x6x7))(x5+1)) + (((x0x1)(x2x3))x5)) + ((((x0x1)(x2x3))x6) + (((x0x1)(x2x4))x6)))) + (((((x0x1)(x3x4))x5) + (((x0x1)(x3x5))x7)) + ((((x1x2)(x3x4))x6) + (((x1x3)(x4x5))x7))))
  assign t670 = (t668 ^ t665);

  // depth 8  XOR2(t669, t670) -> ((((((((x0x1)(x2x4))((x3+1)(x7+1))) + (((x0x2)(x5x6))((x1+1)(x4+1)))) + ((((x0x2)(x3x4))((x5+1)(x6+1))) + (((x1x2)(x4x5))((x3+1)(x6+1))))) + (((((x1x3)(x6x7))((x2+1)(x4+1))) + (((x3x4)(x5x7))((x2+1)(x6+1)))) + ((((x0x1)(x5x6))(x7(x3+1))) + (((x0x1)(x2x3))(x7(x4+1)))))) + ((((((x1x3)(x4x5))(x6(x0+1))) + (((x0x2)(x4x5))(x7(x3+1)))) + ((((x0x3)(x5x7))((x4+1)(x6+1))) + (((x1x2)(x3x5))((x6+1)(x7+1))))) + (((((x1x2)(x4x5))(x7(x6+1))) + (((x0x2)(x3x5))(x6(x4+1)))) + ((((x0x1)(x6x7))(x2+1)) + (((x0x1)(x4x7))(x3+1)))))) + (((((((x0x4)(x6x7))(x1+1)) + (((x0x2)(x4x7))(x6+1))) + ((((x0x2)(x5x7))(x6+1)) + (((x1x4)(x6x7))(x5+1)))) + (((((x2x3)(x6x7))(x5+1)) + (((x0x1)(x2x3))x5)) + ((((x0x1)(x2x3))x6) + (((x0x1)(x2x4))x6)))) + (((((x0x1)(x3x4))x5) + (((x0x1)(x3x5))x7)) + ((((x1x2)(x3x4))x6) + (((x1x3)(x4x5))x7)))))
  assign t671 = (t669 ^ t670);

  // depth 3  AND(t387, t241) -> (((x0x2)(x3x5))((x1+1)(x7+1)))
  assign t672 = (t387 & t241);

  // depth 3  AND(t224, t16) -> (((x0x3)(x4x6))((x1+1)(x5+1)))
  assign t673 = (t224 & t16);

  // depth 3  AND(t389, t367) -> (((x2x3)(x6x7))((x0+1)(x5+1)))
  assign t674 = (t389 & t367);

  // depth 1  AND(t19, t1) -> ((x2+1)(x5+1))
  assign t675 = (t19 & t1);

  // depth 3  AND(t588, t675) -> (((x0x4)(x6x7))((x2+1)(x5+1)))
  assign t676 = (t588 & t675);

  // depth 3  AND(t33, t675) -> (((x1x3)(x6x7))((x2+1)(x5+1)))
  assign t677 = (t33 & t675);

  // depth 3  AND(t459, t89) -> (((x4x5)(x6x7))((x1+1)(x2+1)))
  assign t678 = (t459 & t89);

  // depth 3  AND(t5, t220) -> (((x0x1)(x2x4))(x5(x6+1)))
  assign t679 = (t5 & t220);

  // depth 1  AND(t29, t8) -> ((x0+1)(x7+1))
  assign t680 = (t29 & t8);

  // depth 2  AND(t46, t680) -> ((x1x2)((x0+1)(x7+1)))
  assign t681 = (t46 & t680);

  // depth 2  AND(t14, t98) -> ((x0x2)((x3+1)(x4+1)))
  assign t682 = (t14 & t98);

  // depth 2  AND(t75, t98) -> ((x0x5)((x3+1)(x4+1)))
  assign t683 = (t75 & t98);

  // depth 2  AND(t35, t10) -> ((x0x3)((x6+1)(x7+1)))
  assign t684 = (t35 & t10);

  // depth 2  AND(t370, t95) -> ((x1x6)((x2+1)(x4+1)))
  assign t685 = (t370 & t95);

  // depth 2  AND(t9, t85) -> ((x2x3)((x4+1)(x5+1)))
  assign t686 = (t9 & t85);

  // depth 2  AND(t126, t59) -> ((x0x4)(x6(x2+1)))
  assign t687 = (t126 & t59);

  // depth 2  AND(t30, t357) -> ((x1x3)(x6(x4+1)))
  assign t688 = (t30 & t357);

  // depth 2  AND(t118, t357) -> ((x1x5)(x6(x4+1)))
  assign t689 = (t118 & t357);

  // depth 2  AND(t3, t103) -> ((x2x4)(x7(x5+1)))
  assign t690 = (t3 & t103);

  // depth 2  AND(t2, t92) -> ((x0x1)(x3x7))
  assign t691 = (t2 & t92);

  // depth 3  AND(t691, t19) -> (((x0x1)(x3x7))(x2+1))
  assign t692 = (t691 & t19);

  // depth 3  AND(t37, t19) -> (((x0x3)(x4x7))(x2+1))
  assign t693 = (t37 & t19);

  // depth 3  AND(t129, t1) -> (((x1x2)(x3x4))(x5+1))
  assign t694 = (t129 & t1);

  // depth 3  AND(t123, t7) -> (((x1x3)(x4x5))(x6+1))
  assign t695 = (t123 & t7);

  // depth 2  AND(t2, x5) -> ((x0x1)x5)
  assign t696 = (t2 & X5);

  // depth 2  AND(t2, x6) -> ((x0x1)x6)
  assign t697 = (t2 & X6);

  // depth 2  AND(t14, x5) -> ((x0x2)x5)
  assign t698 = (t14 & X5);

  // depth 2  AND(t102, x7) -> ((x0x6)x7)
  assign t699 = (t102 & X7);

  // depth 2  AND(t118, x7) -> ((x1x5)x7)
  assign t700 = (t118 & X7);

  // depth 2  AND(t39, x7) -> ((x5x6)x7)
  assign t701 = (t39 & X7);

  // depth 3  AND(t262, x7) -> (((x0x1)(x3x6))x7)
  assign t702 = (t262 & X7);

  // depth 3  AND(t68, x7) -> (((x0x1)(x5x6))x7)
  assign t703 = (t68 & X7);

  // depth 3  AND(t341, x7) -> (((x0x3)(x4x5))x7)
  assign t704 = (t341 & X7);

  // depth 3  AND(t129, x7) -> (((x1x2)(x3x4))x7)
  assign t705 = (t129 & X7);

  // depth 3  AND(t267, t31) -> (((x2x3)(x4x5))(x6x7))
  assign t706 = (t267 & t31);

  // depth 1  XOR2(x3, 1) -> (x3 + 1)
  assign t707 = (X3 ^ 1);

  // depth 2  XOR2(t272, t707) -> ((x0 + x1) + (x3 + 1))
  assign t708 = (t272 ^ t707);

  // depth 2  XOR2(t35, t75) -> ((x0x3) + (x0x5))
  assign t709 = (t35 ^ t75);

  // depth 2  XOR2(t46, t30) -> ((x1x2) + (x1x3))
  assign t710 = (t46 ^ t30);

  // depth 2  XOR2(t58, t25) -> ((x3x4) + (x3x5))
  assign t711 = (t58 ^ t25);

  // depth 3  XOR2(t709, t710) -> (((x0x3) + (x0x5)) + ((x1x2) + (x1x3)))
  assign t712 = (t709 ^ t710);

  // depth 3  XOR2(t278, t711) -> (((x2x3) + (x2x6)) + ((x3x4) + (x3x5)))
  assign t713 = (t278 ^ t711);

  // depth 4  XOR2(t712, t713) -> ((((x0x3) + (x0x5)) + ((x1x2) + (x1x3))) + (((x2x3) + (x2x6)) + ((x3x4) + (x3x5))))
  assign t714 = (t712 ^ t713);

  // depth 5  XOR2(t714, t15) -> (((((x0x3) + (x0x5)) + ((x1x2) + (x1x3))) + (((x2x3) + (x2x6)) + ((x3x4) + (x3x5)))) + (x4x7))
  assign t715 = (t714 ^ t15);

  // depth 3  XOR2(t106, t109) -> (((x1x4)(x5(x2+1))) + ((x2x5)(x6(x7+1))))
  assign t716 = (t106 ^ t109);

  // depth 3  XOR2(t378, t484) -> (((x3x5)(x6(x0+1))) + ((x3x5)(x7(x2+1))))
  assign t717 = (t378 ^ t484);

  // depth 3  XOR2(t582, t584) -> (((x0x2)(x6(x7+1))) + ((x2x4)(x6(x5+1))))
  assign t718 = (t582 ^ t584);

  // depth 3  XOR2(t681, t682) -> (((x1x2)((x0+1)(x7+1))) + ((x0x2)((x3+1)(x4+1))))
  assign t719 = (t681 ^ t682);

  // depth 3  XOR2(t683, t684) -> (((x0x5)((x3+1)(x4+1))) + ((x0x3)((x6+1)(x7+1))))
  assign t720 = (t683 ^ t684);

  // depth 3  XOR2(t685, t91) -> (((x1x6)((x2+1)(x4+1))) + ((x6x7)((x1+1)(x2+1))))
  assign t721 = (t685 ^ t91);

  // depth 3  XOR2(t686, t99) -> (((x2x3)((x4+1)(x5+1))) + ((x6x7)((x3+1)(x4+1))))
  assign t722 = (t686 ^ t99);

  // depth 3  XOR2(t687, t688) -> (((x0x4)(x6(x2+1))) + ((x1x3)(x6(x4+1))))
  assign t723 = (t687 ^ t688);

  // depth 3  XOR2(t689, t690) -> (((x1x5)(x6(x4+1))) + ((x2x4)(x7(x5+1))))
  assign t724 = (t689 ^ t690);

  // depth 3  XOR2(t696, t697) -> (((x0x1)x5) + ((x0x1)x6))
  assign t725 = (t696 ^ t697);

  // depth 3  XOR2(t698, t699) -> (((x0x2)x5) + ((x0x6)x7))
  assign t726 = (t698 ^ t699);

  // depth 3  XOR2(t700, t701) -> (((x1x5)x7) + ((x5x6)x7))
  assign t727 = (t700 ^ t701);

  // depth 3  XOR2(t60, t252) -> (((x0x1)(x3x4)) + ((x0x2)(x3x6)))
  assign t728 = (t60 ^ t252);

  // depth 4  XOR2(t716, t717) -> ((((x1x4)(x5(x2+1))) + ((x2x5)(x6(x7+1)))) + (((x3x5)(x6(x0+1))) + ((x3x5)(x7(x2+1)))))
  assign t729 = (t716 ^ t717);

  // depth 4  XOR2(t718, t719) -> ((((x0x2)(x6(x7+1))) + ((x2x4)(x6(x5+1)))) + (((x1x2)((x0+1)(x7+1))) + ((x0x2)((x3+1)(x4+1)))))
  assign t730 = (t718 ^ t719);

  // depth 4  XOR2(t720, t721) -> ((((x0x5)((x3+1)(x4+1))) + ((x0x3)((x6+1)(x7+1)))) + (((x1x6)((x2+1)(x4+1))) + ((x6x7)((x1+1)(x2+1)))))
  assign t731 = (t720 ^ t721);

  // depth 4  XOR2(t722, t723) -> ((((x2x3)((x4+1)(x5+1))) + ((x6x7)((x3+1)(x4+1)))) + (((x0x4)(x6(x2+1))) + ((x1x3)(x6(x4+1)))))
  assign t732 = (t722 ^ t723);

  // depth 4  XOR2(t724, t725) -> ((((x1x5)(x6(x4+1))) + ((x2x4)(x7(x5+1)))) + (((x0x1)x5) + ((x0x1)x6)))
  assign t733 = (t724 ^ t725);

  // depth 4  XOR2(t726, t727) -> ((((x0x2)x5) + ((x0x6)x7)) + (((x1x5)x7) + ((x5x6)x7)))
  assign t734 = (t726 ^ t727);

  // depth 4  XOR2(t728, t131) -> ((((x0x1)(x3x4)) + ((x0x2)(x3x6))) + ((x2x3)(x5x6)))
  assign t735 = (t728 ^ t131);

  // depth 5  XOR2(t729, t730) -> (((((x1x4)(x5(x2+1))) + ((x2x5)(x6(x7+1)))) + (((x3x5)(x6(x0+1))) + ((x3x5)(x7(x2+1))))) + ((((x0x2)(x6(x7+1))) + ((x2x4)(x6(x5+1)))) + (((x1x2)((x0+1)(x7+1))) + ((x0x2)((x3+1)(x4+1))))))
  assign t736 = (t729 ^ t730);

  // depth 5  XOR2(t731, t732) -> (((((x0x5)((x3+1)(x4+1))) + ((x0x3)((x6+1)(x7+1)))) + (((x1x6)((x2+1)(x4+1))) + ((x6x7)((x1+1)(x2+1))))) + ((((x2x3)((x4+1)(x5+1))) + ((x6x7)((x3+1)(x4+1)))) + (((x0x4)(x6(x2+1))) + ((x1x3)(x6(x4+1))))))
  assign t737 = (t731 ^ t732);

  // depth 5  XOR2(t733, t734) -> (((((x1x5)(x6(x4+1))) + ((x2x4)(x7(x5+1)))) + (((x0x1)x5) + ((x0x1)x6))) + ((((x0x2)x5) + ((x0x6)x7)) + (((x1x5)x7) + ((x5x6)x7))))
  assign t738 = (t733 ^ t734);

  // depth 6  XOR2(t736, t737) -> ((((((x1x4)(x5(x2+1))) + ((x2x5)(x6(x7+1)))) + (((x3x5)(x6(x0+1))) + ((x3x5)(x7(x2+1))))) + ((((x0x2)(x6(x7+1))) + ((x2x4)(x6(x5+1)))) + (((x1x2)((x0+1)(x7+1))) + ((x0x2)((x3+1)(x4+1)))))) + (((((x0x5)((x3+1)(x4+1))) + ((x0x3)((x6+1)(x7+1)))) + (((x1x6)((x2+1)(x4+1))) + ((x6x7)((x1+1)(x2+1))))) + ((((x2x3)((x4+1)(x5+1))) + ((x6x7)((x3+1)(x4+1)))) + (((x0x4)(x6(x2+1))) + ((x1x3)(x6(x4+1)))))))
  assign t739 = (t736 ^ t737);

  // depth 6  XOR2(t738, t735) -> ((((((x1x5)(x6(x4+1))) + ((x2x4)(x7(x5+1)))) + (((x0x1)x5) + ((x0x1)x6))) + ((((x0x2)x5) + ((x0x6)x7)) + (((x1x5)x7) + ((x5x6)x7)))) + ((((x0x1)(x3x4)) + ((x0x2)(x3x6))) + ((x2x3)(x5x6))))
  assign t740 = (t738 ^ t735);

  // depth 7  XOR2(t739, t740) -> (((((((x1x4)(x5(x2+1))) + ((x2x5)(x6(x7+1)))) + (((x3x5)(x6(x0+1))) + ((x3x5)(x7(x2+1))))) + ((((x0x2)(x6(x7+1))) + ((x2x4)(x6(x5+1)))) + (((x1x2)((x0+1)(x7+1))) + ((x0x2)((x3+1)(x4+1)))))) + (((((x0x5)((x3+1)(x4+1))) + ((x0x3)((x6+1)(x7+1)))) + (((x1x6)((x2+1)(x4+1))) + ((x6x7)((x1+1)(x2+1))))) + ((((x2x3)((x4+1)(x5+1))) + ((x6x7)((x3+1)(x4+1)))) + (((x0x4)(x6(x2+1))) + ((x1x3)(x6(x4+1))))))) + ((((((x1x5)(x6(x4+1))) + ((x2x4)(x7(x5+1)))) + (((x0x1)x5) + ((x0x1)x6))) + ((((x0x2)x5) + ((x0x6)x7)) + (((x1x5)x7) + ((x5x6)x7)))) + ((((x0x1)(x3x4)) + ((x0x2)(x3x6))) + ((x2x3)(x5x6)))))
  assign t741 = (t739 ^ t740);

  // depth 4  XOR2(t672, t673) -> ((((x0x2)(x3x5))((x1+1)(x7+1))) + (((x0x3)(x4x6))((x1+1)(x5+1))))
  assign t742 = (t672 ^ t673);

  // depth 4  XOR2(t677, t678) -> ((((x1x3)(x6x7))((x2+1)(x5+1))) + (((x4x5)(x6x7))((x1+1)(x2+1))))
  assign t743 = (t677 ^ t678);

  // depth 4  XOR2(t111, t362) -> ((((x3x4)(x5x7))(x6+1)) + (((x0x1)(x2x6))(x7(x4+1))))
  assign t744 = (t111 ^ t362);

  // depth 4  XOR2(t471, t679) -> ((((x1x2)(x3x5))(x6(x0+1))) + (((x0x1)(x2x4))(x5(x6+1))))
  assign t745 = (t471 ^ t679);

  // depth 4  XOR2(t693, t694) -> ((((x0x3)(x4x7))(x2+1)) + (((x1x2)(x3x4))(x5+1)))
  assign t746 = (t693 ^ t694);

  // depth 4  XOR2(t695, t702) -> ((((x1x3)(x4x5))(x6+1)) + (((x0x1)(x3x6))x7))
  assign t747 = (t695 ^ t702);

  // depth 4  XOR2(t703, t391) -> ((((x0x1)(x5x6))x7) + (((x0x2)(x4x5))x7))
  assign t748 = (t703 ^ t391);

  // depth 4  XOR2(t704, t130) -> ((((x0x3)(x4x5))x7) + (((x1x2)(x3x4))x6))
  assign t749 = (t704 ^ t130);

  // depth 4  XOR2(t705, t269) -> ((((x1x2)(x3x4))x7) + (((x0x1)(x2x3))(x5x6)))
  assign t750 = (t705 ^ t269);

  // depth 5  XOR2(t742, t315) -> (((((x0x2)(x3x5))((x1+1)(x7+1))) + (((x0x3)(x4x6))((x1+1)(x5+1)))) + ((((x0x3)(x5x7))((x2+1)(x6+1))) + (((x0x4)(x5x7))((x2+1)(x6+1)))))
  assign t751 = (t742 ^ t315);

  // depth 5  XOR2(t743, t744) -> (((((x1x3)(x6x7))((x2+1)(x5+1))) + (((x4x5)(x6x7))((x1+1)(x2+1)))) + ((((x3x4)(x5x7))(x6+1)) + (((x0x1)(x2x6))(x7(x4+1)))))
  assign t752 = (t743 ^ t744);

  // depth 5  XOR2(t745, t439) -> (((((x1x2)(x3x5))(x6(x0+1))) + (((x0x1)(x2x4))(x5(x6+1)))) + ((((x0x1)(x4x5))(x7(x3+1))) + (((x1x2)(x3x7))(x0+1))))
  assign t753 = (t745 ^ t439);

  // depth 5  XOR2(t746, t747) -> (((((x0x3)(x4x7))(x2+1)) + (((x1x2)(x3x4))(x5+1))) + ((((x1x3)(x4x5))(x6+1)) + (((x0x1)(x3x6))x7)))
  assign t754 = (t746 ^ t747);

  // depth 5  XOR2(t748, t749) -> (((((x0x1)(x5x6))x7) + (((x0x2)(x4x5))x7)) + ((((x0x3)(x4x5))x7) + (((x1x2)(x3x4))x6)))
  assign t755 = (t748 ^ t749);

  // depth 5  XOR2(t750, t706) -> (((((x1x2)(x3x4))x7) + (((x0x1)(x2x3))(x5x6))) + (((x2x3)(x4x5))(x6x7)))
  assign t756 = (t750 ^ t706);

  // depth 6  XOR2(t751, t752) -> ((((((x0x2)(x3x5))((x1+1)(x7+1))) + (((x0x3)(x4x6))((x1+1)(x5+1)))) + ((((x0x3)(x5x7))((x2+1)(x6+1))) + (((x0x4)(x5x7))((x2+1)(x6+1))))) + (((((x1x3)(x6x7))((x2+1)(x5+1))) + (((x4x5)(x6x7))((x1+1)(x2+1)))) + ((((x3x4)(x5x7))(x6+1)) + (((x0x1)(x2x6))(x7(x4+1))))))
  assign t757 = (t751 ^ t752);

  // depth 6  XOR2(t753, t754) -> ((((((x1x2)(x3x5))(x6(x0+1))) + (((x0x1)(x2x4))(x5(x6+1)))) + ((((x0x1)(x4x5))(x7(x3+1))) + (((x1x2)(x3x7))(x0+1)))) + (((((x0x3)(x4x7))(x2+1)) + (((x1x2)(x3x4))(x5+1))) + ((((x1x3)(x4x5))(x6+1)) + (((x0x1)(x3x6))x7))))
  assign t758 = (t753 ^ t754);

  // depth 6  XOR2(t755, t756) -> ((((((x0x1)(x5x6))x7) + (((x0x2)(x4x5))x7)) + ((((x0x3)(x4x5))x7) + (((x1x2)(x3x4))x6))) + (((((x1x2)(x3x4))x7) + (((x0x1)(x2x3))(x5x6))) + (((x2x3)(x4x5))(x6x7))))
  assign t759 = (t755 ^ t756);

  // depth 7  XOR2(t757, t758) -> (((((((x0x2)(x3x5))((x1+1)(x7+1))) + (((x0x3)(x4x6))((x1+1)(x5+1)))) + ((((x0x3)(x5x7))((x2+1)(x6+1))) + (((x0x4)(x5x7))((x2+1)(x6+1))))) + (((((x1x3)(x6x7))((x2+1)(x5+1))) + (((x4x5)(x6x7))((x1+1)(x2+1)))) + ((((x3x4)(x5x7))(x6+1)) + (((x0x1)(x2x6))(x7(x4+1)))))) + ((((((x1x2)(x3x5))(x6(x0+1))) + (((x0x1)(x2x4))(x5(x6+1)))) + ((((x0x1)(x4x5))(x7(x3+1))) + (((x1x2)(x3x7))(x0+1)))) + (((((x0x3)(x4x7))(x2+1)) + (((x1x2)(x3x4))(x5+1))) + ((((x1x3)(x4x5))(x6+1)) + (((x0x1)(x3x6))x7)))))
  assign t760 = (t757 ^ t758);

  // depth 8  XOR2(t760, t759) -> ((((((((x0x2)(x3x5))((x1+1)(x7+1))) + (((x0x3)(x4x6))((x1+1)(x5+1)))) + ((((x0x3)(x5x7))((x2+1)(x6+1))) + (((x0x4)(x5x7))((x2+1)(x6+1))))) + (((((x1x3)(x6x7))((x2+1)(x5+1))) + (((x4x5)(x6x7))((x1+1)(x2+1)))) + ((((x3x4)(x5x7))(x6+1)) + (((x0x1)(x2x6))(x7(x4+1)))))) + ((((((x1x2)(x3x5))(x6(x0+1))) + (((x0x1)(x2x4))(x5(x6+1)))) + ((((x0x1)(x4x5))(x7(x3+1))) + (((x1x2)(x3x7))(x0+1)))) + (((((x0x3)(x4x7))(x2+1)) + (((x1x2)(x3x4))(x5+1))) + ((((x1x3)(x4x5))(x6+1)) + (((x0x1)(x3x6))x7))))) + ((((((x0x1)(x5x6))x7) + (((x0x2)(x4x5))x7)) + ((((x0x3)(x4x5))x7) + (((x1x2)(x3x4))x6))) + (((((x1x2)(x3x4))x7) + (((x0x1)(x2x3))(x5x6))) + (((x2x3)(x4x5))(x6x7)))))
  assign t761 = (t760 ^ t759);

  // depth 3  AND(t11, t26) -> (((x0x1)(x2x3))((x4+1)(x6+1)))
  assign t762 = (t11 & t26);

  // depth 3  AND(t252, t372) -> (((x0x2)(x3x6))((x4+1)(x7+1)))
  assign t763 = (t252 & t372);

  // depth 2  AND(t49, t43) -> ((x1x4)(x5x7))
  assign t764 = (t49 & t43);

  // depth 3  AND(t764, t36) -> (((x1x4)(x5x7))((x2+1)(x6+1)))
  assign t765 = (t764 & t36);

  // depth 3  AND(t60, t222) -> (((x0x1)(x3x4))(x7(x6+1)))
  assign t766 = (t60 & t222);

  // depth 3  AND(t27, t222) -> (((x0x1)(x3x5))(x7(x6+1)))
  assign t767 = (t27 & t222);

  // depth 3  AND(t387, t222) -> (((x0x2)(x3x5))(x7(x6+1)))
  assign t768 = (t387 & t222);

  // depth 3  AND(t129, t108) -> (((x1x2)(x3x4))(x6(x7+1)))
  assign t769 = (t129 & t108);

  // depth 3  AND(t256, t355) -> (((x2x3)(x4x6))(x7(x0+1)))
  assign t770 = (t256 & t355);

  // depth 2  AND(t102, t243) -> ((x0x6)((x1+1)(x3+1)))
  assign t771 = (t102 & t243);

  // depth 2  AND(t126, t675) -> ((x0x4)((x2+1)(x5+1)))
  assign t772 = (t126 & t675);

  // depth 2  AND(t113, t367) -> ((x2x7)((x0+1)(x5+1)))
  assign t773 = (t113 & t367);

  // depth 2  AND(t75, t566) -> ((x0x5)((x3+1)(x6+1)))
  assign t774 = (t75 & t566);

  // depth 2  AND(t30, t85) -> ((x1x3)((x4+1)(x5+1)))
  assign t775 = (t30 & t85);

  // depth 2  AND(t112, t98) -> ((x1x7)((x3+1)(x4+1)))
  assign t776 = (t112 & t98);

  // depth 2  AND(t20, t241) -> ((x4x6)((x1+1)(x7+1)))
  assign t777 = (t20 & t241);

  // depth 2  AND(t35, t228) -> ((x0x3)(x7(x4+1)))
  assign t778 = (t35 & t228);

  // depth 2  AND(t9, t103) -> ((x2x3)(x7(x5+1)))
  assign t779 = (t9 & t103);

  // depth 2  AND(t78, t228) -> ((x3x6)(x7(x4+1)))
  assign t780 = (t78 & t228);

  // depth 3  AND(t136, t29) -> (((x1x2)(x4x5))(x0+1))
  assign t781 = (t136 & t29);

  // depth 3  AND(t63, t1) -> (((x0x2)(x4x6))(x5+1))
  assign t782 = (t63 & t1);

  // depth 3  AND(t224, t1) -> (((x0x3)(x4x6))(x5+1))
  assign t783 = (t224 & t1);

  // depth 3  AND(t131, t24) -> (((x2x3)(x5x6))(x4+1))
  assign t784 = (t131 & t24);

  // depth 2  AND(t2, x4) -> ((x0x1)x4)
  assign t785 = (t2 & X4);

  // depth 2  AND(t46, x3) -> ((x1x2)x3)
  assign t786 = (t46 & X3);

  // depth 2  AND(t46, x6) -> ((x1x2)x6)
  assign t787 = (t46 & X6);

  // depth 2  AND(t46, x7) -> ((x1x2)x7)
  assign t788 = (t46 & X7);

  // depth 2  AND(t30, x6) -> ((x1x3)x6)
  assign t789 = (t30 & X6);

  // depth 2  AND(t72, x7) -> ((x2x6)x7)
  assign t790 = (t72 & X7);

  // depth 3  AND(t56, x6) -> (((x0x1)(x2x5))x6)
  assign t791 = (t56 & X6);

  // depth 3  AND(t5, t31) -> (((x0x1)(x2x4))(x6x7))
  assign t792 = (t5 & t31);

  // depth 3  AND(t47, t31) -> (((x1x2)(x3x5))(x6x7))
  assign t793 = (t47 & t31);

  // depth 1  XOR2(x1, x2) -> (x1 + x2)
  assign t794 = (X1 ^ X2);

  // depth 1  XOR2(x4, 1) -> (x4 + 1)
  assign t795 = (X4 ^ 1);

  // depth 2  XOR2(t794, t795) -> ((x1 + x2) + (x4 + 1))
  assign t796 = (t794 ^ t795);

  // depth 2  XOR2(t14, t75) -> ((x0x2) + (x0x5))
  assign t797 = (t14 ^ t75);

  // depth 2  XOR2(t84, t112) -> ((x0x7) + (x1x7))
  assign t798 = (t84 ^ t112);

  // depth 2  XOR2(t3, t92) -> ((x2x4) + (x3x7))
  assign t799 = (t3 ^ t92);

  // depth 3  XOR2(t797, t798) -> (((x0x2) + (x0x5)) + ((x0x7) + (x1x7)))
  assign t800 = (t797 ^ t798);

  // depth 3  XOR2(t799, t65) -> (((x2x4) + (x3x7)) + (x4x5))
  assign t801 = (t799 ^ t65);

  // depth 4  XOR2(t800, t801) -> ((((x0x2) + (x0x5)) + ((x0x7) + (x1x7))) + (((x2x4) + (x3x7)) + (x4x5)))
  assign t802 = (t800 ^ t801);

  // depth 3  XOR2(t379, t483) -> (((x3x4)(x5(x2+1))) + ((x3x4)(x6(x1+1))))
  assign t803 = (t379 ^ t483);

  // depth 3  XOR2(t771, t772) -> (((x0x6)((x1+1)(x3+1))) + ((x0x4)((x2+1)(x5+1))))
  assign t804 = (t771 ^ t772);

  // depth 3  XOR2(t773, t774) -> (((x2x7)((x0+1)(x5+1))) + ((x0x5)((x3+1)(x6+1))))
  assign t805 = (t773 ^ t774);

  // depth 3  XOR2(t775, t776) -> (((x1x3)((x4+1)(x5+1))) + ((x1x7)((x3+1)(x4+1))))
  assign t806 = (t775 ^ t776);

  // depth 3  XOR2(t777, t778) -> (((x4x6)((x1+1)(x7+1))) + ((x0x3)(x7(x4+1))))
  assign t807 = (t777 ^ t778);

  // depth 3  XOR2(t779, t780) -> (((x2x3)(x7(x5+1))) + ((x3x6)(x7(x4+1))))
  assign t808 = (t779 ^ t780);

  // depth 3  XOR2(t383, t785) -> (((x0x1)x2) + ((x0x1)x4))
  assign t809 = (t383 ^ t785);

  // depth 3  XOR2(t786, t787) -> (((x1x2)x3) + ((x1x2)x6))
  assign t810 = (t786 ^ t787);

  // depth 3  XOR2(t788, t789) -> (((x1x2)x7) + ((x1x3)x6))
  assign t811 = (t788 ^ t789);

  // depth 3  XOR2(t700, t790) -> (((x1x5)x7) + ((x2x6)x7))
  assign t812 = (t700 ^ t790);

  // depth 3  XOR2(t585, t212) -> (((x0x1)(x6x7)) + ((x0x4)(x5x7)))
  assign t813 = (t585 ^ t212);

  // depth 3  XOR2(t392, t259) -> (((x3x4)(x5x6)) + ((x3x5)(x6x7)))
  assign t814 = (t392 ^ t259);

  // depth 4  XOR2(t159, t803) -> ((((x3x5)(x7(x1+1))) + ((x2x5)(x6(x7+1)))) + (((x3x4)(x5(x2+1))) + ((x3x4)(x6(x1+1)))))
  assign t815 = (t159 ^ t803);

  // depth 4  XOR2(t724, t804) -> ((((x1x5)(x6(x4+1))) + ((x2x4)(x7(x5+1)))) + (((x0x6)((x1+1)(x3+1))) + ((x0x4)((x2+1)(x5+1)))))
  assign t816 = (t724 ^ t804);

  // depth 4  XOR2(t805, t806) -> ((((x2x7)((x0+1)(x5+1))) + ((x0x5)((x3+1)(x6+1)))) + (((x1x3)((x4+1)(x5+1))) + ((x1x7)((x3+1)(x4+1)))))
  assign t817 = (t805 ^ t806);

  // depth 4  XOR2(t807, t808) -> ((((x4x6)((x1+1)(x7+1))) + ((x0x3)(x7(x4+1)))) + (((x2x3)(x7(x5+1))) + ((x3x6)(x7(x4+1)))))
  assign t818 = (t807 ^ t808);

  // depth 4  XOR2(t809, t810) -> ((((x0x1)x2) + ((x0x1)x4)) + (((x1x2)x3) + ((x1x2)x6)))
  assign t819 = (t809 ^ t810);

  // depth 4  XOR2(t811, t812) -> ((((x1x2)x7) + ((x1x3)x6)) + (((x1x5)x7) + ((x2x6)x7)))
  assign t820 = (t811 ^ t812);

  // depth 4  XOR2(t813, t814) -> ((((x0x1)(x6x7)) + ((x0x4)(x5x7))) + (((x3x4)(x5x6)) + ((x3x5)(x6x7))))
  assign t821 = (t813 ^ t814);

  // depth 5  XOR2(t815, t816) -> (((((x3x5)(x7(x1+1))) + ((x2x5)(x6(x7+1)))) + (((x3x4)(x5(x2+1))) + ((x3x4)(x6(x1+1))))) + ((((x1x5)(x6(x4+1))) + ((x2x4)(x7(x5+1)))) + (((x0x6)((x1+1)(x3+1))) + ((x0x4)((x2+1)(x5+1))))))
  assign t822 = (t815 ^ t816);

  // depth 5  XOR2(t817, t818) -> (((((x2x7)((x0+1)(x5+1))) + ((x0x5)((x3+1)(x6+1)))) + (((x1x3)((x4+1)(x5+1))) + ((x1x7)((x3+1)(x4+1))))) + ((((x4x6)((x1+1)(x7+1))) + ((x0x3)(x7(x4+1)))) + (((x2x3)(x7(x5+1))) + ((x3x6)(x7(x4+1))))))
  assign t823 = (t817 ^ t818);

  // depth 5  XOR2(t819, t820) -> (((((x0x1)x2) + ((x0x1)x4)) + (((x1x2)x3) + ((x1x2)x6))) + ((((x1x2)x7) + ((x1x3)x6)) + (((x1x5)x7) + ((x2x6)x7))))
  assign t824 = (t819 ^ t820);

  // depth 6  XOR2(t822, t823) -> ((((((x3x5)(x7(x1+1))) + ((x2x5)(x6(x7+1)))) + (((x3x4)(x5(x2+1))) + ((x3x4)(x6(x1+1))))) + ((((x1x5)(x6(x4+1))) + ((x2x4)(x7(x5+1)))) + (((x0x6)((x1+1)(x3+1))) + ((x0x4)((x2+1)(x5+1)))))) + (((((x2x7)((x0+1)(x5+1))) + ((x0x5)((x3+1)(x6+1)))) + (((x1x3)((x4+1)(x5+1))) + ((x1x7)((x3+1)(x4+1))))) + ((((x4x6)((x1+1)(x7+1))) + ((x0x3)(x7(x4+1)))) + (((x2x3)(x7(x5+1))) + ((x3x6)(x7(x4+1)))))))
  assign t825 = (t822 ^ t823);

  // depth 6  XOR2(t824, t821) -> ((((((x0x1)x2) + ((x0x1)x4)) + (((x1x2)x3) + ((x1x2)x6))) + ((((x1x2)x7) + ((x1x3)x6)) + (((x1x5)x7) + ((x2x6)x7)))) + ((((x0x1)(x6x7)) + ((x0x4)(x5x7))) + (((x3x4)(x5x6)) + ((x3x5)(x6x7)))))
  assign t826 = (t824 ^ t821);

  // depth 7  XOR2(t825, t826) -> (((((((x3x5)(x7(x1+1))) + ((x2x5)(x6(x7+1)))) + (((x3x4)(x5(x2+1))) + ((x3x4)(x6(x1+1))))) + ((((x1x5)(x6(x4+1))) + ((x2x4)(x7(x5+1)))) + (((x0x6)((x1+1)(x3+1))) + ((x0x4)((x2+1)(x5+1)))))) + (((((x2x7)((x0+1)(x5+1))) + ((x0x5)((x3+1)(x6+1)))) + (((x1x3)((x4+1)(x5+1))) + ((x1x7)((x3+1)(x4+1))))) + ((((x4x6)((x1+1)(x7+1))) + ((x0x3)(x7(x4+1)))) + (((x2x3)(x7(x5+1))) + ((x3x6)(x7(x4+1))))))) + ((((((x0x1)x2) + ((x0x1)x4)) + (((x1x2)x3) + ((x1x2)x6))) + ((((x1x2)x7) + ((x1x3)x6)) + (((x1x5)x7) + ((x2x6)x7)))) + ((((x0x1)(x6x7)) + ((x0x4)(x5x7))) + (((x3x4)(x5x6)) + ((x3x5)(x6x7))))))
  assign t827 = (t825 ^ t826);

  // depth 4  XOR2(t762, t763) -> ((((x0x1)(x2x3))((x4+1)(x6+1))) + (((x0x2)(x3x6))((x4+1)(x7+1))))
  assign t828 = (t762 ^ t763);

  // depth 4  XOR2(t765, t258) -> ((((x1x4)(x5x7))((x2+1)(x6+1))) + (((x2x4)(x5x6))(x7+1)))
  assign t829 = (t765 ^ t258);

  // depth 4  XOR2(t571, t589) -> ((((x0x4)(x5x6))(x7(x3+1))) + (((x0x4)(x6x7))(x1+1)))
  assign t830 = (t571 ^ t589);

  // depth 4  XOR2(t692, t766) -> ((((x0x1)(x3x7))(x2+1)) + (((x0x1)(x3x4))(x7(x6+1))))
  assign t831 = (t692 ^ t766);

  // depth 4  XOR2(t767, t768) -> ((((x0x1)(x3x5))(x7(x6+1))) + (((x0x2)(x3x5))(x7(x6+1))))
  assign t832 = (t767 ^ t768);

  // depth 4  XOR2(t769, t770) -> ((((x1x2)(x3x4))(x6(x7+1))) + (((x2x3)(x4x6))(x7(x0+1))))
  assign t833 = (t769 ^ t770);

  // depth 4  XOR2(t781, t782) -> ((((x1x2)(x4x5))(x0+1)) + (((x0x2)(x4x6))(x5+1)))
  assign t834 = (t781 ^ t782);

  // depth 4  XOR2(t783, t784) -> ((((x0x3)(x4x6))(x5+1)) + (((x2x3)(x5x6))(x4+1)))
  assign t835 = (t783 ^ t784);

  // depth 4  XOR2(t791, t604) -> ((((x0x1)(x2x5))x6) + (((x0x1)(x3x4))x5))
  assign t836 = (t791 ^ t604);

  // depth 4  XOR2(t268, t792) -> ((((x2x3)(x4x5))x7) + (((x0x1)(x2x4))(x6x7)))
  assign t837 = (t268 ^ t792);

  // depth 5  XOR2(t828, t829) -> (((((x0x1)(x2x3))((x4+1)(x6+1))) + (((x0x2)(x3x6))((x4+1)(x7+1)))) + ((((x1x4)(x5x7))((x2+1)(x6+1))) + (((x2x4)(x5x6))(x7+1))))
  assign t838 = (t828 ^ t829);

  // depth 5  XOR2(t540, t830) -> (((((x0x1)(x5x6))((x2+1)(x3+1))) + (((x0x5)(x6x7))((x1+1)(x2+1)))) + ((((x0x4)(x5x6))(x7(x3+1))) + (((x0x4)(x6x7))(x1+1))))
  assign t839 = (t540 ^ t830);

  // depth 5  XOR2(t831, t832) -> (((((x0x1)(x3x7))(x2+1)) + (((x0x1)(x3x4))(x7(x6+1)))) + ((((x0x1)(x3x5))(x7(x6+1))) + (((x0x2)(x3x5))(x7(x6+1)))))
  assign t840 = (t831 ^ t832);

  // depth 5  XOR2(t833, t834) -> (((((x1x2)(x3x4))(x6(x7+1))) + (((x2x3)(x4x6))(x7(x0+1)))) + ((((x1x2)(x4x5))(x0+1)) + (((x0x2)(x4x6))(x5+1))))
  assign t841 = (t833 ^ t834);

  // depth 5  XOR2(t835, t836) -> (((((x0x3)(x4x6))(x5+1)) + (((x2x3)(x5x6))(x4+1))) + ((((x0x1)(x2x5))x6) + (((x0x1)(x3x4))x5)))
  assign t842 = (t835 ^ t836);

  // depth 5  XOR2(t837, t793) -> (((((x2x3)(x4x5))x7) + (((x0x1)(x2x4))(x6x7))) + (((x1x2)(x3x5))(x6x7)))
  assign t843 = (t837 ^ t793);

  // depth 6  XOR2(t838, t839) -> ((((((x0x1)(x2x3))((x4+1)(x6+1))) + (((x0x2)(x3x6))((x4+1)(x7+1)))) + ((((x1x4)(x5x7))((x2+1)(x6+1))) + (((x2x4)(x5x6))(x7+1)))) + (((((x0x1)(x5x6))((x2+1)(x3+1))) + (((x0x5)(x6x7))((x1+1)(x2+1)))) + ((((x0x4)(x5x6))(x7(x3+1))) + (((x0x4)(x6x7))(x1+1)))))
  assign t844 = (t838 ^ t839);

  // depth 6  XOR2(t840, t841) -> ((((((x0x1)(x3x7))(x2+1)) + (((x0x1)(x3x4))(x7(x6+1)))) + ((((x0x1)(x3x5))(x7(x6+1))) + (((x0x2)(x3x5))(x7(x6+1))))) + (((((x1x2)(x3x4))(x6(x7+1))) + (((x2x3)(x4x6))(x7(x0+1)))) + ((((x1x2)(x4x5))(x0+1)) + (((x0x2)(x4x6))(x5+1)))))
  assign t845 = (t840 ^ t841);

  // depth 6  XOR2(t842, t843) -> ((((((x0x3)(x4x6))(x5+1)) + (((x2x3)(x5x6))(x4+1))) + ((((x0x1)(x2x5))x6) + (((x0x1)(x3x4))x5))) + (((((x2x3)(x4x5))x7) + (((x0x1)(x2x4))(x6x7))) + (((x1x2)(x3x5))(x6x7))))
  assign t846 = (t842 ^ t843);

  // depth 7  XOR2(t844, t845) -> (((((((x0x1)(x2x3))((x4+1)(x6+1))) + (((x0x2)(x3x6))((x4+1)(x7+1)))) + ((((x1x4)(x5x7))((x2+1)(x6+1))) + (((x2x4)(x5x6))(x7+1)))) + (((((x0x1)(x5x6))((x2+1)(x3+1))) + (((x0x5)(x6x7))((x1+1)(x2+1)))) + ((((x0x4)(x5x6))(x7(x3+1))) + (((x0x4)(x6x7))(x1+1))))) + ((((((x0x1)(x3x7))(x2+1)) + (((x0x1)(x3x4))(x7(x6+1)))) + ((((x0x1)(x3x5))(x7(x6+1))) + (((x0x2)(x3x5))(x7(x6+1))))) + (((((x1x2)(x3x4))(x6(x7+1))) + (((x2x3)(x4x6))(x7(x0+1)))) + ((((x1x2)(x4x5))(x0+1)) + (((x0x2)(x4x6))(x5+1))))))
  assign t847 = (t844 ^ t845);

  // depth 8  XOR2(t847, t846) -> ((((((((x0x1)(x2x3))((x4+1)(x6+1))) + (((x0x2)(x3x6))((x4+1)(x7+1)))) + ((((x1x4)(x5x7))((x2+1)(x6+1))) + (((x2x4)(x5x6))(x7+1)))) + (((((x0x1)(x5x6))((x2+1)(x3+1))) + (((x0x5)(x6x7))((x1+1)(x2+1)))) + ((((x0x4)(x5x6))(x7(x3+1))) + (((x0x4)(x6x7))(x1+1))))) + ((((((x0x1)(x3x7))(x2+1)) + (((x0x1)(x3x4))(x7(x6+1)))) + ((((x0x1)(x3x5))(x7(x6+1))) + (((x0x2)(x3x5))(x7(x6+1))))) + (((((x1x2)(x3x4))(x6(x7+1))) + (((x2x3)(x4x6))(x7(x0+1)))) + ((((x1x2)(x4x5))(x0+1)) + (((x0x2)(x4x6))(x5+1)))))) + ((((((x0x3)(x4x6))(x5+1)) + (((x2x3)(x5x6))(x4+1))) + ((((x0x1)(x2x5))x6) + (((x0x1)(x3x4))x5))) + (((((x2x3)(x4x5))x7) + (((x0x1)(x2x4))(x6x7))) + (((x1x2)(x3x5))(x6x7)))))
  assign t848 = (t847 ^ t846);

  // depth 3  AND(t205, t372) -> (((x0x1)(x2x6))((x4+1)(x7+1)))
  assign t849 = (t205 & t372);

  // depth 3  AND(t37, t16) -> (((x0x3)(x4x7))((x1+1)(x5+1)))
  assign t850 = (t37 & t16);

  // depth 3  AND(t347, t95) -> (((x0x3)(x6x7))((x2+1)(x4+1)))
  assign t851 = (t347 & t95);

  // depth 3  AND(t129, t215) -> (((x1x2)(x3x4))((x5+1)(x7+1)))
  assign t852 = (t129 & t215);

  // depth 3  AND(t68, t228) -> (((x0x1)(x5x6))(x7(x4+1)))
  assign t853 = (t68 & t228);

  // depth 3  AND(t267, t355) -> (((x2x3)(x4x5))(x7(x0+1)))
  assign t854 = (t267 & t355);

  // depth 3  AND(t41, t55) -> (((x0x2)(x5x6))(x7(x3+1)))
  assign t855 = (t41 & t55);

  // depth 3  AND(t123, t355) -> (((x1x3)(x4x5))(x7(x0+1)))
  assign t856 = (t123 & t355);

  // depth 2  AND(t35, t76) -> ((x0x3)((x1+1)(x6+1)))
  assign t857 = (t35 & t76);

  // depth 2  AND(t84, t93) -> ((x0x7)((x1+1)(x4+1)))
  assign t858 = (t84 & t93);

  // depth 2  AND(t3, t680) -> ((x2x4)((x0+1)(x7+1)))
  assign t859 = (t3 & t680);

  // depth 2  AND(t43, t32) -> ((x5x7)((x0+1)(x4+1)))
  assign t860 = (t43 & t32);

  // depth 2  AND(t112, t95) -> ((x1x7)((x2+1)(x4+1)))
  assign t861 = (t112 & t95);

  // depth 2  AND(t118, t566) -> ((x1x5)((x3+1)(x6+1)))
  assign t862 = (t118 & t566);

  // depth 2  AND(t113, t246) -> ((x2x7)((x5+1)(x6+1)))
  assign t863 = (t113 & t246);

  // depth 2  AND(t46, t100) -> ((x1x2)(x5(x0+1)))
  assign t864 = (t46 & t100);

  // depth 2  AND(t49, t353) -> ((x1x4)(x6(x0+1)))
  assign t865 = (t49 & t353);

  // depth 1  AND(x3, t7) -> (x3(x6+1))
  assign t866 = (X3 & t7);

  // depth 2  AND(t14, t866) -> ((x0x2)(x3(x6+1)))
  assign t867 = (t14 & t866);

  // depth 3  AND(t131, t13) -> (((x2x3)(x5x6))(x1+1))
  assign t868 = (t131 & t13);

  // depth 2  AND(t30, t43) -> ((x1x3)(x5x7))
  assign t869 = (t30 & t43);

  // depth 3  AND(t869, t7) -> (((x1x3)(x5x7))(x6+1))
  assign t870 = (t869 & t7);

  // depth 2  AND(t3, x6) -> ((x2x4)x6)
  assign t871 = (t3 & X6);

  // depth 3  AND(t27, x6) -> (((x0x1)(x3x5))x6)
  assign t872 = (t27 & X6);

  // depth 3  AND(t263, x7) -> (((x1x2)(x3x6))x7)
  assign t873 = (t263 & X7);

  // depth 3  AND(t136, x6) -> (((x1x2)(x4x5))x6)
  assign t874 = (t136 & X6);

  // depth 3  AND(t11, t43) -> (((x0x1)(x2x3))(x5x7))
  assign t875 = (t11 & t43);

  // depth 3  AND(t60, t31) -> (((x0x1)(x3x4))(x6x7))
  assign t876 = (t60 & t31);

  // depth 1  XOR2(x3, x5) -> (x3 + x5)
  assign t877 = (X3 ^ X5);

  // depth 2  XOR2(t138, t877) -> ((x0 + x2) + (x3 + x5))
  assign t878 = (t138 ^ t877);

  // depth 2  XOR2(t14, t35) -> ((x0x2) + (x0x3))
  assign t879 = (t14 ^ t35);

  // depth 2  XOR2(t102, t30) -> ((x0x6) + (x1x3))
  assign t880 = (t102 ^ t30);

  // depth 3  XOR2(t879, t880) -> (((x0x2) + (x0x3)) + ((x0x6) + (x1x3)))
  assign t881 = (t879 ^ t880);

  // depth 3  XOR2(t505, t39) -> (((x2x7) + (x3x5)) + (x5x6))
  assign t882 = (t505 ^ t39);

  // depth 4  XOR2(t881, t882) -> ((((x0x2) + (x0x3)) + ((x0x6) + (x1x3))) + (((x2x7) + (x3x5)) + (x5x6)))
  assign t883 = (t881 ^ t882);

  // depth 3  XOR2(t377, t380) -> (((x0x1)(x5(x3+1))) + ((x4x5)(x6(x2+1))))
  assign t884 = (t377 ^ t380);

  // depth 3  XOR2(t485, t780) -> (((x2x4)(x5(x7+1))) + ((x3x6)(x7(x4+1))))
  assign t885 = (t485 ^ t780);

  // depth 3  XOR2(t857, t858) -> (((x0x3)((x1+1)(x6+1))) + ((x0x7)((x1+1)(x4+1))))
  assign t886 = (t857 ^ t858);

  // depth 3  XOR2(t859, t860) -> (((x2x4)((x0+1)(x7+1))) + ((x5x7)((x0+1)(x4+1))))
  assign t887 = (t859 ^ t860);

  // depth 3  XOR2(t861, t862) -> (((x1x7)((x2+1)(x4+1))) + ((x1x5)((x3+1)(x6+1))))
  assign t888 = (t861 ^ t862);

  // depth 3  XOR2(t863, t864) -> (((x2x7)((x5+1)(x6+1))) + ((x1x2)(x5(x0+1))))
  assign t889 = (t863 ^ t864);

  // depth 3  XOR2(t865, t867) -> (((x1x4)(x6(x0+1))) + ((x0x2)(x3(x6+1))))
  assign t890 = (t865 ^ t867);

  // depth 3  XOR2(t786, t493) -> (((x1x2)x3) + ((x1x6)x7))
  assign t891 = (t786 ^ t493);

  // depth 3  XOR2(t120, t121) -> (((x2x3)x4) + ((x2x3)x7))
  assign t892 = (t120 ^ t121);

  // depth 3  XOR2(t871, t691) -> (((x2x4)x6) + ((x0x1)(x3x7)))
  assign t893 = (t871 ^ t691);

  // depth 3  XOR2(t341, t224) -> (((x0x3)(x4x5)) + ((x0x3)(x4x6)))
  assign t894 = (t341 ^ t224);

  // depth 3  XOR2(t44, t127) -> (((x0x3)(x5x7)) + ((x0x4)(x5x6)))
  assign t895 = (t44 ^ t127);

  // depth 3  XOR2(t455, t457) -> (((x0x5)(x6x7)) + ((x1x3)(x4x7)))
  assign t896 = (t455 ^ t457);

  // depth 3  XOR2(t764, t392) -> (((x1x4)(x5x7)) + ((x3x4)(x5x6)))
  assign t897 = (t764 ^ t392);

  // depth 4  XOR2(t884, t885) -> ((((x0x1)(x5(x3+1))) + ((x4x5)(x6(x2+1)))) + (((x2x4)(x5(x7+1))) + ((x3x6)(x7(x4+1)))))
  assign t898 = (t884 ^ t885);

  // depth 4  XOR2(t886, t887) -> ((((x0x3)((x1+1)(x6+1))) + ((x0x7)((x1+1)(x4+1)))) + (((x2x4)((x0+1)(x7+1))) + ((x5x7)((x0+1)(x4+1)))))
  assign t899 = (t886 ^ t887);

  // depth 4  XOR2(t888, t889) -> ((((x1x7)((x2+1)(x4+1))) + ((x1x5)((x3+1)(x6+1)))) + (((x2x7)((x5+1)(x6+1))) + ((x1x2)(x5(x0+1)))))
  assign t900 = (t888 ^ t889);

  // depth 4  XOR2(t890, t891) -> ((((x1x4)(x6(x0+1))) + ((x0x2)(x3(x6+1)))) + (((x1x2)x3) + ((x1x6)x7)))
  assign t901 = (t890 ^ t891);

  // depth 4  XOR2(t892, t893) -> ((((x2x3)x4) + ((x2x3)x7)) + (((x2x4)x6) + ((x0x1)(x3x7))))
  assign t902 = (t892 ^ t893);

  // depth 4  XOR2(t894, t895) -> ((((x0x3)(x4x5)) + ((x0x3)(x4x6))) + (((x0x3)(x5x7)) + ((x0x4)(x5x6))))
  assign t903 = (t894 ^ t895);

  // depth 4  XOR2(t896, t897) -> ((((x0x5)(x6x7)) + ((x1x3)(x4x7))) + (((x1x4)(x5x7)) + ((x3x4)(x5x6))))
  assign t904 = (t896 ^ t897);

  // depth 5  XOR2(t898, t899) -> (((((x0x1)(x5(x3+1))) + ((x4x5)(x6(x2+1)))) + (((x2x4)(x5(x7+1))) + ((x3x6)(x7(x4+1))))) + ((((x0x3)((x1+1)(x6+1))) + ((x0x7)((x1+1)(x4+1)))) + (((x2x4)((x0+1)(x7+1))) + ((x5x7)((x0+1)(x4+1))))))
  assign t905 = (t898 ^ t899);

  // depth 5  XOR2(t900, t901) -> (((((x1x7)((x2+1)(x4+1))) + ((x1x5)((x3+1)(x6+1)))) + (((x2x7)((x5+1)(x6+1))) + ((x1x2)(x5(x0+1))))) + ((((x1x4)(x6(x0+1))) + ((x0x2)(x3(x6+1)))) + (((x1x2)x3) + ((x1x6)x7))))
  assign t906 = (t900 ^ t901);

  // depth 5  XOR2(t902, t903) -> (((((x2x3)x4) + ((x2x3)x7)) + (((x2x4)x6) + ((x0x1)(x3x7)))) + ((((x0x3)(x4x5)) + ((x0x3)(x4x6))) + (((x0x3)(x5x7)) + ((x0x4)(x5x6)))))
  assign t907 = (t902 ^ t903);

  // depth 5  XOR2(t904, t459) -> (((((x0x5)(x6x7)) + ((x1x3)(x4x7))) + (((x1x4)(x5x7)) + ((x3x4)(x5x6)))) + ((x4x5)(x6x7)))
  assign t908 = (t904 ^ t459);

  // depth 6  XOR2(t905, t906) -> ((((((x0x1)(x5(x3+1))) + ((x4x5)(x6(x2+1)))) + (((x2x4)(x5(x7+1))) + ((x3x6)(x7(x4+1))))) + ((((x0x3)((x1+1)(x6+1))) + ((x0x7)((x1+1)(x4+1)))) + (((x2x4)((x0+1)(x7+1))) + ((x5x7)((x0+1)(x4+1)))))) + (((((x1x7)((x2+1)(x4+1))) + ((x1x5)((x3+1)(x6+1)))) + (((x2x7)((x5+1)(x6+1))) + ((x1x2)(x5(x0+1))))) + ((((x1x4)(x6(x0+1))) + ((x0x2)(x3(x6+1)))) + (((x1x2)x3) + ((x1x6)x7)))))
  assign t909 = (t905 ^ t906);

  // depth 6  XOR2(t907, t908) -> ((((((x2x3)x4) + ((x2x3)x7)) + (((x2x4)x6) + ((x0x1)(x3x7)))) + ((((x0x3)(x4x5)) + ((x0x3)(x4x6))) + (((x0x3)(x5x7)) + ((x0x4)(x5x6))))) + (((((x0x5)(x6x7)) + ((x1x3)(x4x7))) + (((x1x4)(x5x7)) + ((x3x4)(x5x6)))) + ((x4x5)(x6x7))))
  assign t910 = (t907 ^ t908);

  // depth 7  XOR2(t909, t910) -> (((((((x0x1)(x5(x3+1))) + ((x4x5)(x6(x2+1)))) + (((x2x4)(x5(x7+1))) + ((x3x6)(x7(x4+1))))) + ((((x0x3)((x1+1)(x6+1))) + ((x0x7)((x1+1)(x4+1)))) + (((x2x4)((x0+1)(x7+1))) + ((x5x7)((x0+1)(x4+1)))))) + (((((x1x7)((x2+1)(x4+1))) + ((x1x5)((x3+1)(x6+1)))) + (((x2x7)((x5+1)(x6+1))) + ((x1x2)(x5(x0+1))))) + ((((x1x4)(x6(x0+1))) + ((x0x2)(x3(x6+1)))) + (((x1x2)x3) + ((x1x6)x7))))) + ((((((x2x3)x4) + ((x2x3)x7)) + (((x2x4)x6) + ((x0x1)(x3x7)))) + ((((x0x3)(x4x5)) + ((x0x3)(x4x6))) + (((x0x3)(x5x7)) + ((x0x4)(x5x6))))) + (((((x0x5)(x6x7)) + ((x1x3)(x4x7))) + (((x1x4)(x5x7)) + ((x3x4)(x5x6)))) + ((x4x5)(x6x7)))))
  assign t911 = (t909 ^ t910);

  // depth 4  XOR2(t762, t849) -> ((((x0x1)(x2x3))((x4+1)(x6+1))) + (((x0x1)(x2x6))((x4+1)(x7+1))))
  assign t912 = (t762 ^ t849);

  // depth 4  XOR2(t850, t851) -> ((((x0x3)(x4x7))((x1+1)(x5+1))) + (((x0x3)(x6x7))((x2+1)(x4+1))))
  assign t913 = (t850 ^ t851);

  // depth 4  XOR2(t852, t260) -> ((((x1x2)(x3x4))((x5+1)(x7+1))) + (((x3x5)(x6x7))(x4+1)))
  assign t914 = (t852 ^ t260);

  // depth 4  XOR2(t351, t593) -> ((((x0x1)(x2x4))(x7(x5+1))) + (((x1x4)(x6x7))(x5+1)))
  assign t915 = (t351 ^ t593);

  // depth 4  XOR2(t770, t853) -> ((((x2x3)(x4x6))(x7(x0+1))) + (((x0x1)(x5x6))(x7(x4+1))))
  assign t916 = (t770 ^ t853);

  // depth 4  XOR2(t854, t855) -> ((((x2x3)(x4x5))(x7(x0+1))) + (((x0x2)(x5x6))(x7(x3+1))))
  assign t917 = (t854 ^ t855);

  // depth 4  XOR2(t856, t868) -> ((((x1x3)(x4x5))(x7(x0+1))) + (((x2x3)(x5x6))(x1+1)))
  assign t918 = (t856 ^ t868);

  // depth 4  XOR2(t870, t791) -> ((((x1x3)(x5x7))(x6+1)) + (((x0x1)(x2x5))x6))
  assign t919 = (t870 ^ t791);

  // depth 4  XOR2(t872, t873) -> ((((x0x1)(x3x5))x6) + (((x1x2)(x3x6))x7))
  assign t920 = (t872 ^ t873);

  // depth 4  XOR2(t874, t875) -> ((((x1x2)(x4x5))x6) + (((x0x1)(x2x3))(x5x7)))
  assign t921 = (t874 ^ t875);

  // depth 5  XOR2(t912, t913) -> (((((x0x1)(x2x3))((x4+1)(x6+1))) + (((x0x1)(x2x6))((x4+1)(x7+1)))) + ((((x0x3)(x4x7))((x1+1)(x5+1))) + (((x0x3)(x6x7))((x2+1)(x4+1)))))
  assign t922 = (t912 ^ t913);

  // depth 5  XOR2(t914, t915) -> (((((x1x2)(x3x4))((x5+1)(x7+1))) + (((x3x5)(x6x7))(x4+1))) + ((((x0x1)(x2x4))(x7(x5+1))) + (((x1x4)(x6x7))(x5+1))))
  assign t923 = (t914 ^ t915);

  // depth 5  XOR2(t916, t917) -> (((((x2x3)(x4x6))(x7(x0+1))) + (((x0x1)(x5x6))(x7(x4+1)))) + ((((x2x3)(x4x5))(x7(x0+1))) + (((x0x2)(x5x6))(x7(x3+1)))))
  assign t924 = (t916 ^ t917);

  // depth 5  XOR2(t918, t919) -> (((((x1x3)(x4x5))(x7(x0+1))) + (((x2x3)(x5x6))(x1+1))) + ((((x1x3)(x5x7))(x6+1)) + (((x0x1)(x2x5))x6)))
  assign t925 = (t918 ^ t919);

  // depth 5  XOR2(t920, t921) -> (((((x0x1)(x3x5))x6) + (((x1x2)(x3x6))x7)) + ((((x1x2)(x4x5))x6) + (((x0x1)(x2x3))(x5x7))))
  assign t926 = (t920 ^ t921);

  // depth 6  XOR2(t922, t923) -> ((((((x0x1)(x2x3))((x4+1)(x6+1))) + (((x0x1)(x2x6))((x4+1)(x7+1)))) + ((((x0x3)(x4x7))((x1+1)(x5+1))) + (((x0x3)(x6x7))((x2+1)(x4+1))))) + (((((x1x2)(x3x4))((x5+1)(x7+1))) + (((x3x5)(x6x7))(x4+1))) + ((((x0x1)(x2x4))(x7(x5+1))) + (((x1x4)(x6x7))(x5+1)))))
  assign t927 = (t922 ^ t923);

  // depth 6  XOR2(t924, t925) -> ((((((x2x3)(x4x6))(x7(x0+1))) + (((x0x1)(x5x6))(x7(x4+1)))) + ((((x2x3)(x4x5))(x7(x0+1))) + (((x0x2)(x5x6))(x7(x3+1))))) + (((((x1x3)(x4x5))(x7(x0+1))) + (((x2x3)(x5x6))(x1+1))) + ((((x1x3)(x5x7))(x6+1)) + (((x0x1)(x2x5))x6))))
  assign t928 = (t924 ^ t925);

  // depth 6  XOR2(t926, t876) -> ((((((x0x1)(x3x5))x6) + (((x1x2)(x3x6))x7)) + ((((x1x2)(x4x5))x6) + (((x0x1)(x2x3))(x5x7)))) + (((x0x1)(x3x4))(x6x7)))
  assign t929 = (t926 ^ t876);

  // depth 7  XOR2(t927, t928) -> (((((((x0x1)(x2x3))((x4+1)(x6+1))) + (((x0x1)(x2x6))((x4+1)(x7+1)))) + ((((x0x3)(x4x7))((x1+1)(x5+1))) + (((x0x3)(x6x7))((x2+1)(x4+1))))) + (((((x1x2)(x3x4))((x5+1)(x7+1))) + (((x3x5)(x6x7))(x4+1))) + ((((x0x1)(x2x4))(x7(x5+1))) + (((x1x4)(x6x7))(x5+1))))) + ((((((x2x3)(x4x6))(x7(x0+1))) + (((x0x1)(x5x6))(x7(x4+1)))) + ((((x2x3)(x4x5))(x7(x0+1))) + (((x0x2)(x5x6))(x7(x3+1))))) + (((((x1x3)(x4x5))(x7(x0+1))) + (((x2x3)(x5x6))(x1+1))) + ((((x1x3)(x5x7))(x6+1)) + (((x0x1)(x2x5))x6)))))
  assign t930 = (t927 ^ t928);

  // depth 8  XOR2(t930, t929) -> ((((((((x0x1)(x2x3))((x4+1)(x6+1))) + (((x0x1)(x2x6))((x4+1)(x7+1)))) + ((((x0x3)(x4x7))((x1+1)(x5+1))) + (((x0x3)(x6x7))((x2+1)(x4+1))))) + (((((x1x2)(x3x4))((x5+1)(x7+1))) + (((x3x5)(x6x7))(x4+1))) + ((((x0x1)(x2x4))(x7(x5+1))) + (((x1x4)(x6x7))(x5+1))))) + ((((((x2x3)(x4x6))(x7(x0+1))) + (((x0x1)(x5x6))(x7(x4+1)))) + ((((x2x3)(x4x5))(x7(x0+1))) + (((x0x2)(x5x6))(x7(x3+1))))) + (((((x1x3)(x4x5))(x7(x0+1))) + (((x2x3)(x5x6))(x1+1))) + ((((x1x3)(x5x7))(x6+1)) + (((x0x1)(x2x5))x6))))) + ((((((x0x1)(x3x5))x6) + (((x1x2)(x3x6))x7)) + ((((x1x2)(x4x5))x6) + (((x0x1)(x2x3))(x5x7)))) + (((x0x1)(x3x4))(x6x7))))
  assign t931 = (t930 ^ t929);

	assign Y0 = t931;
	assign Y1 = t848;
	assign Y2 = t761;
	assign Y3 = t671;
	assign Y4 = t339;
	assign Y5 = t203;
	assign Y6 = t452;
	assign Y7 = t562;

endmodule
